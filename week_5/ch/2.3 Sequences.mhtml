From: <Saved by Blink>
Snapshot-Content-Location: https://www.composingprograms.com/pages/23-sequences.html
Subject: 2.3 Sequences
Date: Thu, 8 May 2025 15:28:58 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----"


------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/html
Content-ID: <frame-90EBB93FB3850B705717D895B4D039F2@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.composingprograms.com/pages/23-sequences.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-fb967712-8a2e-414e-99f4-02cd24dc4f8f@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-0a2f0038-63ce-4013=
-91bc-5eaeec4eb620@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-843f2c7b-66ab-4af6-bedf-dacc1e92e340@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-578fa75a-a5f8-4764-93=
6c-535d31688dbc@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" h=
ref=3D"cid:css-3346840f-25ad-4036-8896-83442c8ffd73@mhtml.blink" /><link re=
l=3D"stylesheet" type=3D"text/css" href=3D"cid:css-51cc09e5-d7ba-4ed1-aca1-=
22988d8ebcc8@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"cid:css-2384756d-bb9e-4ccd-ac16-1463494f7638@mhtml.blink" />
  <title>2.3 Sequences</title>
 =20

  <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.composingp=
rograms.com/theme/css/cp.css">

  <!-- Stylesheets -->
  <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.composingp=
rograms.com/theme/tutor/css/pytutor.css">
  <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.composingp=
rograms.com/theme/tutor/css/ui-lightness/jquery-ui-1.8.21.custom.css">
  <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.composingp=
rograms.com/theme/tutor/css/codemirror.css">
  <link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.composingp=
rograms.com/theme/coding-js/coding.css">

  <!-- jQuery -->
 =20
 =20
 =20
 =20

  <!-- codemirror.net online code editor -->
 =20
 =20

  <!-- d3 -->
 =20

  <!-- Online Python Tutor -->
 =20

  <!-- Coding.js -->
 =20
 =20

  <!-- Composing Programs -->
 =20

 =20
   =20

</head>

<body id=3D"index" class=3D"home"><div id=3D"MathJax_Message" style=3D"disp=
lay: none;"></div>
  <div class=3D"container">

    <div class=3D"nav-main">
      <div class=3D"wrap">
        <a class=3D"nav-home" href=3D"https://www.composingprograms.com/">
          <span class=3D"nav-logo">c<span class=3D"nav-logo-compose">=E2=9A=
=AC</span>mp<span class=3D"nav-logo-compose">=E2=9A=AC</span>sing pr<span c=
lass=3D"nav-logo-compose">=E2=9A=AC</span>grams</span>
        </a>
        <ul class=3D"nav-site">
          <li><a href=3D"https://www.composingprograms.com/">Text</a></li>
          <li><a href=3D"https://www.composingprograms.com/projects.html">P=
rojects</a></li>
          <li><a href=3D"https://www.composingprograms.com/tutor.html">Tuto=
r</a></li>
          <li><a href=3D"https://www.composingprograms.com/about.html">Abou=
t</a></li>
        </ul>
      </div>
    </div>

    <section class=3D"content wrap documentationContent">
      <div class=3D"nav-docs">
	<h3>Chapter 2<a id=3D"hide_contents">Hide contents</a> </h3>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/21-introduction.h=
tml">2.1 Introduction</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/21-introduction.=
html#native-data-types">2.1.1 Native Data Types</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/22-data-abstracti=
on.html">2.2 Data Abstraction</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/22-data-abstract=
ion.html#example-rational-numbers">2.2.1 Example: Rational Numbers</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/22-data-abs=
traction.html#pairs">2.2.2 Pairs</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/22-data-abs=
traction.html#abstraction-barriers">2.2.3 Abstraction Barriers</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/22-data-abs=
traction.html#the-properties-of-data">2.2.4 The Properties of Data</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/23-sequences.html=
">2.3 Sequences</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/23-sequences.htm=
l#lists">2.3.1 Lists</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/23-sequence=
s.html#sequence-iteration">2.3.2 Sequence Iteration</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/23-sequence=
s.html#sequence-processing">2.3.3 Sequence Processing</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/23-sequence=
s.html#sequence-abstraction">2.3.4 Sequence Abstraction</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/23-sequence=
s.html#strings">2.3.5 Strings</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/23-sequence=
s.html#trees">2.3.6 Trees</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/23-sequence=
s.html#linked-lists">2.3.7 Linked Lists</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/24-mutable-data.h=
tml">2.4 Mutable Data</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/24-mutable-data.=
html#the-object-metaphor">2.4.1 The Object Metaphor</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#sequence-objects">2.4.2 Sequence Objects</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#dictionaries">2.4.3 Dictionaries</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#local-state">2.4.4 Local State</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#the-benefits-of-non-local-assignment">2.4.5 The Benefits of Non-L=
ocal Assignment</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#the-cost-of-non-local-assignment">2.4.6 The Cost of Non-Local Ass=
ignment</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#implementing-lists-and-dictionaries">2.4.7 Implementing Lists and=
 Dictionaries</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#dispatch-dictionaries">2.4.8 Dispatch Dictionaries</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/24-mutable-=
data.html#propagating-constraints">2.4.9 Propagating Constraints</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/25-object-oriente=
d-programming.html">2.5 Object-Oriented Programming</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/25-object-orient=
ed-programming.html#objects-and-classes">2.5.1 Objects and Classes</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/25-object-o=
riented-programming.html#defining-classes">2.5.2 Defining Classes</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/25-object-o=
riented-programming.html#message-passing-and-dot-expressions">2.5.3 Message=
 Passing and Dot Expressions</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/25-object-o=
riented-programming.html#class-attributes">2.5.4 Class Attributes</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/25-object-o=
riented-programming.html#inheritance">2.5.5 Inheritance</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/25-object-o=
riented-programming.html#using-inheritance">2.5.6 Using Inheritance</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/25-object-o=
riented-programming.html#multiple-inheritance">2.5.7 Multiple Inheritance</=
a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/25-object-o=
riented-programming.html#the-role-of-objects">2.5.8 The Role of Objects</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/26-implementing-c=
lasses-and-objects.html">2.6 Implementing Classes and Objects</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/26-implementing-=
classes-and-objects.html#instances">2.6.1 Instances</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/26-implemen=
ting-classes-and-objects.html#classes">2.6.2 Classes</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/26-implemen=
ting-classes-and-objects.html#using-implemented-objects">2.6.3 Using Implem=
ented Objects</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/27-object-abstrac=
tion.html">2.7 Object Abstraction</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/27-object-abstra=
ction.html#string-conversion">2.7.1 String Conversion</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/27-object-a=
bstraction.html#special-methods">2.7.2 Special Methods</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/27-object-a=
bstraction.html#multiple-representations">2.7.3 Multiple Representations</a=
>
				</li><li><a href=3D"https://www.composingprograms.com/pages/27-object-a=
bstraction.html#generic-functions">2.7.4 Generic Functions</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/28-efficiency.htm=
l">2.8 Efficiency</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/28-efficiency.ht=
ml#measuring-efficiency">2.8.1 Measuring Efficiency</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/28-efficien=
cy.html#memoization">2.8.2 Memoization</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/28-efficien=
cy.html#orders-of-growth">2.8.3 Orders of Growth</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/28-efficien=
cy.html#example-exponentiation">2.8.4 Example: Exponentiation</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/28-efficien=
cy.html#growth-categories">2.8.5 Growth Categories</a>
		</li></div>
		<div class=3D"nav-docs-section">
			<h3><a href=3D"https://www.composingprograms.com/pages/29-recursive-obje=
cts.html">2.9 Recursive Objects</a></h3>
				<li><a href=3D"https://www.composingprograms.com/pages/29-recursive-obj=
ects.html#linked-list-class">2.9.1 Linked List Class</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/29-recursiv=
e-objects.html#tree-class">2.9.2 Tree Class</a>
				</li><li><a href=3D"https://www.composingprograms.com/pages/29-recursiv=
e-objects.html#sets">2.9.3 Sets</a>
		</li></div>
      </div>

      <div class=3D"inner-content">
  <div class=3D"section" id=3D"sequences">
<h2>2.3&nbsp;&nbsp;&nbsp;Sequences</h2>
<p>A sequence is an ordered collection of values. The sequence is a powerfu=
l,
fundamental abstraction in computer science. Sequences are not instances of=
 a
particular built-in type or abstract data representation, but instead a
collection of behaviors that are shared among several different types of da=
ta.
That is, there are many kinds of sequences, but they all share common behav=
ior.
In particular,</p>
<p><strong>Length.</strong> A sequence has a finite length. An empty sequen=
ce has length 0.</p>
<p><strong>Element selection.</strong> A sequence has an element correspond=
ing to any
non-negative integer index less than its length, starting at 0 for the firs=
t
element.</p>
<p>Python includes several native data types that are sequences, the most
important of which is the <tt class=3D"docutils literal">list</tt>.</p>
<div class=3D"section" id=3D"lists">
<h3>2.3.1&nbsp;&nbsp;&nbsp;Lists</h3>
<p>A <tt class=3D"docutils literal">list</tt> value is a sequence that can =
have arbitrary length.  Lists have a
large set of built-in behaviors, along with specific syntax to express thos=
e
behaviors. We have already seen the list literal, which evaluates to a <tt =
class=3D"docutils literal">list</tt>
instance, as well as an element selection expression that evaluates to a va=
lue
in the list. The built-in <tt class=3D"docutils literal">len</tt> function =
returns the length of a sequence.
Below, <tt class=3D"docutils literal">digits</tt> is a list with four eleme=
nts. The element at index 3 is 8.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">digits</span> <span class=3D"o">=3D</span> <span c=
lass=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">,</span> <s=
pan class=3D"mi">8</span><span class=3D"p">,</span> <span class=3D"mi">2</s=
pan><span class=3D"p">,</span> <span class=3D"mi">8</span><span class=3D"p"=
>]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">len</span><span c=
lass=3D"p">(</span><span class=3D"n">digits</span><span class=3D"p">)</span=
>
<span class=3D"go">4</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">digits</span><span=
 class=3D"p">[</span><span class=3D"mi">3</span><span class=3D"p">]</span>
<span class=3D"go">8</span>
</pre></div>

<p>Additionally, lists can be added together and multiplied by integers.  F=
or
sequences, addition and multiplication do not add or multiply elements, but
instead combine and replicate the sequences themselves. That is, the <tt cl=
ass=3D"docutils literal">add</tt>
function in the <tt class=3D"docutils literal">operator</tt> module (and th=
e <tt class=3D"docutils literal">+</tt> operator) yields a list that
is the concatenation of the added arguments.  The <tt class=3D"docutils lit=
eral">mul</tt> function in
<tt class=3D"docutils literal">operator</tt> (and the <tt class=3D"docutils=
 literal">*</tt> operator) can take a list and an integer <tt class=3D"docu=
tils literal">k</tt> to
return the list that consists of <tt class=3D"docutils literal">k</tt> repe=
titions of the original list.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"p">[</span><span class=3D"mi">2</span><span class=3D"=
p">,</span> <span class=3D"mi">7</span><span class=3D"p">]</span> <span cla=
ss=3D"o">+</span> <span class=3D"n">digits</span> <span class=3D"o">*</span=
> <span class=3D"mi">2</span>
<span class=3D"go">[2, 7, 1, 8, 2, 8, 1, 8, 2, 8]</span>
</pre></div>

<p>Any values can be included in a list, including another list. Element se=
lection
can be applied multiple times in order to select a deeply nested element in=
 a
list containing lists.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">pairs</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"p">[[</span><span class=3D"mi">10</span><span class=3D"p">,</span> <=
span class=3D"mi">20</span><span class=3D"p">],</span> <span class=3D"p">[<=
/span><span class=3D"mi">30</span><span class=3D"p">,</span> <span class=3D=
"mi">40</span><span class=3D"p">]]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">pairs</span><span =
class=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">]</span>
<span class=3D"go">[30, 40]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">pairs</span><span =
class=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">][</span><=
span class=3D"mi">0</span><span class=3D"p">]</span>
<span class=3D"go">30</span>
</pre></div>

</div>
<div class=3D"section" id=3D"sequence-iteration">
<h3>2.3.2&nbsp;&nbsp;&nbsp;Sequence Iteration</h3>
<p>In many cases, we would like to iterate over the elements of a sequence =
and
perform some computation for each element in turn.  This pattern is so comm=
on
that Python has an additional control statement to process sequential data:=
 the
<tt class=3D"docutils literal">for</tt> statement.</p>
<p>Consider the problem of counting how many times a value appears in a seq=
uence.
We can implement a function to compute this count using a <tt class=3D"docu=
tils literal">while</tt> loop.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">count</span><span cl=
ass=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">,</span> <spa=
n class=3D"n">value</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Coun=
t the number of occurrences of value in sequence s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">total</s=
pan><span class=3D"p">,</span> <span class=3D"n">index</span> <span class=
=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">,</span> <sp=
an class=3D"mi">0</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">while</s=
pan> <span class=3D"n">index</span> <span class=3D"o">&lt;</span> <span cla=
ss=3D"nb">len</span><span class=3D"p">(</span><span class=3D"n">s</span><sp=
an class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">if</=
span> <span class=3D"n">s</span><span class=3D"p">[</span><span class=3D"n"=
>index</span><span class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <sp=
an class=3D"n">value</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>            <span class=3D"n">=
total</span> <span class=3D"o">=3D</span> <span class=3D"n">total</span> <s=
pan class=3D"o">+</span> <span class=3D"mi">1</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">inde=
x</span> <span class=3D"o">=3D</span> <span class=3D"n">index</span> <span =
class=3D"o">+</span> <span class=3D"mi">1</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">total</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">count</span><span class=3D"p">(</span><span class=
=3D"n">digits</span><span class=3D"p">,</span> <span class=3D"mi">8</span><=
span class=3D"p">)</span>
<span class=3D"go">2</span>
</pre></div>

<p>The Python <tt class=3D"docutils literal">for</tt> statement can simplif=
y this function body by iterating over
the element values directly without introducing the name <tt class=3D"docut=
ils literal">index</tt> at all.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">count</span><span cl=
ass=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">,</span> <spa=
n class=3D"n">value</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Coun=
t the number of occurrences of value in sequence s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">total</s=
pan> <span class=3D"o">=3D</span> <span class=3D"mi">0</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">for</spa=
n> <span class=3D"n">elem</span> <span class=3D"ow">in</span> <span class=
=3D"n">s</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">if</=
span> <span class=3D"n">elem</span> <span class=3D"o">=3D=3D</span> <span c=
lass=3D"n">value</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>            <span class=3D"n">=
total</span> <span class=3D"o">=3D</span> <span class=3D"n">total</span> <s=
pan class=3D"o">+</span> <span class=3D"mi">1</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">total</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">count</span><span class=3D"p">(</span><span class=
=3D"n">digits</span><span class=3D"p">,</span> <span class=3D"mi">8</span><=
span class=3D"p">)</span>
<span class=3D"go">2</span>
</pre></div>

<p>A <tt class=3D"docutils literal">for</tt> statement consists of a single=
 clause with the form:</p>
<pre class=3D"literal-block">for &lt;name&gt; in &lt;expression&gt;:
    &lt;suite&gt;
</pre>
<p>A <tt class=3D"docutils literal">for</tt> statement is executed by the f=
ollowing procedure:</p>
<ol class=3D"arabic simple">
<li>Evaluate the header <tt class=3D"docutils literal">&lt;expression&gt;</=
tt>, which must yield an iterable value.</li>
<li>For each element value in that iterable value, in order:<ol class=3D"up=
peralpha">
<li>Bind <tt class=3D"docutils literal">&lt;name&gt;</tt> to that value in =
the current frame.</li>
<li>Execute the <tt class=3D"docutils literal">&lt;suite&gt;</tt>.</li>
</ol>
</li>
</ol>
<p>This execution procedure refers to <em>iterable values</em>. Lists are a=
 type of
sequence, and sequences are iterable values. Their elements are considered
in their sequential order.  Python includes other iterable types, but we wi=
ll
focus on sequences for now; the general definition of the term "iterable"
appears in the section on iterators in Chapter 4.</p>
<p>An important consequence of this evaluation procedure is that <tt class=
=3D"docutils literal">&lt;name&gt;</tt> will be
bound to the last element of the sequence after the <tt class=3D"docutils l=
iteral">for</tt> statement is
executed.  The <tt class=3D"docutils literal">for</tt> loop introduces yet =
another way in which the
environment can be updated by a statement.</p>
<p><strong>Sequence unpacking.</strong> A common pattern in programs is to =
have a sequence of
elements that are themselves sequences, but all of a fixed length. A <tt cl=
ass=3D"docutils literal">for</tt>
statement may include multiple names in its header to "unpack" each element
sequence into its respective elements.  For example, we may have a list of
two-element lists.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">pairs</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"p">[[</span><span class=3D"mi">1</span><span class=3D"p">,</span> <s=
pan class=3D"mi">2</span><span class=3D"p">],</span> <span class=3D"p">[</s=
pan><span class=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"mi=
">2</span><span class=3D"p">],</span> <span class=3D"p">[</span><span class=
=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"mi">3</span><span=
 class=3D"p">],</span> <span class=3D"p">[</span><span class=3D"mi">4</span=
><span class=3D"p">,</span> <span class=3D"mi">4</span><span class=3D"p">]]=
</span>
</pre></div>

<p>and wish to find the number of these pairs that have the same first and =
second
element.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">same_count</span> <span class=3D"o">=3D</span> <sp=
an class=3D"mi">0</span>
</pre></div>

<p>The following <tt class=3D"docutils literal">for</tt> statement with two=
 names in its header will bind each name
<tt class=3D"docutils literal">x</tt> and <tt class=3D"docutils literal">y<=
/tt> to the first and second elements in each pair, respectively.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">for</span> <span class=3D"n">x</span><span class=
=3D"p">,</span> <span class=3D"n">y</span> <span class=3D"ow">in</span> <sp=
an class=3D"n">pairs</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">x</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"n">y</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">same=
_count</span> <span class=3D"o">=3D</span> <span class=3D"n">same_count</sp=
an> <span class=3D"o">+</span> <span class=3D"mi">1</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">same_count</span>
<span class=3D"go">2</span>
</pre></div>

<p>This pattern of binding multiple names to multiple values in a fixed-len=
gth
sequence is called <em>sequence unpacking</em>; it is the same pattern that=
 we see in
assignment statements that bind multiple names to multiple values.</p>
<p><strong>Ranges.</strong> A <tt class=3D"docutils literal">range</tt> is =
another built-in type of sequence in Python, which
represents a range of integers.  Ranges are created with <tt class=3D"docut=
ils literal">range</tt>, which takes
two integer arguments: the first number and one beyond the last number in t=
he
desired range.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"nb">range</span><span class=3D"p">(</span><span class=
=3D"mi">1</span><span class=3D"p">,</span> <span class=3D"mi">10</span><spa=
n class=3D"p">)</span>  <span class=3D"c1"># Includes 1, but not 10</span>
<span class=3D"go">range(1, 10)</span>
</pre></div>

<p>Calling the <tt class=3D"docutils literal">list</tt> constructor on a ra=
nge evaluates to a list with the same
elements as the range, so that the elements can be easily inspected.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"nb">list</span><span class=3D"p">(</span><span class=
=3D"nb">range</span><span class=3D"p">(</span><span class=3D"mi">5</span><s=
pan class=3D"p">,</span> <span class=3D"mi">8</span><span class=3D"p">))</s=
pan>
<span class=3D"go">[5, 6, 7]</span>
</pre></div>

<p>If only one argument is given, it is interpreted as one beyond the last =
value
for a range that starts at 0.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"nb">list</span><span class=3D"p">(</span><span class=
=3D"nb">range</span><span class=3D"p">(</span><span class=3D"mi">4</span><s=
pan class=3D"p">))</span>
<span class=3D"go">[0, 1, 2, 3]</span>
</pre></div>

<p>Ranges commonly appear as the expression in a <tt class=3D"docutils lite=
ral">for</tt> header to specify the
number of times that the suite should be executed: A common convention is t=
o
use a single underscore character for the name in the <tt class=3D"docutils=
 literal">for</tt> header if the
name is unused in the suite:</p>
<pre class=3D"literal-block">&gt;&gt;&gt; for _ in range(3):
        print('Go Bears!')

Go Bears!
Go Bears!
Go Bears!
</pre>
<p>This underscore is just another name in the environment as far as the
interpreter is concerned, but has a conventional meaning among programmers =
that
indicates the name will not appear in any future expressions.</p>
</div>
<div class=3D"section" id=3D"sequence-processing">
<h3>2.3.3&nbsp;&nbsp;&nbsp;Sequence Processing</h3>
<p>Sequences are such a common form of compound data that whole programs ar=
e often
organized around this single abstraction.  Modular components that have
sequences as both inputs and outputs can be mixed and matched to perform da=
ta
processing. Complex components can be defined by chaining together a pipeli=
ne
of sequence processing operations, each of which is simple and focused.</p>
<p><strong>List Comprehensions.</strong> Many sequence processing operation=
s can be expressed
by evaluating a fixed expression for each element in a sequence and collect=
ing
the resulting values in a result sequence. In Python, a list comprehension =
is
an expression that performs such a computation.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">odds</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">,</span> <spa=
n class=3D"mi">3</span><span class=3D"p">,</span> <span class=3D"mi">5</spa=
n><span class=3D"p">,</span> <span class=3D"mi">7</span><span class=3D"p">,=
</span> <span class=3D"mi">9</span><span class=3D"p">]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"p">[</span><span clas=
s=3D"n">x</span><span class=3D"o">+</span><span class=3D"mi">1</span> <span=
 class=3D"k">for</span> <span class=3D"n">x</span> <span class=3D"ow">in</s=
pan> <span class=3D"n">odds</span><span class=3D"p">]</span>
<span class=3D"go">[2, 4, 6, 8, 10]</span>
</pre></div>

<p>The <tt class=3D"docutils literal">for</tt> keyword above is not part of=
 a <tt class=3D"docutils literal">for</tt> statement, but instead part
of a list comprehension because it is contained within square brackets.
The sub-expression <tt class=3D"docutils literal">x+1</tt> is evaluated wit=
h <tt class=3D"docutils literal">x</tt> bound to each element of
<tt class=3D"docutils literal">odds</tt> in turn, and the resulting values =
are collected into a list.</p>
<p>Another common sequence processing operation is to select a subset of va=
lues
that satisfy some condition. List comprehensions can also express this patt=
ern,
for instance selecting all elements of <tt class=3D"docutils literal">odds<=
/tt>  that evenly divide <tt class=3D"docutils literal">25</tt>.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"p">[</span><span class=3D"n">x</span> <span class=3D"=
k">for</span> <span class=3D"n">x</span> <span class=3D"ow">in</span> <span=
 class=3D"n">odds</span> <span class=3D"k">if</span> <span class=3D"mi">25<=
/span> <span class=3D"o">%</span> <span class=3D"n">x</span> <span class=3D=
"o">=3D=3D</span> <span class=3D"mi">0</span><span class=3D"p">]</span>
<span class=3D"go">[1, 5]</span>
</pre></div>

<p>The general form of a list comprehension is:</p>
<pre class=3D"literal-block">[&lt;map expression&gt; for &lt;name&gt; in &l=
t;sequence expression&gt; if &lt;filter expression&gt;]
</pre>
<p>To evaluate a list comprehension, Python evaluates the <tt class=3D"docu=
tils literal">&lt;sequence
expression&gt;</tt>, which must return an iterable value.  Then, for each e=
lement in
order, the element value is bound to <tt class=3D"docutils literal">&lt;nam=
e&gt;</tt>, the filter expression is
evaluated, and if it yields a true value, the map expression is evaluated. =
The
values of the map expression are collected into a list.</p>
<p><strong>Aggregation.</strong> A third common pattern in sequence process=
ing is to aggregate
all values in a sequence into a single value. The built-in functions <tt cl=
ass=3D"docutils literal">sum</tt>,
<tt class=3D"docutils literal">min</tt>, and <tt class=3D"docutils literal"=
>max</tt> are all examples of aggregation functions.</p>
<p>By combining the patterns of evaluating an expression for each element,
selecting a subset of elements, and aggregating elements, we can solve prob=
lems
using a sequence processing approach.</p>
<p>A perfect number is a positive integer that is equal to the sum of its
divisors. The divisors of <tt class=3D"docutils literal">n</tt> are positiv=
e integers less than <tt class=3D"docutils literal">n</tt> that
divide evenly into <tt class=3D"docutils literal">n</tt>. Listing the divis=
ors of <tt class=3D"docutils literal">n</tt> can be expressed with a
list comprehension.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">divisors</span><span=
 class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p=
">]</span> <span class=3D"o">+</span> <span class=3D"p">[</span><span class=
=3D"n">x</span> <span class=3D"k">for</span> <span class=3D"n">x</span> <sp=
an class=3D"ow">in</span> <span class=3D"nb">range</span><span class=3D"p">=
(</span><span class=3D"mi">2</span><span class=3D"p">,</span> <span class=
=3D"n">n</span><span class=3D"p">)</span> <span class=3D"k">if</span> <span=
 class=3D"n">n</span> <span class=3D"o">%</span> <span class=3D"n">x</span>=
 <span class=3D"o">=3D=3D</span> <span class=3D"mi">0</span><span class=3D"=
p">]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">divisors</span><span class=3D"p">(</span><span cla=
ss=3D"mi">4</span><span class=3D"p">)</span>
<span class=3D"go">[1, 2]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">divisors</span><sp=
an class=3D"p">(</span><span class=3D"mi">12</span><span class=3D"p">)</spa=
n>
<span class=3D"go">[1, 2, 3, 4, 6]</span>
</pre></div>

<p>Using <tt class=3D"docutils literal">divisors</tt>, we can compute all p=
erfect numbers from 1 to 1000 with
another list comprehension. (1 is typically considered to be a perfect numb=
er
as well, but it does not qualify under our definition of <tt class=3D"docut=
ils literal">divisors</tt>.)</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"p">[</span><span class=3D"n">n</span> <span class=3D"=
k">for</span> <span class=3D"n">n</span> <span class=3D"ow">in</span> <span=
 class=3D"nb">range</span><span class=3D"p">(</span><span class=3D"mi">1</s=
pan><span class=3D"p">,</span> <span class=3D"mi">1000</span><span class=3D=
"p">)</span> <span class=3D"k">if</span> <span class=3D"nb">sum</span><span=
 class=3D"p">(</span><span class=3D"n">divisors</span><span class=3D"p">(</=
span><span class=3D"n">n</span><span class=3D"p">))</span> <span class=3D"o=
">=3D=3D</span> <span class=3D"n">n</span><span class=3D"p">]</span>
<span class=3D"go">[6, 28, 496]</span>
</pre></div>

<p>We can reuse our definition of <tt class=3D"docutils literal">divisors</=
tt> to solve another problem, finding
the minimum perimeter of a rectangle with integer side lengths, given its a=
rea.
The area of a rectangle is its height times its width. Therefore, given the
area and height, we can compute the width. We can assert that both the widt=
h
and height evenly divide the area to ensure that the side lengths are integ=
ers.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">width</span><span cl=
ass=3D"p">(</span><span class=3D"n">area</span><span class=3D"p">,</span> <=
span class=3D"n">height</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">area</span> <span class=3D"o">%</span> <span class=
=3D"n">height</span> <span class=3D"o">=3D=3D</span> <span class=3D"mi">0</=
span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">area</span> <span class=3D"o">//</span> <span class=
=3D"n">height</span>
</pre></div>

<p>The perimeter of a rectangle is the sum of its side lengths.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">perimeter</span><spa=
n class=3D"p">(</span><span class=3D"n">width</span><span class=3D"p">,</sp=
an> <span class=3D"n">height</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"mi">2</span> <span class=3D"o">*</span> <span class=3D=
"n">width</span> <span class=3D"o">+</span> <span class=3D"mi">2</span> <sp=
an class=3D"o">*</span> <span class=3D"n">height</span>
</pre></div>

<p>The height of a rectangle with integer side lengths must be a divisor of=
 its
area. We can compute the minimum perimeter by considering all heights.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">minimum_perimeter</s=
pan><span class=3D"p">(</span><span class=3D"n">area</span><span class=3D"p=
">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">heights<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">divisors</span><span =
class=3D"p">(</span><span class=3D"n">area</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">perimete=
rs</span> <span class=3D"o">=3D</span> <span class=3D"p">[</span><span clas=
s=3D"n">perimeter</span><span class=3D"p">(</span><span class=3D"n">width</=
span><span class=3D"p">(</span><span class=3D"n">area</span><span class=3D"=
p">,</span> <span class=3D"n">h</span><span class=3D"p">),</span> <span cla=
ss=3D"n">h</span><span class=3D"p">)</span> <span class=3D"k">for</span> <s=
pan class=3D"n">h</span> <span class=3D"ow">in</span> <span class=3D"n">hei=
ghts</span><span class=3D"p">]</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"nb">min</span><span class=3D"p">(</span><span class=3D=
"n">perimeters</span><span class=3D"p">)</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">area</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"mi">80</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">width</span><span =
class=3D"p">(</span><span class=3D"n">area</span><span class=3D"p">,</span>=
 <span class=3D"mi">5</span><span class=3D"p">)</span>
<span class=3D"go">16</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">perimeter</span><s=
pan class=3D"p">(</span><span class=3D"mi">16</span><span class=3D"p">,</sp=
an> <span class=3D"mi">5</span><span class=3D"p">)</span>
<span class=3D"go">42</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">perimeter</span><s=
pan class=3D"p">(</span><span class=3D"mi">10</span><span class=3D"p">,</sp=
an> <span class=3D"mi">8</span><span class=3D"p">)</span>
<span class=3D"go">36</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">minimum_perimeter<=
/span><span class=3D"p">(</span><span class=3D"n">area</span><span class=3D=
"p">)</span>
<span class=3D"go">36</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"p">[</span><span clas=
s=3D"n">minimum_perimeter</span><span class=3D"p">(</span><span class=3D"n"=
>n</span><span class=3D"p">)</span> <span class=3D"k">for</span> <span clas=
s=3D"n">n</span> <span class=3D"ow">in</span> <span class=3D"nb">range</spa=
n><span class=3D"p">(</span><span class=3D"mi">1</span><span class=3D"p">,<=
/span> <span class=3D"mi">10</span><span class=3D"p">)]</span>
<span class=3D"go">[4, 6, 8, 8, 12, 10, 16, 12, 12]</span>
</pre></div>

<p><strong>Higher-Order Functions.</strong> The common patterns we have obs=
erved in sequence
processing can be expressed using higher-order functions. First, evaluating=
 an
expression for each element in a sequence can be expressed by applying a
function to each element.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">apply_to_all</span><=
span class=3D"p">(</span><span class=3D"n">map_fn</span><span class=3D"p">,=
</span> <span class=3D"n">s</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"p">[</span><span class=3D"n">map_fn</span><span class=
=3D"p">(</span><span class=3D"n">x</span><span class=3D"p">)</span> <span c=
lass=3D"k">for</span> <span class=3D"n">x</span> <span class=3D"ow">in</spa=
n> <span class=3D"n">s</span><span class=3D"p">]</span>
</pre></div>

<p>Selecting only elements for which some expression is true can be express=
ed by
applying a function to each element.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">keep_if</span><span =
class=3D"p">(</span><span class=3D"n">filter_fn</span><span class=3D"p">,</=
span> <span class=3D"n">s</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"p">[</span><span class=3D"n">x</span> <span class=3D"k=
">for</span> <span class=3D"n">x</span> <span class=3D"ow">in</span> <span =
class=3D"n">s</span> <span class=3D"k">if</span> <span class=3D"n">filter_f=
n</span><span class=3D"p">(</span><span class=3D"n">x</span><span class=3D"=
p">)]</span>
</pre></div>

<p>Finally, many forms of aggregation can be expressed as repeatedly applyi=
ng a
two-argument function to the <tt class=3D"docutils literal">reduced</tt> va=
lue so far and each element in turn.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">reduce</span><span c=
lass=3D"p">(</span><span class=3D"n">reduce_fn</span><span class=3D"p">,</s=
pan> <span class=3D"n">s</span><span class=3D"p">,</span> <span class=3D"n"=
>initial</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">reduced<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">initial</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">for</spa=
n> <span class=3D"n">x</span> <span class=3D"ow">in</span> <span class=3D"n=
">s</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">redu=
ced</span> <span class=3D"o">=3D</span> <span class=3D"n">reduce_fn</span><=
span class=3D"p">(</span><span class=3D"n">reduced</span><span class=3D"p">=
,</span> <span class=3D"n">x</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">reduced</span>
</pre></div>

<p>For example, <tt class=3D"docutils literal">reduce</tt> can be used to m=
ultiply together all elements of a
sequence. Using <tt class=3D"docutils literal">mul</tt> as the <tt class=3D=
"docutils literal">reduce_fn</tt> and 1 as the <tt class=3D"docutils litera=
l">initial</tt> value,
<tt class=3D"docutils literal">reduce</tt> can be used to multiply together=
 a sequence of numbers.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">reduce</span><span class=3D"p">(</span><span class=
=3D"n">mul</span><span class=3D"p">,</span> <span class=3D"p">[</span><span=
 class=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"mi">4</span=
><span class=3D"p">,</span> <span class=3D"mi">8</span><span class=3D"p">],=
</span> <span class=3D"mi">1</span><span class=3D"p">)</span>
<span class=3D"go">64</span>
</pre></div>

<p>We can find perfect numbers using these higher-order functions as well.<=
/p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">divisors_of</span><s=
pan class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">):</spa=
n>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">divides_=
n</span> <span class=3D"o">=3D</span> <span class=3D"k">lambda</span> <span=
 class=3D"n">x</span><span class=3D"p">:</span> <span class=3D"n">n</span> =
<span class=3D"o">%</span> <span class=3D"n">x</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"mi">0</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p=
">]</span> <span class=3D"o">+</span> <span class=3D"n">keep_if</span><span=
 class=3D"p">(</span><span class=3D"n">divides_n</span><span class=3D"p">,<=
/span> <span class=3D"nb">range</span><span class=3D"p">(</span><span class=
=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"n">n</span><span =
class=3D"p">))</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">divisors_of</span><span class=3D"p">(</span><span =
class=3D"mi">12</span><span class=3D"p">)</span>
<span class=3D"go">[1, 2, 3, 4, 6]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span=
 class=3D"nn">operator</span> <span class=3D"kn">import</span> <span class=
=3D"n">add</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">def</span> <span c=
lass=3D"nf">sum_of_divisors</span><span class=3D"p">(</span><span class=3D"=
n">n</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">reduce</span><span class=3D"p">(</span><span class=
=3D"n">add</span><span class=3D"p">,</span> <span class=3D"n">divisors_of</=
span><span class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">=
),</span> <span class=3D"mi">0</span><span class=3D"p">)</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">perfect</span><span =
class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">sum_of_divisors</span><span class=3D"p">(</span><sp=
an class=3D"n">n</span><span class=3D"p">)</span> <span class=3D"o">=3D=3D<=
/span> <span class=3D"n">n</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">keep_if</span><span class=3D"p">(</span><span clas=
s=3D"n">perfect</span><span class=3D"p">,</span> <span class=3D"nb">range</=
span><span class=3D"p">(</span><span class=3D"mi">1</span><span class=3D"p"=
>,</span> <span class=3D"mi">1000</span><span class=3D"p">))</span>
<span class=3D"go">[1, 6, 28, 496]</span>
</pre></div>

<p><strong>Conventional Names.</strong>  In the computer science community,=
 the more common
name for <tt class=3D"docutils literal">apply_to_all</tt> is <tt class=3D"d=
ocutils literal">map</tt> and the more common name for <tt class=3D"docutil=
s literal">keep_if</tt>
is <tt class=3D"docutils literal">filter</tt>. In Python, the built-in <tt =
class=3D"docutils literal">map</tt> and <tt class=3D"docutils literal">filt=
er</tt> are
generalizations of these functions that do not return lists. These function=
s
are discussed in Chapter 4. The definitions above are equivalent to applyin=
g
the <tt class=3D"docutils literal">list</tt> constructor to the result of b=
uilt-in <tt class=3D"docutils literal">map</tt> and <tt class=3D"docutils l=
iteral">filter</tt>
calls.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">apply_to_all</span> <span class=3D"o">=3D</span> <=
span class=3D"k">lambda</span> <span class=3D"n">map_fn</span><span class=
=3D"p">,</span> <span class=3D"n">s</span><span class=3D"p">:</span> <span =
class=3D"nb">list</span><span class=3D"p">(</span><span class=3D"nb">map</s=
pan><span class=3D"p">(</span><span class=3D"n">map_fn</span><span class=3D=
"p">,</span> <span class=3D"n">s</span><span class=3D"p">))</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">keep_if</span> <sp=
an class=3D"o">=3D</span> <span class=3D"k">lambda</span> <span class=3D"n"=
>filter_fn</span><span class=3D"p">,</span> <span class=3D"n">s</span><span=
 class=3D"p">:</span> <span class=3D"nb">list</span><span class=3D"p">(</sp=
an><span class=3D"nb">filter</span><span class=3D"p">(</span><span class=3D=
"n">filter_fn</span><span class=3D"p">,</span> <span class=3D"n">s</span><s=
pan class=3D"p">))</span>
</pre></div>

<p>The <tt class=3D"docutils literal">reduce</tt> function is built into th=
e <tt class=3D"docutils literal">functools</tt> module of the Python
standard library. In this version, the <tt class=3D"docutils literal">initi=
al</tt> argument is optional.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"kn">from</span> <span class=3D"nn">functools</span> <=
span class=3D"kn">import</span> <span class=3D"n">reduce</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span=
 class=3D"nn">operator</span> <span class=3D"kn">import</span> <span class=
=3D"n">mul</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">def</span> <span c=
lass=3D"nf">product</span><span class=3D"p">(</span><span class=3D"n">s</sp=
an><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">reduce</span><span class=3D"p">(</span><span class=
=3D"n">mul</span><span class=3D"p">,</span> <span class=3D"n">s</span><span=
 class=3D"p">)</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">product</span><span class=3D"p">([</span><span cla=
ss=3D"mi">1</span><span class=3D"p">,</span> <span class=3D"mi">2</span><sp=
an class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">,</spa=
n> <span class=3D"mi">4</span><span class=3D"p">,</span> <span class=3D"mi"=
>5</span><span class=3D"p">])</span>
<span class=3D"go">120</span>
</pre></div>

<p>In Python programs, it is more common to use list comprehensions directl=
y
rather than higher-order functions, but both approaches to sequence process=
ing
are widely used.</p>
</div>
<div class=3D"section" id=3D"sequence-abstraction">
<h3>2.3.4&nbsp;&nbsp;&nbsp;Sequence Abstraction</h3>
<p>We have introduced two native data types that satisfy the sequence abstr=
action:
lists and ranges.  Both satisfy the conditions with which we began this
section: length and element selection.  Python includes two more behaviors
of sequence types that extend the sequence abstraction.</p>
<p><strong>Membership.</strong>  A value can be tested for membership in a =
sequence.  Python has
two operators <tt class=3D"docutils literal">in</tt> and <tt class=3D"docut=
ils literal">not in</tt> that evaluate to <tt class=3D"docutils literal">Tr=
ue</tt> or <tt class=3D"docutils literal">False</tt>
depending on whether an element appears in a sequence.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">digits</span>
<span class=3D"go">[1, 8, 2, 8]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"mi">2</span> <span cl=
ass=3D"ow">in</span> <span class=3D"n">digits</span>
<span class=3D"go">True</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"mi">1828</span> <span=
 class=3D"ow">not</span> <span class=3D"ow">in</span> <span class=3D"n">dig=
its</span>
<span class=3D"go">True</span>
</pre></div>

<p><strong>Slicing.</strong> Sequences contain smaller sequences within the=
m.  A <em>slice</em> of a
sequence is any contiguous span of the original sequence, designated by a p=
air
of integers. As with the <tt class=3D"docutils literal">range</tt> construc=
tor, the first integer indicates the
starting index of the slice and the second indicates one beyond the ending
index.</p>
<p>In Python, sequence slicing is expressed similarly to element selection,=
 using
square brackets.  A colon separates the starting and ending indices.  Any b=
ound
that is omitted is assumed to be an extreme value: 0 for the starting index=
,
and the length of the sequence for the ending index.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">digits</span><span class=3D"p">[</span><span class=
=3D"mi">0</span><span class=3D"p">:</span><span class=3D"mi">2</span><span =
class=3D"p">]</span>
<span class=3D"go">[1, 8]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">digits</span><span=
 class=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">:]</span>
<span class=3D"go">[8, 2, 8]</span>
</pre></div>

<p>Enumerating these additional behaviors of the Python sequence abstractio=
n gives
us an opportunity to reflect upon what constitutes a useful data abstractio=
n in
general.  The richness of an abstraction (that is, how many behaviors it
includes) has consequences.  For users of an abstraction, additional behavi=
ors
can be helpful.  On the other hand, satisfying the requirements of a rich
abstraction with a new data type can be challenging. Another negative
consequence of rich abstractions is that they take longer for users to lear=
n.</p>
<p>Sequences have a rich abstraction because they are so ubiquitous in comp=
uting
that learning a few complex behaviors is justified.  In general, most
user-defined abstractions should be kept as simple as possible.</p>
<p><strong>Further reading.</strong> Slice notation admits a variety of spe=
cial cases, such as
negative starting values, ending values, and step sizes.  A complete descri=
ption
appears in the subsection called
<a class=3D"reference external" href=3D"http://getpython3.com/diveintopytho=
n3/native-datatypes.html#slicinglists">slicing a list</a>
in Dive Into Python 3.  In this chapter, we will only use the basic feature=
s
described above.</p>
</div>
<div class=3D"section" id=3D"strings">
<h3>2.3.5&nbsp;&nbsp;&nbsp;Strings</h3>
<p>Text values are perhaps more fundamental to computer science than even n=
umbers.
As a case in point, Python programs are written and stored as text.  The na=
tive
data type for text in Python is called a string, and corresponds to the
constructor <tt class=3D"docutils literal">str</tt>.</p>
<p>There are many details of how strings are represented, expressed, and
manipulated in Python. Strings are another example of a rich abstraction, o=
ne
that requires a substantial commitment on the part of the programmer to mas=
ter.
This section serves as a condensed introduction to essential string behavio=
rs.</p>
<p>String literals can express arbitrary text, surrounded by either single =
or
double quotation marks.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"s1">'I am string!'</span>
<span class=3D"go">'I am string!'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"s2">"I've got an apos=
trophe"</span>
<span class=3D"go">"I've got an apostrophe"</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"s1">'=E6=82=A8=E5=A5=
=BD'</span>
<span class=3D"go">'=E6=82=A8=E5=A5=BD'</span>
</pre></div>

<p>We have seen strings already in our code, as docstrings, in calls to <tt=
 class=3D"docutils literal">print</tt>,
and as error messages in <tt class=3D"docutils literal">assert</tt> stateme=
nts.</p>
<p>Strings satisfy the two basic conditions of a sequence that we introduce=
d at the
beginning of this section: they have a length and they support element
selection.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">city</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"s1">'Berkeley'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">len</span><span c=
lass=3D"p">(</span><span class=3D"n">city</span><span class=3D"p">)</span>
<span class=3D"go">8</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">city</span><span c=
lass=3D"p">[</span><span class=3D"mi">3</span><span class=3D"p">]</span>
<span class=3D"go">'k'</span>
</pre></div>

<p>The elements of a string are themselves strings that have only a single
character.  A character is any single letter of the alphabet, punctuation
mark, or other symbol.  Unlike many other programming languages, Python doe=
s
not have a separate character type; any text is a string, and strings that
represent single characters have a length of 1.</p>
<p>Like lists, strings can also be combined via addition and multiplication=
.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"s1">'Berkeley'</span> <span class=3D"o">+</span> <spa=
n class=3D"s1">', CA'</span>
<span class=3D"go">'Berkeley, CA'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"s1">'Shabu '</span> <=
span class=3D"o">*</span> <span class=3D"mi">2</span>
<span class=3D"go">'Shabu Shabu '</span>
</pre></div>

<p><strong>Membership.</strong> The behavior of strings diverges from other=
 sequence
types in Python.  The string abstraction does not conform to the full seque=
nce
abstraction that we described for lists and ranges.  In particular, the
membership operator <tt class=3D"docutils literal">in</tt> applies to strin=
gs, but has an entirely different
behavior than when it is applied to sequences.  It matches substrings rathe=
r
than elements.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"s1">'here'</span> <span class=3D"ow">in</span> <span =
class=3D"s2">"Where's Waldo?"</span>
<span class=3D"go">True</span>
</pre></div>

<p><strong>Multiline Literals.</strong> Strings aren't limited to a single =
line. Triple quotes
delimit string literals that span multiple lines.  We have used this triple
quoting extensively already for docstrings.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"s2">"""The Zen of Python</span>
<span class=3D"go">claims, Readability counts.</span>
<span class=3D"go">Read more: import this."""</span>
<span class=3D"go">'The Zen of Python\nclaims, "Readability counts."\nRead =
more: import this.'</span>
</pre></div>

<p>In the printed result above, the <tt class=3D"docutils literal">\n</tt> =
(pronounced "<em>backslash en</em>") is a
single element that represents a new line.  Although it appears as two
characters (backslash and "n"), it is considered a single character for the
purposes of length and element selection.</p>
<p><strong>String Coercion.</strong> A string can be created from any objec=
t in Python by
calling the <tt class=3D"docutils literal">str</tt> constructor function wi=
th an object value as its argument.
This feature of strings is useful for constructing descriptive strings from
objects of various types.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"nb">str</span><span class=3D"p">(</span><span class=
=3D"mi">2</span><span class=3D"p">)</span> <span class=3D"o">+</span> <span=
 class=3D"s1">' is an element of '</span> <span class=3D"o">+</span> <span =
class=3D"nb">str</span><span class=3D"p">(</span><span class=3D"n">digits</=
span><span class=3D"p">)</span>
<span class=3D"go">'2 is an element of [1, 8, 2, 8]'</span>
</pre></div>

<p><strong>Further reading.</strong> Encoding text in computers is a comple=
x topic.  In this
chapter, we will abstract away the details of how strings are represented.
However, for many applications, the particular details of how strings are
encoded by computers is essential knowledge. <a class=3D"reference external=
" href=3D"http://getpython3.com/diveintopython3/strings.html">The strings c=
hapter of Dive Into
Python 3</a> provides a
description of character encodings and Unicode.</p>
</div>
<div class=3D"section" id=3D"trees">
<h3>2.3.6&nbsp;&nbsp;&nbsp;Trees</h3>
<p>Our ability to use lists as the elements of other lists provides a new m=
eans of
combination in our programming language.  This ability is called a <em>clos=
ure
property</em> of a data type.  In general, a method for combining data valu=
es
has a closure property if the result of combination can itself be combined
using the same method.  Closure is the key to power in any means of combina=
tion
because it permits us to create hierarchical structures =E2=80=94 structure=
s made up of
parts, which themselves are made up of parts, and so on.</p>
<p>We can visualize lists in environment diagrams using <em>box-and-pointer=
</em>
notation. A list is depicted as adjacent boxes that contain the elements of=
 the
list. Primitive values such as numbers, strings, boolean values, and <tt cl=
ass=3D"docutils literal">None</tt>
appear within an element box.  Composite values, such as function values an=
d
other lists, are indicated by an arrow.</p>
<div class=3D"example" data-output=3D"False" data-showallframelabels=3D"Tru=
e" data-step=3D"-1" id=3D"example_0" style=3D""><div class=3D"ExecutionVisu=
alizer" style=3D"min-height: 383px;"><div id=3D"vizHeader" style=3D"display=
: none;">       <textarea class=3D"vizTitleText" id=3D"vizTitleEditor" cols=
=3D"60" rows=3D"1" style=3D"display: none;"></textarea>       <div class=3D=
"vizTitleText" id=3D"vizTitleViewer"></div>       <textarea class=3D"vizDes=
criptionText" id=3D"vizDescriptionEditor" cols=3D"75" rows=3D"2" style=3D"d=
isplay: none;"></textarea>       <div class=3D"vizDescriptionText" id=3D"vi=
zDescriptionViewer"></div>    </div><table border=3D"0" class=3D"visualizer=
"><tbody><tr><td class=3D"vizLayoutTd" id=3D"vizLayoutTdFirst"><div id=3D"c=
odeDisplayDiv" class=3D"ui-resizable">       <div id=3D"pyCodeOutputDiv" st=
yle=3D"max-height: 400px;"><table id=3D"pyCodeOutput"><tr><td id=3D"gutterT=
D" valign=3D"top" rowspan=3D"4"><svg id=3D"leftCodeGutterSVG" style=3D"heig=
ht: 86px;"><polygon id=3D"prevLineArrow" points=3D"0,0 6,5 0,10" fill=3D"#c=
9e6ca" transform=3D"translate(0, 73.0947265625)"></polygon><polygon id=3D"c=
urLineArrow" points=3D"0,0 6,5 0,10" fill=3D"#e93f34" style=3D"display: non=
e;"></polygon></svg></td><td class=3D"lineNo" id=3D"lineNo1">1</td><td clas=
s=3D"cod" id=3D"v1__cod1">one_two&nbsp;=3D&nbsp;[1,&nbsp;2]</td></tr><tr><t=
d class=3D"lineNo" id=3D"lineNo2">2</td><td class=3D"cod" id=3D"v1__cod2">n=
ested&nbsp;=3D&nbsp;[[1,&nbsp;2],&nbsp;[],</td></tr><tr><td class=3D"lineNo=
" id=3D"lineNo3">3</td><td class=3D"cod" id=3D"v1__cod3">&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[3,&nbsp;False,&nbsp;None],</td>=
</tr><tr><td class=3D"lineNo" id=3D"lineNo4">4</td><td class=3D"cod" id=3D"=
v1__cod4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;[4,&nbsp;lambda:&nbsp;5]]]</td></tr></table></div>       <div id=3D"editCo=
deLinkDiv"><a id=3D"editBtn" href=3D"http://composingprograms.com/tutor.htm=
l#code=3Done_two+%3D+%5B1,+2%5D%0Anested+%3D+%5B%5B1,+2%5D,+%5B%5D,%0A+++++=
+++++%5B%5B3,+False,+None%5D,%0A+++++++++++%5B4,+lambda%3A+5%5D%5D%5D">Edit=
 code in Online Python Tutor</a></div>       <div id=3D"executionSlider" cl=
ass=3D"ui-slider ui-slider-horizontal ui-widget ui-widget-content ui-corner=
-all" style=3D"font-size: 0.9em;"><a class=3D"ui-slider-handle ui-state-def=
ault ui-corner-all" href=3D"https://www.composingprograms.com/pages/23-sequ=
ences.html#" style=3D"left: 100%; width: 0.8em; height: 1.4em;"></a></div> =
      <div id=3D"vcrControls">         <button id=3D"jmpStepBack" ,=3D"" ty=
pe=3D"button">&lt; Back</button>         <span id=3D"curInstr">End</span>  =
       <button id=3D"jmpStepFwd" ,=3D"" type=3D"button" disabled=3D"disable=
d">Forward &gt;</button>       </div>       <div id=3D"errorOutput" style=
=3D"display: none;"></div>       <div id=3D"legendDiv"><svg id=3D"prevLegen=
dArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#c9e6ca"></polygon></sv=
g> line that has just executed<p style=3D"margin-top: 4px"><svg id=3D"curLe=
gendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#e93f34"></polygon><=
/svg> next line to execute</p></div>       <div id=3D"stepAnnotationDiv">  =
       <textarea class=3D"annotationText" id=3D"stepAnnotationEditor" cols=
=3D"60" rows=3D"3" style=3D"display: none;"></textarea>         <div class=
=3D"annotationText" id=3D"stepAnnotationViewer"></div>       </div>       <=
div id=3D"annotateLinkDiv"><button id=3D"annotateBtn" type=3D"button" style=
=3D"display: none;">Annotate this step</button></div>     <div class=3D"ui-=
resizable-handle ui-resizable-e" style=3D"z-index: 1000;"></div></div><div =
id=3D"htmlOutputDiv"></div>     <div id=3D"progOutputs" style=3D"display: n=
one;">       Program output:<br>       <textarea id=3D"pyStdout" cols=3D"50=
" rows=3D"10" wrap=3D"off" readonly=3D""></textarea>     </div></td><td cla=
ss=3D"vizLayoutTd" id=3D"vizLayoutTdSecond"><div id=3D"dataViz">       <tab=
le id=3D"stackHeapTable">         <tbody><tr>           <td id=3D"stack_td"=
>             <div id=3D"globals_area">             <div class=3D"stackFram=
e highlightedStackFrame" id=3D"v1__globals"><div id=3D"v1__globals_header" =
class=3D"stackFrameHeader">Global</div><table class=3D"stackFrameVarTable" =
id=3D"v1__global_table"><tr class=3D"variableTr" id=3D"v1__global__one_two_=
tr"><td class=3D"stackFrameVar">one_two</td><td class=3D"stackFrameValue"><=
div class=3D"stack_pointer" id=3D"v1__global__one_two">&nbsp;</div><div cla=
ss=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: =
6px; left: 735.938px; top: 8754.51px;"><svg style=3D"position:absolute;left=
:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"a=
bsolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=
=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg s=
tyle=3D"position:absolute;left:701.728125px;top:8734.594482421875px" width=
=3D"157.10625" height=3D"39.49951171875" pointer-events=3D"none" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=
=3D"_jsPlumb_connector "><path d=3D"M 37.209375 22.916259765625 C 68.553125=
 9.749755859375 68.553125 9.749755859375 119.896875 16.583251953125" pointe=
r-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" sty=
le=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path po=
inter-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 d=3D"M119.896875,16.583251953125 L110.44519018979464,11.796222159136509 L1=
14.44482165393698,15.858604237553383 L109.52291127906715,18.735199145034883=
 L119.896875,16.583251953125" class=3D"" stroke=3D"#005583" fill=3D"#005583=
"></path></svg></td></tr><tr class=3D"variableTr" id=3D"v1__global__nested_=
tr"><td class=3D"stackFrameVar">nested</td><td class=3D"stackFrameValue"><d=
iv class=3D"stack_pointer" id=3D"v1__global__nested">&nbsp;</div><div class=
=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6p=
x; left: 735.938px; top: 8780.51px;"><svg style=3D"position:absolute;left:0=
px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D=
"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg styl=
e=3D"position:absolute;left:701.728125px;top:8755.911865234375px" width=3D"=
157.10625" height=3D"105.59326171875" pointer-events=3D"none" position=3D"a=
bsolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_j=
sPlumb_connector "><path d=3D"M 37.209375 27.598876953125 C 88.553125 42.79=
6630859375 88.553125 42.796630859375 119.896875 77.994384765625" pointer-ev=
ents=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=
=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path poin=
ter-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=
=3D"M119.896875,77.994384765625 L115.86030752147127,68.19866513962077 L116.=
23915727955759,73.88694017347751 L110.63265076782903,72.85394223836565 L119=
.896875,77.994384765625" class=3D"" stroke=3D"#005583" fill=3D"#005583"></p=
ath></svg></td></tr></table></div></div>             <div id=3D"stack"></di=
v>           </td>           <td id=3D"heap_td">             <div id=3D"hea=
p"><table id=3D"heapRow0" class=3D"heapRow"><td class=3D"toplevelHeapObject=
" id=3D"toplevel_heap_object_1"><div class=3D"heapObject" id=3D"v1__heap_ob=
ject_1_s4"><div class=3D"typeLabel">list</div><table class=3D"listTbl"><tbo=
dy><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</td></tr><=
tr><td class=3D"listElt"><span class=3D"numberObj">1</span></td><td class=
=3D"listElt"><span class=3D"numberObj">2</span></td></tr></tbody></table></=
div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: =
6px; width: 6px; left: 818.625px; top: 8748.18px;"><svg style=3D"position:a=
bsolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" p=
osition=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></di=
v></td></table><table id=3D"heapRow1" class=3D"heapRow"><td class=3D"toplev=
elHeapObject" id=3D"toplevel_heap_object_2"><div class=3D"heapObject" id=3D=
"v1__heap_object_2_s4"><div class=3D"typeLabel">list</div><table class=3D"l=
istTbl"><tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">=
1</td><td class=3D"listHeader">2</td></tr><tr><td class=3D"listElt"><div id=
=3D"v1__heap_pointer_src_1">&nbsp;</div><div class=3D"_jsPlumb_endpoint " s=
tyle=3D"position: absolute; height: 6px; width: 6px; left: 836.292px; top: =
8843.64px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" h=
eight=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xm=
lns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" vers=
ion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#0055=
83" stroke=3D"none"></circle></svg></div><svg style=3D"position:absolute;le=
ft:804.0135711669922px;top:8828.177978515625px" width=3D"148.95204467773436=
" height=3D"24.18603515625" pointer-events=3D"none" position=3D"absolute" v=
ersion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_con=
nector "><path d=3D"M 35.278115844726564 18.457763671875 C 74.4760223388671=
8 12.093017578125 74.47602233886718 12.093017578125 113.6739288330078 5.728=
271484375" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.or=
g/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1=
"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w=
3.org/1999/xhtml" d=3D"M113.6739288330078,5.728271484375 L104.3656317889570=
7,10.788469715641892 L108.24528604125122,6.611355534456983 L103.24170663430=
729,3.8792879806789564 L113.6739288330078,5.728271484375" class=3D"" stroke=
=3D"#005583" fill=3D"#005583"></path></svg></td><td class=3D"listElt"><div =
id=3D"v1__heap_pointer_src_2">&nbsp;</div><div class=3D"_jsPlumb_endpoint "=
 style=3D"position: absolute; height: 6px; width: 6px; left: 861.646px; top=
: 8843.64px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6"=
 height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" =
xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" ve=
rsion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#00=
5583" stroke=3D"none"></circle></svg></div><svg style=3D"position:absolute;=
left:852.4958740234375px;top:8825.7107421875px" width=3D"51.3" height=3D"88=
.35" pointer-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 1=
2.15 20.925 C 25.65 44.175 25.65 44.175 39.15 67.425" pointer-events=3D"all=
" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D=
"none" stroke=3D"#005583" stroke-width=3D"1"></path><path pointer-events=3D=
"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M39.15,67=
.425 L37.15751283135829,57.019232614420105 L36.38921767084448,62.6681017531=
3549 L31.103278698985278,60.53295557879986 L39.15,67.425" class=3D"" stroke=
=3D"#005583" fill=3D"#005583"></path></svg></td><td class=3D"listElt"><div =
id=3D"v1__heap_pointer_src_3">&nbsp;</div><div class=3D"_jsPlumb_endpoint "=
 style=3D"position: absolute; height: 6px; width: 6px; left: 887px; top: 88=
43.64px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" hei=
ght=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmln=
s=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" versio=
n=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583=
" stroke=3D"none"></circle></svg></div><svg style=3D"position:absolute;left=
:868.25px;top:8798.096826171875px" width=3D"70.5" height=3D"204.94208984374=
998" pointer-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 2=
1.75 48.538916015625 C 45.25 92.47104492187499 45.25 92.47104492187499 48.7=
5 156.40317382812498" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http:=
//www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke=
-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"h=
ttp://www.w3.org/1999/xhtml" d=3D"M48.75,156.40317382812498 L51.69951736341=
103,146.22720471835774 L48.450098437635525,150.91135636458057 L44.709931500=
718156,146.60889761591253 L48.75,156.40317382812498" class=3D"" stroke=3D"#=
005583" fill=3D"#005583"></path></svg></td></tr></tbody></table></div><div =
class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; widt=
h: 6px; left: 818.625px; top: 8830.91px;"><svg style=3D"position:absolute;l=
eft:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circl=
e cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999=
/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></td>=
<td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_3"><div class=
=3D"heapObject" id=3D"v1__heap_object_3_s4"><div class=3D"typeLabel">list</=
div><table class=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</td><td =
class=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><span class=3D"nu=
mberObj">1</span></td><td class=3D"listElt"><span class=3D"numberObj">2</sp=
an></td></tr></tbody></table></div><div class=3D"_jsPlumb_endpoint " style=
=3D"position: absolute; height: 6px; width: 6px; left: 914.688px; top: 8830=
.91px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" heigh=
t=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" st=
roke=3D"none"></circle></svg></div></td></table><table id=3D"heapRow2" clas=
s=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_4=
"><div class=3D"heapObject" id=3D"v1__heap_object_4_s4" style=3D"margin-lef=
t: 70.0209px;"><div class=3D"typeLabel">empty list</div></div><div class=3D=
"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; =
left: 888.646px; top: 8890.14px;"><svg style=3D"position:absolute;left:0px;=
top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolu=
te" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3"=
 cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" st=
yle=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></td></table><t=
able id=3D"heapRow3" class=3D"heapRow"><td class=3D"toplevelHeapObject" id=
=3D"toplevel_heap_object_5"><div class=3D"heapObject" id=3D"v1__heap_object=
_5_s4" style=3D"margin-left: 95.375px;"><div class=3D"typeLabel">list</div>=
<table class=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</td><td clas=
s=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><div id=3D"v1__heap_p=
ointer_src_4">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"positi=
on: absolute; height: 6px; width: 6px; left: 931.667px; top: 8964.23px;"><s=
vg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" po=
inter-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://=
www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xm=
lns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"=
none"></circle></svg></div><svg style=3D"position:absolute;left:910.7979278=
564453px;top:8948.771728515625px" width=3D"100.77920532226562" height=3D"24=
.18603515625" pointer-events=3D"none" position=3D"absolute" version=3D"1.1"=
 xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path=
 d=3D"M 23.868759155273438 18.457763671875 C 50.38960266113281 12.093017578=
125 50.38960266113281 12.093017578125 76.91044616699219 5.728271484375" poi=
nter-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" =
style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path=
 pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml" d=3D"M76.91044616699219,5.728271484375 L68.0071333874397,11.47118203125=
4292 L71.56315680482905,7.015321008401509 L66.3690703568605,4.6655410248648=
35 L76.91044616699219,5.728271484375" class=3D"" stroke=3D"#005583" fill=3D=
"#005583"></path></svg></td><td class=3D"listElt"><div id=3D"v1__heap_point=
er_src_5">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: =
absolute; height: 6px; width: 6px; left: 957.021px; top: 8964.23px;"><svg s=
tyle=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointe=
r-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.=
w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"non=
e"></circle></svg></div><svg style=3D"position:absolute;left:947.8708740234=
375px;top:8934.529345703126px" width=3D"51.3" height=3D"138.06728515625" po=
inter-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http:/=
/www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 12.15 32=
.700146484375004 C 25.65 69.033642578125 25.65 69.033642578125 39.15 105.36=
713867187498" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3=
.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=
=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://=
www.w3.org/1999/xhtml" d=3D"M39.15,105.36713867187498 L38.94952905543562,94=
.77422540873602 L37.23517165018738,100.21122629958296 L32.3874587634276,97.=
21127967213388 L39.15,105.36713867187498" class=3D"" stroke=3D"#005583" fil=
l=3D"#005583"></path></svg></td></tr></tbody></table></div><div class=3D"_j=
sPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; lef=
t: 914px; top: 8951.5px;"><svg style=3D"position:absolute;left:0px;top:0px"=
 width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" vers=
ion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3=
" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D""=
 fill=3D"none" stroke=3D"none"></circle></svg></div></td><td class=3D"tople=
velHeapObject" id=3D"toplevel_heap_object_6"><div class=3D"heapObject" id=
=3D"v1__heap_object_6_s4"><div class=3D"typeLabel">list</div><table class=
=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHea=
der">1</td><td class=3D"listHeader">2</td></tr><tr><td class=3D"listElt"><s=
pan class=3D"numberObj">3</span></td><td class=3D"listElt"><span class=3D"b=
oolObj">False</span></td><td class=3D"listElt"><span class=3D"nullObj">None=
</span></td></tr></tbody></table></div><div class=3D"_jsPlumb_endpoint " st=
yle=3D"position: absolute; height: 6px; width: 6px; left: 984.708px; top: 8=
951.5px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" hei=
ght=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmln=
s=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" versio=
n=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" s=
troke=3D"none"></circle></svg></div></td></table><table id=3D"heapRow4" cla=
ss=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_=
7"><div class=3D"heapObject" id=3D"v1__heap_object_7_s4" style=3D"margin-le=
ft: 165.396px;"><div class=3D"typeLabel">list</div><table class=3D"listTbl"=
><tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</td><=
/tr><tr><td class=3D"listElt"><span class=3D"numberObj">4</span></td><td cl=
ass=3D"listElt"><div id=3D"v1__heap_pointer_src_6">&nbsp;</div><div class=
=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6p=
x; left: 1030.83px; top: 9049.62px;"><svg style=3D"position:absolute;left:0=
px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D=
"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg styl=
e=3D"position:absolute;left:1021.3739990234375px;top:8998.401513671875px" w=
idth=3D"52.606249999999996" height=3D"71.05146484375" pointer-events=3D"non=
e" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xh=
tml" class=3D"_jsPlumb_connector "><path d=3D"M 12.459375 54.22348632812499=
 C 26.303124999999998 35.525732421875 26.303124999999998 35.525732421875 40=
.146874999999994 16.827978515625002" pointer-events=3D"all" version=3D"1.1"=
 xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"=
#005583" stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"=
1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M40.146874999999994,16.827=
978515625002 L37.01842468298488,26.950369469049395 L36.878092877155886,21.2=
5121979701298 L31.388844870309267,22.79010131270235 L40.146874999999994,16.=
827978515625002" class=3D"" stroke=3D"#005583" fill=3D"#005583"></path></sv=
g></td></tr></tbody></table></div><div class=3D"_jsPlumb_endpoint " style=
=3D"position: absolute; height: 6px; width: 6px; left: 984.021px; top: 9036=
.9px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=
=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" st=
roke=3D"none"></circle></svg></div></td><td class=3D"toplevelHeapObject" id=
=3D"toplevel_heap_object_8"><div class=3D"heapObject" id=3D"v1__heap_object=
_8_s4"><div class=3D"funcObj">func =CE=BB()&nbsp;&lt;line&nbsp;4&gt; [paren=
t=3DGlobal]</div></div><div class=3D"_jsPlumb_endpoint " style=3D"position:=
 absolute; height: 6px; width: 6px; left: 1058.52px; top: 9012.23px;"><svg =
style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" point=
er-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www=
.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none">=
</circle></svg></div></td></table></div>           </td>         </tr>     =
  </tbody></table>     </div></td></tr></tbody></table></div></div>
<p>Nesting lists within lists can introduce complexity. The <em>tree</em> i=
s a
fundamental data abstraction that imposes regularity on how hierarchical va=
lues
are structured and manipulated.</p>
<p>A tree has a root label and a sequence of branches. Each branch of a tre=
e is a
tree. A tree with no branches is called a leaf. Any tree contained within a
tree is called a sub-tree of that tree (such as a branch of a branch). The =
root
of each sub-tree of a tree is called a node in that tree.</p>
<p>The data abstraction for a tree consists of the constructor <tt class=3D=
"docutils literal">tree</tt> and the
selectors <tt class=3D"docutils literal">label</tt> and <tt class=3D"docuti=
ls literal">branches</tt>. We begin with a simplified version.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">tree</span><span cla=
ss=3D"p">(</span><span class=3D"n">root_label</span><span class=3D"p">,</sp=
an> <span class=3D"n">branches</span><span class=3D"o">=3D</span><span clas=
s=3D"p">[]):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">for</spa=
n> <span class=3D"n">branch</span> <span class=3D"ow">in</span> <span class=
=3D"n">branches</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">asse=
rt</span> <span class=3D"n">is_tree</span><span class=3D"p">(</span><span c=
lass=3D"n">branch</span><span class=3D"p">),</span> <span class=3D"s1">'bra=
nches must be trees'</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"p">[</span><span class=3D"n">root_label</span><span cl=
ass=3D"p">]</span> <span class=3D"o">+</span> <span class=3D"nb">list</span=
><span class=3D"p">(</span><span class=3D"n">branches</span><span class=3D"=
p">)</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">label</span><span cl=
ass=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">tree</span><span class=3D"p">[</span><span class=3D=
"mi">0</span><span class=3D"p">]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">branches</span><span=
 class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">):</spa=
n>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">tree</span><span class=3D"p">[</span><span class=3D=
"mi">1</span><span class=3D"p">:]</span>
</pre></div>

<p>A tree is well-formed only if it has a root label and all branches are a=
lso
trees. The <tt class=3D"docutils literal">is_tree</tt> function is applied =
in the <tt class=3D"docutils literal">tree</tt> constructor to
verify that all branches are well-formed.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">is_tree</span><span =
class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">):</span=
>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"nb">type</span><span class=3D"p">(</span><span class=3D"n"=
>tree</span><span class=3D"p">)</span> <span class=3D"o">!=3D</span> <span =
class=3D"nb">list</span> <span class=3D"ow">or</span> <span class=3D"nb">le=
n</span><span class=3D"p">(</span><span class=3D"n">tree</span><span class=
=3D"p">)</span> <span class=3D"o">&lt;</span> <span class=3D"mi">1</span><s=
pan class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"kc">False</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">for</spa=
n> <span class=3D"n">branch</span> <span class=3D"ow">in</span> <span class=
=3D"n">branches</span><span class=3D"p">(</span><span class=3D"n">tree</spa=
n><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">if</=
span> <span class=3D"ow">not</span> <span class=3D"n">is_tree</span><span c=
lass=3D"p">(</span><span class=3D"n">branch</span><span class=3D"p">):</spa=
n>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>            <span class=3D"k">=
return</span> <span class=3D"kc">False</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"kc">True</span>
</pre></div>

<p>The <tt class=3D"docutils literal">is_leaf</tt> function checks whether =
or not a tree has branches.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">is_leaf</span><span =
class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">):</span=
>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"ow">not</span> <span class=3D"n">branches</span><span =
class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">)</span>
</pre></div>

<p>Trees can be constructed by nested expressions. The following tree <tt c=
lass=3D"docutils literal">t</tt> has
root label 3 and two branches.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">t</span> <span class=3D"o">=3D</span> <span class=
=3D"n">tree</span><span class=3D"p">(</span><span class=3D"mi">3</span><spa=
n class=3D"p">,</span> <span class=3D"p">[</span><span class=3D"n">tree</sp=
an><span class=3D"p">(</span><span class=3D"mi">1</span><span class=3D"p">)=
,</span> <span class=3D"n">tree</span><span class=3D"p">(</span><span class=
=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"p">[</span><span =
class=3D"n">tree</span><span class=3D"p">(</span><span class=3D"mi">1</span=
><span class=3D"p">),</span> <span class=3D"n">tree</span><span class=3D"p"=
>(</span><span class=3D"mi">1</span><span class=3D"p">)])])</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">t</span>
<span class=3D"go">[3, [1], [2, [1], [1]]]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">label</span><span =
class=3D"p">(</span><span class=3D"n">t</span><span class=3D"p">)</span>
<span class=3D"go">3</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">branches</span><sp=
an class=3D"p">(</span><span class=3D"n">t</span><span class=3D"p">)</span>
<span class=3D"go">[[1], [2, [1], [1]]]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">label</span><span =
class=3D"p">(</span><span class=3D"n">branches</span><span class=3D"p">(</s=
pan><span class=3D"n">t</span><span class=3D"p">)[</span><span class=3D"mi"=
>1</span><span class=3D"p">])</span>
<span class=3D"go">2</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">is_leaf</span><spa=
n class=3D"p">(</span><span class=3D"n">t</span><span class=3D"p">)</span>
<span class=3D"go">False</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">is_leaf</span><spa=
n class=3D"p">(</span><span class=3D"n">branches</span><span class=3D"p">(<=
/span><span class=3D"n">t</span><span class=3D"p">)[</span><span class=3D"m=
i">0</span><span class=3D"p">])</span>
<span class=3D"go">True</span>
</pre></div>

<p>Tree-recursive functions can be used to construct trees. For example, th=
e nth
Fibonacci tree has a root label of the nth Fibonacci number and, for <tt cl=
ass=3D"docutils literal">n &gt; 1</tt>,
two branches that are also Fibonacci trees. A Fibonacci tree illustrates th=
e
tree-recursive computation of a Fibonacci number.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">fib_tree</span><span=
 class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">n</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"mi">0</span> <span class=3D"ow">or</span> <span class=3D"n">n</span> <span=
 class=3D"o">=3D=3D</span> <span class=3D"mi">1</span><span class=3D"p">:</=
span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">tree</span><span class=3D"p">(</span><span clas=
s=3D"n">n</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">left=
</span><span class=3D"p">,</span> <span class=3D"n">right</span> <span clas=
s=3D"o">=3D</span> <span class=3D"n">fib_tree</span><span class=3D"p">(</sp=
an><span class=3D"n">n</span><span class=3D"o">-</span><span class=3D"mi">2=
</span><span class=3D"p">),</span> <span class=3D"n">fib_tree</span><span c=
lass=3D"p">(</span><span class=3D"n">n</span><span class=3D"o">-</span><spa=
n class=3D"mi">1</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">fib_=
n</span> <span class=3D"o">=3D</span> <span class=3D"n">label</span><span c=
lass=3D"p">(</span><span class=3D"n">left</span><span class=3D"p">)</span> =
<span class=3D"o">+</span> <span class=3D"n">label</span><span class=3D"p">=
(</span><span class=3D"n">right</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">tree</span><span class=3D"p">(</span><span clas=
s=3D"n">fib_n</span><span class=3D"p">,</span> <span class=3D"p">[</span><s=
pan class=3D"n">left</span><span class=3D"p">,</span> <span class=3D"n">rig=
ht</span><span class=3D"p">])</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">fib_tree</span><sp=
an class=3D"p">(</span><span class=3D"mi">5</span><span class=3D"p">)</span=
>
<span class=3D"go">[5, [2, [1], [1, [0], [1]]], [3, [1, [0], [1]], [2, [1],=
 [1, [0], [1]]]]]</span>
</pre></div>

<p>Tree-recursive functions are also used to process trees. For example, th=
e
<tt class=3D"docutils literal">count_leaves</tt> function counts the leaves=
 of a tree.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">count_leaves</span><=
span class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">):<=
/span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>  <span class=3D"k">if</span> =
<span class=3D"n">is_leaf</span><span class=3D"p">(</span><span class=3D"n"=
>tree</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>      <span class=3D"k">return=
</span> <span class=3D"mi">1</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>  <span class=3D"k">else</span=
><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>      <span class=3D"n">branch=
_counts</span> <span class=3D"o">=3D</span> <span class=3D"p">[</span><span=
 class=3D"n">count_leaves</span><span class=3D"p">(</span><span class=3D"n"=
>b</span><span class=3D"p">)</span> <span class=3D"k">for</span> <span clas=
s=3D"n">b</span> <span class=3D"ow">in</span> <span class=3D"n">branches</s=
pan><span class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p=
">)]</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>      <span class=3D"k">return=
</span> <span class=3D"nb">sum</span><span class=3D"p">(</span><span class=
=3D"n">branch_counts</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">count_leaves</span=
><span class=3D"p">(</span><span class=3D"n">fib_tree</span><span class=3D"=
p">(</span><span class=3D"mi">5</span><span class=3D"p">))</span>
<span class=3D"go">8</span>
</pre></div>

<p><strong>Partition trees.</strong> Trees can also be used to represent th=
e partitions of an
integer. A partition tree for <tt class=3D"docutils literal">n</tt> using p=
arts up to size <tt class=3D"docutils literal">m</tt> is a binary
(two branch) tree that represents the choices taken during computation. In =
a
non-leaf partition tree:</p>
<ul class=3D"simple">
<li>the left (index 0) branch contains all ways of partitioning <tt class=
=3D"docutils literal">n</tt> using at
least one <tt class=3D"docutils literal">m</tt>,</li>
<li>the right (index 1) branch contains partitions using parts up to <tt cl=
ass=3D"docutils literal"><span class=3D"pre">m-1</span></tt>, and</li>
<li>the root label is <tt class=3D"docutils literal">m</tt>.</li>
</ul>
<p>The labels at the leaves of a partition tree express whether the path fr=
om the
root of the tree to the leaf represents a successful partition of <tt class=
=3D"docutils literal">n</tt>.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">partition_tree</span=
><span class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">,</s=
pan> <span class=3D"n">m</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn a partition tree of n using parts of up to m."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">n</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"mi">0</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">tree</span><span class=3D"p">(</span><span clas=
s=3D"kc">True</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">elif</sp=
an> <span class=3D"n">n</span> <span class=3D"o">&lt;</span> <span class=3D=
"mi">0</span> <span class=3D"ow">or</span> <span class=3D"n">m</span> <span=
 class=3D"o">=3D=3D</span> <span class=3D"mi">0</span><span class=3D"p">:</=
span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">tree</span><span class=3D"p">(</span><span clas=
s=3D"kc">False</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">left=
</span> <span class=3D"o">=3D</span> <span class=3D"n">partition_tree</span=
><span class=3D"p">(</span><span class=3D"n">n</span><span class=3D"o">-</s=
pan><span class=3D"n">m</span><span class=3D"p">,</span> <span class=3D"n">=
m</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">righ=
t</span> <span class=3D"o">=3D</span> <span class=3D"n">partition_tree</spa=
n><span class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">,</=
span> <span class=3D"n">m</span><span class=3D"o">-</span><span class=3D"mi=
">1</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">tree</span><span class=3D"p">(</span><span clas=
s=3D"n">m</span><span class=3D"p">,</span> <span class=3D"p">[</span><span =
class=3D"n">left</span><span class=3D"p">,</span> <span class=3D"n">right</=
span><span class=3D"p">])</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">partition_tree</span><span class=3D"p">(</span><sp=
an class=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"mi">2</sp=
an><span class=3D"p">)</span>
<span class=3D"go">[2, [True], [1, [1, [True], [False]], [False]]]</span>
</pre></div>

<p>Printing the partitions from a partition tree is another tree-recursive =
process
that traverses the tree, constructing each partition as a list. Whenever
a <tt class=3D"docutils literal">True</tt> leaf is reached, the partition i=
s printed.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">print_parts</span><s=
pan class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">,</s=
pan> <span class=3D"n">partition</span><span class=3D"o">=3D</span><span cl=
ass=3D"p">[]):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">is_leaf</span><span class=3D"p">(</span><span class=3D"=
n">tree</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">if</=
span> <span class=3D"n">label</span><span class=3D"p">(</span><span class=
=3D"n">tree</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>            <span class=3D"nb"=
>print</span><span class=3D"p">(</span><span class=3D"s1">' + '</span><span=
 class=3D"o">.</span><span class=3D"n">join</span><span class=3D"p">(</span=
><span class=3D"n">partition</span><span class=3D"p">))</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">left=
</span><span class=3D"p">,</span> <span class=3D"n">right</span> <span clas=
s=3D"o">=3D</span> <span class=3D"n">branches</span><span class=3D"p">(</sp=
an><span class=3D"n">tree</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">m</s=
pan> <span class=3D"o">=3D</span> <span class=3D"nb">str</span><span class=
=3D"p">(</span><span class=3D"n">label</span><span class=3D"p">(</span><spa=
n class=3D"n">tree</span><span class=3D"p">))</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">prin=
t_parts</span><span class=3D"p">(</span><span class=3D"n">left</span><span =
class=3D"p">,</span> <span class=3D"n">partition</span> <span class=3D"o">+=
</span> <span class=3D"p">[</span><span class=3D"n">m</span><span class=3D"=
p">])</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">prin=
t_parts</span><span class=3D"p">(</span><span class=3D"n">right</span><span=
 class=3D"p">,</span> <span class=3D"n">partition</span><span class=3D"p">)=
</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">print_parts</span><span class=3D"p">(</span><span =
class=3D"n">partition_tree</span><span class=3D"p">(</span><span class=3D"m=
i">6</span><span class=3D"p">,</span> <span class=3D"mi">4</span><span clas=
s=3D"p">))</span>
<span class=3D"go">4 + 2</span>
<span class=3D"go">4 + 1 + 1</span>
<span class=3D"go">3 + 3</span>
<span class=3D"go">3 + 2 + 1</span>
<span class=3D"go">3 + 1 + 1 + 1</span>
<span class=3D"go">2 + 2 + 2</span>
<span class=3D"go">2 + 2 + 1 + 1</span>
<span class=3D"go">2 + 1 + 1 + 1 + 1</span>
<span class=3D"go">1 + 1 + 1 + 1 + 1 + 1</span>
</pre></div>

<p>Slicing can be used on the branches of a tree as well. For example, we m=
ay want
to place a restriction on the number of branches in a tree. A binary tree i=
s
either a leaf or a sequence of at most two binary trees. A common tree
transformation called <em>binarization</em> computes a binary tree from an =
original
tree by grouping together adjacent branches.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">right_binarize</span=
><span class=3D"p">(</span><span class=3D"n">tree</span><span class=3D"p">)=
:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Cons=
truct a right-branching binary tree."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">is_leaf</span><span class=3D"p">(</span><span class=3D"=
n">tree</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">tree</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"nb">len</span><span class=3D"p">(</span><span class=3D"n">=
tree</span><span class=3D"p">)</span> <span class=3D"o">&gt;</span> <span c=
lass=3D"mi">2</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">tree=
</span> <span class=3D"o">=3D</span> <span class=3D"p">[</span><span class=
=3D"n">tree</span><span class=3D"p">[</span><span class=3D"mi">0</span><spa=
n class=3D"p">],</span> <span class=3D"n">tree</span><span class=3D"p">[</s=
pan><span class=3D"mi">1</span><span class=3D"p">:]]</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"p">[</span><span class=3D"n">right_binarize</span><spa=
n class=3D"p">(</span><span class=3D"n">b</span><span class=3D"p">)</span> =
<span class=3D"k">for</span> <span class=3D"n">b</span> <span class=3D"ow">=
in</span> <span class=3D"n">tree</span><span class=3D"p">]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">right_binarize</span><span class=3D"p">([</span><s=
pan class=3D"mi">1</span><span class=3D"p">,</span> <span class=3D"mi">2</s=
pan><span class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p"=
>,</span> <span class=3D"mi">4</span><span class=3D"p">,</span> <span class=
=3D"mi">5</span><span class=3D"p">,</span> <span class=3D"mi">6</span><span=
 class=3D"p">,</span> <span class=3D"mi">7</span><span class=3D"p">])</span=
>
<span class=3D"go">[1, [2, [3, [4, [5, [6, 7]]]]]]</span>
</pre></div>

</div>
<div class=3D"section" id=3D"linked-lists">
<h3>2.3.7&nbsp;&nbsp;&nbsp;Linked Lists</h3>
<p>So far, we have used only native types to represent sequences. However, =
we can
also develop sequence representations that are not built into Python. A
common representation of a sequence constructed from nested pairs is called=
 a
<em>linked list</em>. The environment diagram below illustrates the linked =
list
representation of a four-element sequence containing 1, 2, 3, and 4.</p>
<div class=3D"example" data-output=3D"False" data-showallframelabels=3D"Tru=
e" data-step=3D"-1" id=3D"example_1" style=3D""><div class=3D"ExecutionVisu=
alizer" style=3D"min-height: 202px;"><div id=3D"vizHeader" style=3D"display=
: none;">       <textarea class=3D"vizTitleText" id=3D"vizTitleEditor" cols=
=3D"60" rows=3D"1" style=3D"display: none;"></textarea>       <div class=3D=
"vizTitleText" id=3D"vizTitleViewer"></div>       <textarea class=3D"vizDes=
criptionText" id=3D"vizDescriptionEditor" cols=3D"75" rows=3D"2" style=3D"d=
isplay: none;"></textarea>       <div class=3D"vizDescriptionText" id=3D"vi=
zDescriptionViewer"></div>    </div><table border=3D"0" class=3D"visualizer=
"><tbody><tr><td class=3D"vizLayoutTd" id=3D"vizLayoutTdFirst"><div id=3D"c=
odeDisplayDiv" class=3D"ui-resizable">       <div id=3D"pyCodeOutputDiv" st=
yle=3D"max-height: 400px;"><table id=3D"pyCodeOutput"><tr><td id=3D"gutterT=
D" valign=3D"top" rowspan=3D"1"><svg id=3D"leftCodeGutterSVG" style=3D"heig=
ht: 20px;"><polygon id=3D"prevLineArrow" points=3D"0,0 6,5 0,10" fill=3D"#c=
9e6ca" transform=3D"translate(0, 5)"></polygon><polygon id=3D"curLineArrow"=
 points=3D"0,0 6,5 0,10" fill=3D"#e93f34" style=3D"display: none;"></polygo=
n></svg></td><td class=3D"lineNo" id=3D"lineNo1">1</td><td class=3D"cod" id=
=3D"v2__cod1">four&nbsp;=3D&nbsp;[1,&nbsp;[2,&nbsp;[3,&nbsp;[4,&nbsp;'empty=
']]]]</td></tr></table></div>       <div id=3D"editCodeLinkDiv"><a id=3D"ed=
itBtn" href=3D"http://composingprograms.com/tutor.html#code=3Dfour+%3D+%5B1=
,+%5B2,+%5B3,+%5B4,+'empty'%5D%5D%5D%5D">Edit code in Online Python Tutor</=
a></div>       <div id=3D"executionSlider" class=3D"ui-slider ui-slider-hor=
izontal ui-widget ui-widget-content ui-corner-all" style=3D"font-size: 0.9e=
m;"><a class=3D"ui-slider-handle ui-state-default ui-corner-all" href=3D"ht=
tps://www.composingprograms.com/pages/23-sequences.html#" style=3D"left: 10=
0%; width: 0.8em; height: 1.4em;"></a></div>       <div id=3D"vcrControls">=
         <button id=3D"jmpStepBack" ,=3D"" type=3D"button">&lt; Back</butto=
n>         <span id=3D"curInstr">End</span>         <button id=3D"jmpStepFw=
d" ,=3D"" type=3D"button" disabled=3D"disabled">Forward &gt;</button>      =
 </div>       <div id=3D"errorOutput" style=3D"display: none;"></div>      =
 <div id=3D"legendDiv"><svg id=3D"prevLegendArrowSVG"><polygon points=3D"0,=
0 6,5 0,10" fill=3D"#c9e6ca"></polygon></svg> line that has just executed<p=
 style=3D"margin-top: 4px"><svg id=3D"curLegendArrowSVG"><polygon points=3D=
"0,0 6,5 0,10" fill=3D"#e93f34"></polygon></svg> next line to execute</p></=
div>       <div id=3D"stepAnnotationDiv">         <textarea class=3D"annota=
tionText" id=3D"stepAnnotationEditor" cols=3D"60" rows=3D"3" style=3D"displ=
ay: none;"></textarea>         <div class=3D"annotationText" id=3D"stepAnno=
tationViewer"></div>       </div>       <div id=3D"annotateLinkDiv"><button=
 id=3D"annotateBtn" type=3D"button" style=3D"display: none;">Annotate this =
step</button></div>     <div class=3D"ui-resizable-handle ui-resizable-e" s=
tyle=3D"z-index: 1000;"></div></div><div id=3D"htmlOutputDiv"></div>     <d=
iv id=3D"progOutputs" style=3D"display: none;">       Program output:<br>  =
     <textarea id=3D"pyStdout" cols=3D"50" rows=3D"10" wrap=3D"off" readonl=
y=3D""></textarea>     </div></td><td class=3D"vizLayoutTd" id=3D"vizLayout=
TdSecond"><div id=3D"dataViz">       <table id=3D"stackHeapTable">         =
<tbody><tr>           <td id=3D"stack_td">             <div id=3D"globals_a=
rea">             <div class=3D"stackFrame highlightedStackFrame" id=3D"v2_=
_globals"><div id=3D"v2__globals_header" class=3D"stackFrameHeader">Global<=
/div><table class=3D"stackFrameVarTable" id=3D"v2__global_table"><tr class=
=3D"variableTr" id=3D"v2__global__four_tr"><td class=3D"stackFrameVar">four=
</td><td class=3D"stackFrameValue"><div class=3D"stack_pointer" id=3D"v2__g=
lobal__four">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"positio=
n: absolute; height: 6px; width: 6px; left: 705.646px; top: 11921.2px;"><sv=
g style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" poi=
nter-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://w=
ww.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xml=
ns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"n=
one"></circle></svg></div><svg style=3D"position:absolute;left:671.43649902=
34375px;top:11901.313232421875px" width=3D"157.10625" height=3D"39.49951171=
875" pointer-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 3=
7.209375 22.916259765625 C 68.553125 9.749755859375 68.553125 9.74975585937=
5 119.896875 16.583251953125" pointer-events=3D"all" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#00558=
3" stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" x=
mlns=3D"http://www.w3.org/1999/xhtml" d=3D"M119.896875,16.583251953125 L110=
.44519018979464,11.796222159136509 L114.44482165393698,15.858604237553383 L=
109.52291127906715,18.735199145034883 L119.896875,16.583251953125" class=3D=
"" stroke=3D"#005583" fill=3D"#005583"></path></svg></td></tr></table></div=
></div>             <div id=3D"stack"></div>           </td>           <td =
id=3D"heap_td">             <div id=3D"heap"><table id=3D"heapRow0" class=
=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_1"=
><div class=3D"heapObject" id=3D"v2__heap_object_1_s1"><div class=3D"typeLa=
bel">list</div><table class=3D"listTbl"><tbody><tr><td class=3D"listHeader"=
>0</td><td class=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><span =
class=3D"numberObj">1</span></td><td class=3D"listElt"><div id=3D"v2__heap_=
pointer_src_1">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"posit=
ion: absolute; height: 6px; width: 6px; left: 835.146px; top: 11927.6px;"><=
svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" p=
ointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http:/=
/www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" x=
mlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D=
"none"></circle></svg></div><svg style=3D"position:absolute;left:825.686499=
0234375px;top:11912.16865234375px" width=3D"52.606249999999996" height=3D"2=
4.1841796875" pointer-events=3D"none" position=3D"absolute" version=3D"1.1"=
 xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path=
 d=3D"M 12.459375 18.45634765625 C 26.303124999999998 12.09208984375 26.303=
124999999998 12.09208984375 40.146874999999994 5.72783203125" pointer-event=
s=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D""=
 fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path pointer-e=
vents=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M=
40.146874999999994,5.72783203125 L32.53897754512735,13.101426562829724 L35.=
15466070377813,8.036034019941194 L29.601265923156745,6.747699276729163 L40.=
146874999999994,5.72783203125" class=3D"" stroke=3D"#005583" fill=3D"#00558=
3"></path></svg></td></tr></tbody></table></div><div class=3D"_jsPlumb_endp=
oint " style=3D"position: absolute; height: 6px; width: 6px; left: 788.333p=
x; top: 11914.9px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"none" stroke=3D"none"></circle></svg></div></td><td class=3D"toplevelHe=
apObject" id=3D"toplevel_heap_object_2"><div class=3D"heapObject" id=3D"v2_=
_heap_object_2_s1"><div class=3D"typeLabel">list</div><table class=3D"listT=
bl"><tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</t=
d></tr><tr><td class=3D"listElt"><span class=3D"numberObj">2</span></td><td=
 class=3D"listElt"><div id=3D"v2__heap_pointer_src_2">&nbsp;</div><div clas=
s=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6=
px; left: 909.646px; top: 11927.6px;"><svg style=3D"position:absolute;left:=
0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"ab=
solute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=
=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg s=
tyle=3D"position:absolute;left:900.1864990234375px;top:11912.16865234375px"=
 width=3D"52.606249999999996" height=3D"24.1841796875" pointer-events=3D"no=
ne" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/x=
html" class=3D"_jsPlumb_connector "><path d=3D"M 12.459375 18.45634765625 C=
 26.303124999999998 12.09208984375 26.303124999999998 12.09208984375 40.146=
874999999994 5.72783203125" pointer-events=3D"all" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" =
stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmln=
s=3D"http://www.w3.org/1999/xhtml" d=3D"M40.146874999999994,5.72783203125 L=
32.53897754512735,13.101426562829724 L35.15466070377813,8.036034019941194 L=
29.601265923156745,6.747699276729163 L40.146874999999994,5.72783203125" cla=
ss=3D"" stroke=3D"#005583" fill=3D"#005583"></path></svg></td></tr></tbody>=
</table></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute=
; height: 6px; width: 6px; left: 862.833px; top: 11914.9px;"><svg style=3D"=
position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=
=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1=
999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http:=
//www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle>=
</svg></div></td><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_objec=
t_3"><div class=3D"heapObject" id=3D"v2__heap_object_3_s1"><div class=3D"ty=
peLabel">list</div><table class=3D"listTbl"><tbody><tr><td class=3D"listHea=
der">0</td><td class=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><s=
pan class=3D"numberObj">3</span></td><td class=3D"listElt"><div id=3D"v2__h=
eap_pointer_src_3">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"p=
osition: absolute; height: 6px; width: 6px; left: 984.146px; top: 11927.6px=
;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"=
6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"ht=
tp://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.=
1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" strok=
e=3D"none"></circle></svg></div><svg style=3D"position:absolute;left:974.68=
64990234375px;top:11912.16865234375px" width=3D"52.606249999999996" height=
=3D"24.1841796875" pointer-events=3D"none" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector ">=
<path d=3D"M 12.459375 18.45634765625 C 26.303124999999998 12.09208984375 2=
6.303124999999998 12.09208984375 40.146874999999994 5.72783203125" pointer-=
events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=
=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path poin=
ter-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=
=3D"M40.146874999999994,5.72783203125 L32.53897754512735,13.101426562829724=
 L35.15466070377813,8.036034019941194 L29.601265923156745,6.747699276729163=
 L40.146874999999994,5.72783203125" class=3D"" stroke=3D"#005583" fill=3D"#=
005583"></path></svg></td></tr></tbody></table></div><div class=3D"_jsPlumb=
_endpoint " style=3D"position: absolute; height: 6px; width: 6px; left: 937=
.333px; top: 11914.9px;"><svg style=3D"position:absolute;left:0px;top:0px" =
width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" versi=
on=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3"=
 r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" =
fill=3D"none" stroke=3D"none"></circle></svg></div></td><td class=3D"toplev=
elHeapObject" id=3D"toplevel_heap_object_4"><div class=3D"heapObject" id=3D=
"v2__heap_object_4_s1"><div class=3D"typeLabel">list</div><table class=3D"l=
istTbl"><tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">=
1</td></tr><tr><td class=3D"listElt"><span class=3D"numberObj">4</span></td=
><td class=3D"listElt"><span class=3D"stringObj">"empty"</span></td></tr></=
tbody></table></div><div class=3D"_jsPlumb_endpoint " style=3D"position: ab=
solute; height: 6px; width: 6px; left: 1011.83px; top: 11914.9px;"><svg sty=
le=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-=
events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3=
.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></c=
ircle></svg></div></td></table></div>           </td>         </tr>       <=
/tbody></table>     </div></td></tr></tbody></table></div></div>
<p>A linked list is a pair containing the first element of the sequence (in=
 this
case 1) and the rest of the sequence (in this case a representation of 2, 3=
,
4).  The second element is also a linked list. The rest of the inner-most
linked list containing only 4 is <tt class=3D"docutils literal">'empty'</tt=
>, a value that represents an empty
linked list.</p>
<p>Linked lists have recursive structure: the rest of a linked list is a li=
nked
list or <tt class=3D"docutils literal">'empty'</tt>. We can define an abstr=
act data representation to validate,
construct, and select the components of linked lists.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">empty</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"s1">'empty'</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">def</span> <span c=
lass=3D"nf">is_link</span><span class=3D"p">(</span><span class=3D"n">s</sp=
an><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""s is=
 a linked list if it is empty or a (first, rest) pair."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">s</span> <span class=3D"o">=3D=3D</span> <span clas=
s=3D"n">empty</span> <span class=3D"ow">or</span> <span class=3D"p">(</span=
><span class=3D"nb">len</span><span class=3D"p">(</span><span class=3D"n">s=
</span><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span cla=
ss=3D"mi">2</span> <span class=3D"ow">and</span> <span class=3D"n">is_link<=
/span><span class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p"=
>[</span><span class=3D"mi">1</span><span class=3D"p">]))</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">link</span><span cla=
ss=3D"p">(</span><span class=3D"n">first</span><span class=3D"p">,</span> <=
span class=3D"n">rest</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Cons=
truct a linked list from its first element and the rest."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">is_link</span><span class=3D"p">(</span><span class=
=3D"n">rest</span><span class=3D"p">),</span> <span class=3D"s2">"rest must=
 be a linked list."</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"p">[</span><span class=3D"n">first</span><span class=
=3D"p">,</span> <span class=3D"n">rest</span><span class=3D"p">]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">first</span><span cl=
ass=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn the first element of a linked list s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">is_link</span><span class=3D"p">(</span><span class=
=3D"n">s</span><span class=3D"p">),</span> <span class=3D"s2">"first only a=
pplies to linked lists."</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">s</span> <span class=3D"o">!=3D</span> <span class=
=3D"n">empty</span><span class=3D"p">,</span> <span class=3D"s2">"empty lin=
ked list has no first element."</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">s</span><span class=3D"p">[</span><span class=3D"mi=
">0</span><span class=3D"p">]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">rest</span><span cla=
ss=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn the rest of the elements of a linked list s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">is_link</span><span class=3D"p">(</span><span class=
=3D"n">s</span><span class=3D"p">),</span> <span class=3D"s2">"rest only ap=
plies to linked lists."</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">s</span> <span class=3D"o">!=3D</span> <span class=
=3D"n">empty</span><span class=3D"p">,</span> <span class=3D"s2">"empty lin=
ked list has no rest."</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">s</span><span class=3D"p">[</span><span class=3D"mi=
">1</span><span class=3D"p">]</span>
</pre></div>

<p>Above, <tt class=3D"docutils literal">link</tt> is a constructor and <tt=
 class=3D"docutils literal">first</tt> and <tt class=3D"docutils literal">r=
est</tt> are selectors for
an abstract data representation of linked lists. The behavior condition for=
 a
linked list is that, like a pair, its constructor and selectors are inverse
functions.</p>
<ul class=3D"simple">
<li>If a linked list <tt class=3D"docutils literal">s</tt> was constructed =
from first element <tt class=3D"docutils literal">f</tt> and linked
list <tt class=3D"docutils literal">r</tt>, then <tt class=3D"docutils lite=
ral">first(s)</tt> returns <tt class=3D"docutils literal">f</tt>, and <tt c=
lass=3D"docutils literal">rest(s)</tt> returns <tt class=3D"docutils litera=
l">r</tt>.</li>
</ul>
<p>We can use the constructor and selectors to manipulate linked lists.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">four</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"n">link</span><span class=3D"p">(</span><span class=3D"mi">1</span><s=
pan class=3D"p">,</span> <span class=3D"n">link</span><span class=3D"p">(</=
span><span class=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"n=
">link</span><span class=3D"p">(</span><span class=3D"mi">3</span><span cla=
ss=3D"p">,</span> <span class=3D"n">link</span><span class=3D"p">(</span><s=
pan class=3D"mi">4</span><span class=3D"p">,</span> <span class=3D"n">empty=
</span><span class=3D"p">))))</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">first</span><span =
class=3D"p">(</span><span class=3D"n">four</span><span class=3D"p">)</span>
<span class=3D"go">1</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">rest</span><span c=
lass=3D"p">(</span><span class=3D"n">four</span><span class=3D"p">)</span>
<span class=3D"go">[2, [3, [4, 'empty']]]</span>
</pre></div>

<p>Our implementation of this kind of abstract data uses pairs that are
two-element <tt class=3D"docutils literal">list</tt> values. It is worth no=
ting that we were also able to
implement pairs using functions, and we can implement linked lists using an=
y
pairs, therefore we could implement linked lists using functions alone.</p>
<p>The linked list can store a sequence of values in order, but we have not=
 yet
shown that it satisfies the sequence abstraction.  Using the abstract data
representation we have defined, we can implement the two behaviors that
characterize a sequence: length and element selection.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">len_link</span><span=
 class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn the length of linked list s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">length</=
span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">while</s=
pan> <span class=3D"n">s</span> <span class=3D"o">!=3D</span> <span class=
=3D"n">empty</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">s</s=
pan><span class=3D"p">,</span> <span class=3D"n">length</span> <span class=
=3D"o">=3D</span> <span class=3D"n">rest</span><span class=3D"p">(</span><s=
pan class=3D"n">s</span><span class=3D"p">),</span> <span class=3D"n">lengt=
h</span> <span class=3D"o">+</span> <span class=3D"mi">1</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">length</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">getitem_link</span><=
span class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">,</spa=
n> <span class=3D"n">i</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn the element at index i of linked list s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">while</s=
pan> <span class=3D"n">i</span> <span class=3D"o">&gt;</span> <span class=
=3D"mi">0</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">s</s=
pan><span class=3D"p">,</span> <span class=3D"n">i</span> <span class=3D"o"=
>=3D</span> <span class=3D"n">rest</span><span class=3D"p">(</span><span cl=
ass=3D"n">s</span><span class=3D"p">),</span> <span class=3D"n">i</span> <s=
pan class=3D"o">-</span> <span class=3D"mi">1</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">first</span><span class=3D"p">(</span><span class=
=3D"n">s</span><span class=3D"p">)</span>
</pre></div>

<p>Now, we can manipulate a linked list as a sequence using these functions=
.
(We cannot yet use the built-in <tt class=3D"docutils literal">len</tt> fun=
ction, element selection syntax, or
<tt class=3D"docutils literal">for</tt> statement, but we will soon.)</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">len_link</span><span class=3D"p">(</span><span cla=
ss=3D"n">four</span><span class=3D"p">)</span>
<span class=3D"go">4</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">getitem_link</span=
><span class=3D"p">(</span><span class=3D"n">four</span><span class=3D"p">,=
</span> <span class=3D"mi">1</span><span class=3D"p">)</span>
<span class=3D"go">2</span>
</pre></div>

<p>The series of environment diagrams below illustrate the iterative proces=
s by
which <tt class=3D"docutils literal">getitem_link</tt> finds the element 2 =
at index 1 in a linked
list. Below, we have defined the linked list <tt class=3D"docutils literal"=
>four</tt> using Python primitives to
simplify the diagrams. This implementation choice violates an abstraction
barrier, but allows us to inspect the computational process more easily for
this example.</p>
<div class=3D"example" data-output=3D"False" data-showallframelabels=3D"Tru=
e" data-step=3D"4" id=3D"example_2" style=3D""><div class=3D"ExecutionVisua=
lizer" style=3D"min-height: 444px;"><div id=3D"vizHeader" style=3D"display:=
 none;">       <textarea class=3D"vizTitleText" id=3D"vizTitleEditor" cols=
=3D"60" rows=3D"1" style=3D"display: none;"></textarea>       <div class=3D=
"vizTitleText" id=3D"vizTitleViewer"></div>       <textarea class=3D"vizDes=
criptionText" id=3D"vizDescriptionEditor" cols=3D"75" rows=3D"2" style=3D"d=
isplay: none;"></textarea>       <div class=3D"vizDescriptionText" id=3D"vi=
zDescriptionViewer"></div>    </div><table border=3D"0" class=3D"visualizer=
"><tbody><tr><td class=3D"vizLayoutTd" id=3D"vizLayoutTdFirst"><div id=3D"c=
odeDisplayDiv" class=3D"ui-resizable">       <div id=3D"pyCodeOutputDiv" st=
yle=3D"max-height: 400px;"><table id=3D"pyCodeOutput"><tr><td id=3D"gutterT=
D" valign=3D"top" rowspan=3D"12"><svg id=3D"leftCodeGutterSVG" style=3D"hei=
ght: 262px;"><polygon id=3D"prevLineArrow" points=3D"0,0 6,5 0,10" fill=3D"=
#c9e6ca" transform=3D"translate(0, 227.294921875)"></polygon><polygon id=3D=
"curLineArrow" points=3D"0,0 6,5 0,10" fill=3D"#e93f34" transform=3D"transl=
ate(0, 249.5244140625)"></polygon></svg></td><td class=3D"lineNo" id=3D"lin=
eNo1">1</td><td class=3D"cod" id=3D"v3__cod1">def&nbsp;first(s):</td></tr><=
tr><td class=3D"lineNo" id=3D"lineNo2">2</td><td class=3D"cod" id=3D"v3__co=
d2">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[0]</td></tr><tr><td class=3D"line=
No" id=3D"lineNo3">3</td><td class=3D"cod" id=3D"v3__cod3">def&nbsp;rest(s)=
:</td></tr><tr><td class=3D"lineNo" id=3D"lineNo4">4</td><td class=3D"cod" =
id=3D"v3__cod4">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[1]</td></tr><tr><td c=
lass=3D"lineNo" id=3D"lineNo5">5</td><td class=3D"cod" id=3D"v3__cod5"></td=
></tr><tr><td class=3D"lineNo" id=3D"lineNo6">6</td><td class=3D"cod" id=3D=
"v3__cod6">def&nbsp;getitem_link(s,&nbsp;i):</td></tr><tr><td class=3D"line=
No" id=3D"lineNo7">7</td><td class=3D"cod" id=3D"v3__cod7">&nbsp;&nbsp;&nbs=
p;&nbsp;while&nbsp;i&nbsp;&gt;&nbsp;0:</td></tr><tr><td class=3D"lineNo" id=
=3D"lineNo8">8</td><td class=3D"cod" id=3D"v3__cod8">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;s,&nbsp;i&nbsp;=3D&nbsp;rest(s),&nbsp;i&nbsp;-&nb=
sp;1</td></tr><tr><td class=3D"lineNo" id=3D"lineNo9">9</td><td class=3D"co=
d" id=3D"v3__cod9">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;first(s)</td></tr><t=
r><td class=3D"lineNo" id=3D"lineNo10">10</td><td class=3D"cod" id=3D"v3__c=
od10"></td></tr><tr><td class=3D"lineNo" id=3D"lineNo11">11</td><td class=
=3D"cod" id=3D"v3__cod11">four&nbsp;=3D&nbsp;[1,&nbsp;[2,&nbsp;[3,&nbsp;[4,=
&nbsp;'empty']]]]</td></tr><tr><td class=3D"lineNo" id=3D"lineNo12">12</td>=
<td class=3D"cod" id=3D"v3__cod12">getitem_link(four,&nbsp;1)</td></tr></ta=
ble></div>       <div id=3D"editCodeLinkDiv"><a id=3D"editBtn" href=3D"http=
://composingprograms.com/tutor.html#code=3Ddef+first(s)%3A%0A++++return+s%5=
B0%5D%0Adef+rest(s)%3A%0A++++return+s%5B1%5D%0A%0Adef+getitem_link(s,+i)%3A=
%0A++++while+i+%3E+0%3A%0A++++++++s,+i+%3D+rest(s),+i+-+1%0A++++return+firs=
t(s)%0A%0Afour+%3D+%5B1,+%5B2,+%5B3,+%5B4,+'empty'%5D%5D%5D%5D%0Agetitem_li=
nk(four,+1)">Edit code in Online Python Tutor</a></div>       <div id=3D"ex=
ecutionSlider" class=3D"ui-slider ui-slider-horizontal ui-widget ui-widget-=
content ui-corner-all" style=3D"font-size: 0.9em;"><a class=3D"ui-slider-ha=
ndle ui-state-default ui-corner-all" href=3D"https://www.composingprograms.=
com/pages/23-sequences.html#" style=3D"left: 28.5714%; width: 0.8em; height=
: 1.4em;"></a></div>       <div id=3D"vcrControls">         <button id=3D"j=
mpStepBack" ,=3D"" type=3D"button">&lt; Back</button>         <span id=3D"c=
urInstr">Step 5 of 14</span>         <button id=3D"jmpStepFwd" ,=3D"" type=
=3D"button">Forward &gt;</button>       </div>       <div id=3D"errorOutput=
" style=3D"display: none;"></div>       <div id=3D"legendDiv"><svg id=3D"pr=
evLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#c9e6ca"></polyg=
on></svg> line that has just executed<p style=3D"margin-top: 4px"><svg id=
=3D"curLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#e93f34"></=
polygon></svg> next line to execute</p></div>       <div id=3D"stepAnnotati=
onDiv">         <textarea class=3D"annotationText" id=3D"stepAnnotationEdit=
or" cols=3D"60" rows=3D"3" style=3D"display: none;"></textarea>         <di=
v class=3D"annotationText" id=3D"stepAnnotationViewer"></div>       </div> =
      <div id=3D"annotateLinkDiv"><button id=3D"annotateBtn" type=3D"button=
" style=3D"display: none;">Annotate this step</button></div>     <div class=
=3D"ui-resizable-handle ui-resizable-e" style=3D"z-index: 1000;"></div></di=
v><div id=3D"htmlOutputDiv"></div>     <div id=3D"progOutputs" style=3D"dis=
play: none;">       Program output:<br>       <textarea id=3D"pyStdout" col=
s=3D"50" rows=3D"10" wrap=3D"off" readonly=3D""></textarea>     </div></td>=
<td class=3D"vizLayoutTd" id=3D"vizLayoutTdSecond"><div id=3D"dataViz">    =
   <table id=3D"stackHeapTable">         <tbody><tr>           <td id=3D"st=
ack_td">             <div id=3D"globals_area">             <div class=3D"st=
ackFrame highlightedStackFrame" id=3D"v3__globals"><div id=3D"v3__globals_h=
eader" class=3D"stackFrameHeader">Global</div><table class=3D"stackFrameVar=
Table" id=3D"v3__global_table"><tr class=3D"variableTr" id=3D"v3__global__f=
irst_tr"><td class=3D"stackFrameVar">first</td><td class=3D"stackFrameValue=
"><div class=3D"stack_pointer" id=3D"v3__global__first">&nbsp;</div><div cl=
ass=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width:=
 6px; left: 791.521px; top: 13543.5px;"><svg style=3D"position:absolute;lef=
t:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"=
absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=
=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg s=
tyle=3D"position:absolute;left:757.3114990234375px;top:13496.063232421875px=
" width=3D"157.10625" height=3D"72.49951171875" pointer-events=3D"none" pos=
ition=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" c=
lass=3D"_jsPlumb_connector "><path d=3D"M 37.209375 50.416259765625 C 68.55=
3125 26.249755859375 68.553125 26.249755859375 119.896875 22.083251953125" =
pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtm=
l" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><p=
ath pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/=
xhtml" d=3D"M119.896875,22.083251953125 L110.21369070404896,26.382780054050=
4 L114.41499480204791,22.52933433935074 L109.64594948521619,19.405841620293=
202 L119.896875,22.083251953125" class=3D"" stroke=3D"#005583" fill=3D"#005=
583"></path></svg></td></tr><tr class=3D"variableTr" id=3D"v3__global__rest=
_tr"><td class=3D"stackFrameVar">rest</td><td class=3D"stackFrameValue"><di=
v class=3D"stack_pointer" id=3D"v3__global__rest">&nbsp;</div><div class=3D=
"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; =
left: 791.521px; top: 13569.5px;"><svg style=3D"position:absolute;left:0px;=
top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolu=
te" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3"=
 cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" st=
yle=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg style=
=3D"position:absolute;left:757.3114990234375px;top:13538.7294921875px" widt=
h=3D"157.10625" height=3D"52.5" pointer-events=3D"none" position=3D"absolut=
e" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb=
_connector "><path d=3D"M 37.209375 33.75 C 68.553125 16.25 68.553125 16.25=
 119.896875 18.75" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://w=
ww.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-wi=
dth=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http=
://www.w3.org/1999/xhtml" d=3D"M119.896875,18.75 L110.07814095551596,14.769=
74099288875 L114.40333060504665,18.483598084322484 L109.7390839719264,21.76=
152476828392 L119.896875,18.75" class=3D"" stroke=3D"#005583" fill=3D"#0055=
83"></path></svg></td></tr><tr class=3D"variableTr" id=3D"v3__global__getit=
em_link_tr"><td class=3D"stackFrameVar">getitem_link</td><td class=3D"stack=
FrameValue"><div class=3D"stack_pointer" id=3D"v3__global__getitem_link">&n=
bsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; he=
ight: 6px; width: 6px; left: 791.521px; top: 13595.5px;"><svg style=3D"posi=
tion:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"=
all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/=
xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://ww=
w.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle><=
/svg></div><svg style=3D"position:absolute;left:757.3114990234375px;top:135=
81.395751953125px" width=3D"157.10625" height=3D"32.50048828125" pointer-ev=
ents=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.=
org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 37.209375 17.083=
740234375 C 68.553125 6.250244140625 68.553125 6.250244140625 119.896875 15=
.416748046875" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w=
3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=
=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://=
www.w3.org/1999/xhtml" d=3D"M119.896875,15.416748046875 L110.66680672475742=
,10.215225228088116 L114.4823264975502,14.45100247239964 L109.4376759936069=
6,17.106468776660577 L119.896875,15.416748046875" class=3D"" stroke=3D"#005=
583" fill=3D"#005583"></path></svg></td></tr><tr class=3D"variableTr" id=3D=
"v3__global__four_tr"><td class=3D"stackFrameVar">four</td><td class=3D"sta=
ckFrameValue"><div class=3D"stack_pointer" id=3D"v3__global__four">&nbsp;</=
div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: =
6px; width: 6px; left: 791.521px; top: 13621.5px;"><svg style=3D"position:a=
bsolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" p=
osition=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg><=
/div><svg style=3D"position:absolute;left:757.3114990234375px;top:13601.062=
744140625px" width=3D"157.10625" height=3D"80.50048828125" pointer-events=
=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/=
1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 37.209375 23.4167480=
46875 C 88.553125 30.250244140625 88.553125 30.250244140625 119.896875 57.0=
83740234375" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.=
org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D=
"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www=
.w3.org/1999/xhtml" d=3D"M119.896875,57.083740234375 L114.57613210021847,47=
.921879342917165 L115.71864175591494,53.50709837950296 L110.02404246674496,=
53.23963074447997 L119.896875,57.083740234375" class=3D"" stroke=3D"#005583=
" fill=3D"#005583"></path></svg></td></tr></table></div></div>             =
<div id=3D"stack"></div>           </td>           <td id=3D"heap_td">     =
        <div id=3D"heap"><table id=3D"heapRow0" class=3D"heapRow"><td class=
=3D"toplevelHeapObject" id=3D"toplevel_heap_object_1"><div class=3D"heapObj=
ect" id=3D"v3__heap_object_1_s4"><div class=3D"funcObj">func first(s) [pare=
nt=3DGlobal]</div></div><div class=3D"_jsPlumb_endpoint " style=3D"position=
: absolute; height: 6px; width: 6px; left: 874.208px; top: 13515.1px;"><svg=
 style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" poin=
ter-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://ww=
w.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmln=
s=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"=
></circle></svg></div></td></table><table id=3D"heapRow1" class=3D"heapRow"=
><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_2"><div class=
=3D"heapObject" id=3D"v3__heap_object_2_s4"><div class=3D"funcObj">func res=
t(s) [parent=3DGlobal]</div></div><div class=3D"_jsPlumb_endpoint " style=
=3D"position: absolute; height: 6px; width: 6px; left: 874.208px; top: 1355=
4.5px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" heigh=
t=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" st=
roke=3D"none"></circle></svg></div></td></table><table id=3D"heapRow2" clas=
s=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_3=
"><div class=3D"heapObject" id=3D"v3__heap_object_3_s4"><div class=3D"funcO=
bj">func getitem_link(s,&nbsp;i) [parent=3DGlobal]</div></div><div class=3D=
"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; =
left: 874.208px; top: 13593.8px;"><svg style=3D"position:absolute;left:0px;=
top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolu=
te" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3"=
 cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" st=
yle=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></td></table><t=
able id=3D"heapRow3" class=3D"heapRow"><td class=3D"toplevelHeapObject" id=
=3D"toplevel_heap_object_4"><div class=3D"heapObject" id=3D"v3__heap_object=
_4_s4"><div class=3D"typeLabel">list</div><table class=3D"listTbl"><tbody><=
tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</td></tr><tr><=
td class=3D"listElt"><span class=3D"numberObj">1</span></td><td class=3D"li=
stElt"><div id=3D"v3__heap_pointer_src_1">&nbsp;</div><div class=3D"_jsPlum=
b_endpoint " style=3D"position: absolute; height: 6px; width: 6px; left: 92=
1.021px; top: 13667.9px;"><svg style=3D"position:absolute;left:0px;top:0px"=
 width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" vers=
ion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3=
" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D""=
 fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg style=3D"positi=
on:absolute;left:911.5614990234375px;top:13652.41865234375px" width=3D"52.6=
06249999999996" height=3D"24.1841796875" pointer-events=3D"none" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=
=3D"_jsPlumb_connector "><path d=3D"M 12.459375 18.45634765625 C 26.3031249=
99999998 12.09208984375 26.303124999999998 12.09208984375 40.14687499999999=
4 5.72783203125" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www=
.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-widt=
h=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http:/=
/www.w3.org/1999/xhtml" d=3D"M40.146874999999994,5.72783203125 L32.53897754=
512735,13.101426562829724 L35.15466070377813,8.036034019941194 L29.60126592=
3156745,6.747699276729163 L40.146874999999994,5.72783203125" class=3D"" str=
oke=3D"#005583" fill=3D"#005583"></path></svg></td></tr></tbody></table></d=
iv><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6=
px; width: 6px; left: 874.208px; top: 13655.1px;"><svg style=3D"position:ab=
solute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" po=
sition=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml">=
<circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.or=
g/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div=
></td><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_5"><div c=
lass=3D"heapObject" id=3D"v3__heap_object_5_s4"><div class=3D"typeLabel">li=
st</div><table class=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</td>=
<td class=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><span class=
=3D"numberObj">2</span></td><td class=3D"listElt"><div id=3D"v3__heap_point=
er_src_2">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: =
absolute; height: 6px; width: 6px; left: 995.521px; top: 13667.9px;"><svg s=
tyle=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointe=
r-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.=
w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"non=
e"></circle></svg></div><svg style=3D"position:absolute;left:986.0614990234=
375px;top:13652.41865234375px" width=3D"52.606249999999996" height=3D"24.18=
41796875" pointer-events=3D"none" position=3D"absolute" version=3D"1.1" xml=
ns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=
=3D"M 12.459375 18.45634765625 C 26.303124999999998 12.09208984375 26.30312=
4999999998 12.09208984375 40.146874999999994 5.72783203125" pointer-events=
=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" =
fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path pointer-ev=
ents=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M4=
0.146874999999994,5.72783203125 L32.53897754512735,13.101426562829724 L35.1=
5466070377813,8.036034019941194 L29.601265923156745,6.747699276729163 L40.1=
46874999999994,5.72783203125" class=3D"" stroke=3D"#005583" fill=3D"#005583=
"></path></svg></td></tr></tbody></table></div><div class=3D"_jsPlumb_endpo=
int " style=3D"position: absolute; height: 6px; width: 6px; left: 948.708px=
; top: 13655.1px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"none" stroke=3D"none"></circle></svg></div></td><td class=3D"toplevelHe=
apObject" id=3D"toplevel_heap_object_6"><div class=3D"heapObject" id=3D"v3_=
_heap_object_6_s4"><div class=3D"typeLabel">list</div><table class=3D"listT=
bl"><tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</t=
d></tr><tr><td class=3D"listElt"><span class=3D"numberObj">3</span></td><td=
 class=3D"listElt"><div id=3D"v3__heap_pointer_src_3">&nbsp;</div><div clas=
s=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6=
px; left: 1070.02px; top: 13667.9px;"><svg style=3D"position:absolute;left:=
0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"ab=
solute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=
=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg s=
tyle=3D"position:absolute;left:1060.5614990234376px;top:13652.41865234375px=
" width=3D"52.606249999999996" height=3D"24.1841796875" pointer-events=3D"n=
one" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/=
xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 12.459375 18.45634765625 =
C 26.303124999999998 12.09208984375 26.303124999999998 12.09208984375 40.14=
6874999999994 5.72783203125" pointer-events=3D"all" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#00558=
3" stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" x=
mlns=3D"http://www.w3.org/1999/xhtml" d=3D"M40.146874999999994,5.7278320312=
5 L32.53897754512735,13.101426562829724 L35.15466070377813,8.03603401994119=
4 L29.601265923156745,6.747699276729163 L40.146874999999994,5.72783203125" =
class=3D"" stroke=3D"#005583" fill=3D"#005583"></path></svg></td></tr></tbo=
dy></table></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absol=
ute; height: 6px; width: 6px; left: 1023.21px; top: 13655.1px;"><svg style=
=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-ev=
ents=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"h=
ttp://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></cir=
cle></svg></div></td><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_o=
bject_7"><div class=3D"heapObject" id=3D"v3__heap_object_7_s4"><div class=
=3D"typeLabel">list</div><table class=3D"listTbl"><tbody><tr><td class=3D"l=
istHeader">0</td><td class=3D"listHeader">1</td></tr><tr><td class=3D"listE=
lt"><span class=3D"numberObj">4</span></td><td class=3D"listElt"><span clas=
s=3D"stringObj">"empty"</span></td></tr></tbody></table></div><div class=3D=
"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; =
left: 1097.71px; top: 13655.1px;"><svg style=3D"position:absolute;left:0px;=
top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolu=
te" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3"=
 cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" st=
yle=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></td></table></=
div>           </td>         </tr>       </tbody></table>     </div></td></=
tr></tbody></table></div></div>
<p>First, the function <tt class=3D"docutils literal">getitem_link</tt> is =
called, creating a local frame.</p>
<div class=3D"example" data-output=3D"False" data-showallframelabels=3D"Tru=
e" data-step=3D"5" id=3D"example_3" style=3D""><div class=3D"ExecutionVisua=
lizer" style=3D"min-height: 444px;"><div id=3D"vizHeader" style=3D"display:=
 none;">       <textarea class=3D"vizTitleText" id=3D"vizTitleEditor" cols=
=3D"60" rows=3D"1" style=3D"display: none;"></textarea>       <div class=3D=
"vizTitleText" id=3D"vizTitleViewer"></div>       <textarea class=3D"vizDes=
criptionText" id=3D"vizDescriptionEditor" cols=3D"75" rows=3D"2" style=3D"d=
isplay: none;"></textarea>       <div class=3D"vizDescriptionText" id=3D"vi=
zDescriptionViewer"></div>    </div><table border=3D"0" class=3D"visualizer=
"><tbody><tr><td class=3D"vizLayoutTd" id=3D"vizLayoutTdFirst"><div id=3D"c=
odeDisplayDiv" class=3D"ui-resizable">       <div id=3D"pyCodeOutputDiv" st=
yle=3D"max-height: 400px;"><table id=3D"pyCodeOutput"><tr><td id=3D"gutterT=
D" valign=3D"top" rowspan=3D"12"><svg id=3D"leftCodeGutterSVG" style=3D"hei=
ght: 262px;"><polygon id=3D"prevLineArrow" points=3D"0,0 6,5 0,10" fill=3D"=
#c9e6ca" transform=3D"translate(0, 249.5244140625)"></polygon><polygon id=
=3D"curLineArrow" points=3D"0,0 6,5 0,10" fill=3D"#e93f34" transform=3D"tra=
nslate(0, 138.376953125)"></polygon></svg></td><td class=3D"lineNo" id=3D"l=
ineNo1">1</td><td class=3D"cod" id=3D"v4__cod1">def&nbsp;first(s):</td></tr=
><tr><td class=3D"lineNo" id=3D"lineNo2">2</td><td class=3D"cod" id=3D"v4__=
cod2">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[0]</td></tr><tr><td class=3D"li=
neNo" id=3D"lineNo3">3</td><td class=3D"cod" id=3D"v4__cod3">def&nbsp;rest(=
s):</td></tr><tr><td class=3D"lineNo" id=3D"lineNo4">4</td><td class=3D"cod=
" id=3D"v4__cod4">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[1]</td></tr><tr><td=
 class=3D"lineNo" id=3D"lineNo5">5</td><td class=3D"cod" id=3D"v4__cod5"></=
td></tr><tr><td class=3D"lineNo" id=3D"lineNo6">6</td><td class=3D"cod" id=
=3D"v4__cod6">def&nbsp;getitem_link(s,&nbsp;i):</td></tr><tr><td class=3D"l=
ineNo" id=3D"lineNo7">7</td><td class=3D"cod" id=3D"v4__cod7">&nbsp;&nbsp;&=
nbsp;&nbsp;while&nbsp;i&nbsp;&gt;&nbsp;0:</td></tr><tr><td class=3D"lineNo"=
 id=3D"lineNo8">8</td><td class=3D"cod" id=3D"v4__cod8">&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s,&nbsp;i&nbsp;=3D&nbsp;rest(s),&nbsp;i&nbsp;-=
&nbsp;1</td></tr><tr><td class=3D"lineNo" id=3D"lineNo9">9</td><td class=3D=
"cod" id=3D"v4__cod9">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;first(s)</td></tr=
><tr><td class=3D"lineNo" id=3D"lineNo10">10</td><td class=3D"cod" id=3D"v4=
__cod10"></td></tr><tr><td class=3D"lineNo" id=3D"lineNo11">11</td><td clas=
s=3D"cod" id=3D"v4__cod11">four&nbsp;=3D&nbsp;[1,&nbsp;[2,&nbsp;[3,&nbsp;[4=
,&nbsp;'empty']]]]</td></tr><tr><td class=3D"lineNo" id=3D"lineNo12">12</td=
><td class=3D"cod" id=3D"v4__cod12">getitem_link(four,&nbsp;1)</td></tr></t=
able></div>       <div id=3D"editCodeLinkDiv"><a id=3D"editBtn" href=3D"htt=
p://composingprograms.com/tutor.html#code=3Ddef+first(s)%3A%0A++++return+s%=
5B0%5D%0Adef+rest(s)%3A%0A++++return+s%5B1%5D%0A%0Adef+getitem_link(s,+i)%3=
A%0A++++while+i+%3E+0%3A%0A++++++++s,+i+%3D+rest(s),+i+-+1%0A++++return+fir=
st(s)%0A%0Afour+%3D+%5B1,+%5B2,+%5B3,+%5B4,+'empty'%5D%5D%5D%5D%0Agetitem_l=
ink(four,+1)">Edit code in Online Python Tutor</a></div>       <div id=3D"e=
xecutionSlider" class=3D"ui-slider ui-slider-horizontal ui-widget ui-widget=
-content ui-corner-all" style=3D"font-size: 0.9em;"><a class=3D"ui-slider-h=
andle ui-state-default ui-corner-all" href=3D"https://www.composingprograms=
.com/pages/23-sequences.html#" style=3D"left: 35.7143%; width: 0.8em; heigh=
t: 1.4em;"></a></div>       <div id=3D"vcrControls">         <button id=3D"=
jmpStepBack" ,=3D"" type=3D"button">&lt; Back</button>         <span id=3D"=
curInstr">Step 6 of 14</span>         <button id=3D"jmpStepFwd" ,=3D"" type=
=3D"button">Forward &gt;</button>       </div>       <div id=3D"errorOutput=
" style=3D"display: none;"></div>       <div id=3D"legendDiv"><svg id=3D"pr=
evLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#c9e6ca"></polyg=
on></svg> line that has just executed<p style=3D"margin-top: 4px"><svg id=
=3D"curLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#e93f34"></=
polygon></svg> next line to execute</p></div>       <div id=3D"stepAnnotati=
onDiv">         <textarea class=3D"annotationText" id=3D"stepAnnotationEdit=
or" cols=3D"60" rows=3D"3" style=3D"display: none;"></textarea>         <di=
v class=3D"annotationText" id=3D"stepAnnotationViewer"></div>       </div> =
      <div id=3D"annotateLinkDiv"><button id=3D"annotateBtn" type=3D"button=
" style=3D"display: none;">Annotate this step</button></div>     <div class=
=3D"ui-resizable-handle ui-resizable-e" style=3D"z-index: 1000;"></div></di=
v><div id=3D"htmlOutputDiv"></div>     <div id=3D"progOutputs" style=3D"dis=
play: none;">       Program output:<br>       <textarea id=3D"pyStdout" col=
s=3D"50" rows=3D"10" wrap=3D"off" readonly=3D""></textarea>     </div></td>=
<td class=3D"vizLayoutTd" id=3D"vizLayoutTdSecond"><div id=3D"dataViz">    =
   <table id=3D"stackHeapTable">         <tbody><tr>           <td id=3D"st=
ack_td">             <div id=3D"globals_area">             <div class=3D"st=
ackFrame" id=3D"v4__globals"><div id=3D"v4__globals_header" class=3D"stackF=
rameHeader">Global</div><table class=3D"stackFrameVarTable" id=3D"v4__globa=
l_table"><tr class=3D"variableTr" id=3D"v4__global__first_tr"><td class=3D"=
stackFrameVar">first</td><td class=3D"stackFrameValue"><div class=3D"stack_=
pointer" id=3D"v4__global__first">&nbsp;</div><div class=3D"_jsPlumb_endpoi=
nt " style=3D"position: absolute; height: 6px; width: 6px; left: 897.042px;=
 top: 14028.5px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"position:ab=
solute;left:862.8323120117187px;top:13981.10400390625px" width=3D"157.10625=
" height=3D"72.50097656249999" pointer-events=3D"none" position=3D"absolute=
" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_=
connector "><path d=3D"M 37.209375 50.417480468749986 C 68.553125 26.250488=
281249993 68.553125 26.250488281249993 119.896875 22.083496093749993" point=
er-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" st=
yle=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><path p=
ointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml=
" d=3D"M119.896875,22.083496093749993 L110.21373133261814,26.38311569516157=
5 L114.41499901752182,22.529630280659003 L109.64592418564304,19.40618262655=
2994 L119.896875,22.083496093749993" class=3D"" stroke=3D"#cccccc" fill=3D"=
#cccccc"></path></svg></td></tr><tr class=3D"variableTr" id=3D"v4__global__=
rest_tr"><td class=3D"stackFrameVar">rest</td><td class=3D"stackFrameValue"=
><div class=3D"stack_pointer" id=3D"v4__global__rest">&nbsp;</div><div clas=
s=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6=
px; left: 897.042px; top: 14054.5px;"><svg style=3D"position:absolute;left:=
0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"ab=
solute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=
=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml" style=3D"" fill=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg s=
tyle=3D"position:absolute;left:862.8323120117187px;top:14023.771484375px" w=
idth=3D"157.10625" height=3D"52.5" pointer-events=3D"none" position=3D"abso=
lute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPl=
umb_connector "><path d=3D"M 37.209375 33.75 C 68.553125 16.25 68.553125 16=
.25 119.896875 18.75" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http:=
//www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#cccccc" stroke=
-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"h=
ttp://www.w3.org/1999/xhtml" d=3D"M119.896875,18.75 L110.07814095551596,14.=
76974099288875 L114.40333060504665,18.483598084322484 L109.7390839719264,21=
.76152476828392 L119.896875,18.75" class=3D"" stroke=3D"#cccccc" fill=3D"#c=
ccccc"></path></svg></td></tr><tr class=3D"variableTr" id=3D"v4__global__ge=
titem_link_tr"><td class=3D"stackFrameVar">getitem_link</td><td class=3D"st=
ackFrameValue"><div class=3D"stack_pointer" id=3D"v4__global__getitem_link"=
>&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute;=
 height: 6px; width: 6px; left: 897.042px; top: 14080.5px;"><svg style=3D"p=
osition:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=
=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1=
999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http:=
//www.w3.org/1999/xhtml" style=3D"" fill=3D"#cccccc" stroke=3D"none"></circ=
le></svg></div><svg style=3D"position:absolute;left:862.8323120117187px;top=
:14066.437744140625px" width=3D"157.10625" height=3D"32.50048828125" pointe=
r-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www=
.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 37.209375 17=
.083740234375 C 68.553125 6.250244140625 68.553125 6.250244140625 119.89687=
5 15.416748046875" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://w=
ww.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-wi=
dth=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http=
://www.w3.org/1999/xhtml" d=3D"M119.896875,15.416748046875 L110.66680672475=
742,10.215225228088116 L114.4823264975502,14.45100247239964 L109.4376759936=
0696,17.106468776660577 L119.896875,15.416748046875" class=3D"" stroke=3D"#=
cccccc" fill=3D"#cccccc"></path></svg></td></tr><tr class=3D"variableTr" id=
=3D"v4__global__four_tr"><td class=3D"stackFrameVar">four</td><td class=3D"=
stackFrameValue"><div class=3D"stack_pointer" id=3D"v4__global__four">&nbsp=
;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; heigh=
t: 6px; width: 6px; left: 897.042px; top: 14106.5px;"><svg style=3D"positio=
n:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all=
" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w=
3.org/1999/xhtml" style=3D"" fill=3D"#cccccc" stroke=3D"none"></circle></sv=
g></div><svg style=3D"position:absolute;left:862.8323120117187px;top:14086.=
10498046875px" width=3D"157.10625" height=3D"80.49902343749999" pointer-eve=
nts=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 37.209375 23.4165=
03906249993 C 88.553125 30.249511718749993 88.553125 30.249511718749993 119=
.896875 57.082519531249986" pointer-events=3D"all" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#cccccc" =
stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmln=
s=3D"http://www.w3.org/1999/xhtml" d=3D"M119.896875,57.082519531249986 L114=
.57604970647868,47.92070649038172 L115.7186095908206,53.50591525198522 L110=
.02400789650535,53.2384988293373 L119.896875,57.082519531249986" class=3D""=
 stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg></td></tr></table></div><=
/div>             <div id=3D"stack"><div class=3D"stackFrame highlightedSta=
ckFrame" id=3D"v4__stack0" data-frame_id=3D"1"><div class=3D"stackFrameHead=
er">f1: getitem_link [parent=3DGlobal]</div><table class=3D"stackFrameVarTa=
ble"><tr class=3D"variableTr" id=3D"v4__getitem_link_f1__s_tr"><td class=3D=
"stackFrameVar">s</td><td class=3D"stackFrameValue"><div class=3D"stack_poi=
nter" id=3D"v4__getitem_link_f1__s">&nbsp;</div><div class=3D"_jsPlumb_endp=
oint " style=3D"position: absolute; height: 6px; width: 6px; left: 896.25px=
; top: 14182.9px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"#005583" stroke=3D"none"></circle></svg></div><svg style=3D"position:ab=
solute;left:861.6843658447266px;top:14117.520751953125px" width=3D"158.6104=
553222656" height=3D"94.00048828125" pointer-events=3D"none" position=3D"ab=
solute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_js=
Plumb_connector "><path d=3D"M 37.565634155273436 68.333740234375 C 69.3052=
276611328 37.000244140625 69.3052276611328 37.000244140625 121.044821166992=
16 25.666748046875004" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http=
://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" strok=
e-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"=
http://www.w3.org/1999/xhtml" d=3D"M121.04482116699216,25.666748046875004 L=
112.02667897725475,31.22760332692663 L115.67248901040819,26.844902196099003=
 L110.52721006006057,24.390089673092472 L121.04482116699216,25.666748046875=
004" class=3D"" stroke=3D"#005583" fill=3D"#005583"></path></svg></td></tr>=
<tr class=3D"variableTr" id=3D"v4__getitem_link_f1__i_tr"><td class=3D"stac=
kFrameVar">i</td><td class=3D"stackFrameValue"><span class=3D"numberObj">1<=
/span></td></tr></table></div></div>           </td>           <td id=3D"he=
ap_td">             <div id=3D"heap"><table id=3D"heapRow0" class=3D"heapRo=
w"><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_1"><div clas=
s=3D"heapObject" id=3D"v4__heap_object_1_s5"><div class=3D"funcObj">func fi=
rst(s) [parent=3DGlobal]</div></div><div class=3D"_jsPlumb_endpoint " style=
=3D"position: absolute; height: 6px; width: 6px; left: 979.729px; top: 1400=
0.2px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" heigh=
t=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" st=
roke=3D"none"></circle></svg></div></td></table><table id=3D"heapRow1" clas=
s=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_2=
"><div class=3D"heapObject" id=3D"v4__heap_object_2_s5"><div class=3D"funcO=
bj">func rest(s) [parent=3DGlobal]</div></div><div class=3D"_jsPlumb_endpoi=
nt " style=3D"position: absolute; height: 6px; width: 6px; left: 979.729px;=
 top: 14039.5px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"none" stroke=3D"none"></circle></svg></div></td></table><table id=3D"he=
apRow2" class=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel_h=
eap_object_3"><div class=3D"heapObject" id=3D"v4__heap_object_3_s5"><div cl=
ass=3D"funcObj">func getitem_link(s,&nbsp;i) [parent=3DGlobal]</div></div><=
div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; =
width: 6px; left: 979.729px; top: 14078.9px;"><svg style=3D"position:absolu=
te;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" positi=
on=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><cir=
cle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/19=
99/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></t=
d></table><table id=3D"heapRow3" class=3D"heapRow"><td class=3D"toplevelHea=
pObject" id=3D"toplevel_heap_object_4"><div class=3D"heapObject" id=3D"v4__=
heap_object_4_s5"><div class=3D"typeLabel">list</div><table class=3D"listTb=
l"><tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</td=
></tr><tr><td class=3D"listElt"><span class=3D"numberObj">1</span></td><td =
class=3D"listElt"><div id=3D"v4__heap_pointer_src_1">&nbsp;</div><div class=
=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6p=
x; left: 1026.54px; top: 14152.9px;"><svg style=3D"position:absolute;left:0=
px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D=
"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg styl=
e=3D"position:absolute;left:1017.082373046875px;top:14137.459228515625px" w=
idth=3D"52.606249999999996" height=3D"24.18603515625" pointer-events=3D"non=
e" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xh=
tml" class=3D"_jsPlumb_connector "><path d=3D"M 12.459375 18.457763671875 C=
 26.303124999999998 12.093017578125 26.303124999999998 12.093017578125 40.1=
46874999999994 5.728271484375" pointer-events=3D"all" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#00558=
3" stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" x=
mlns=3D"http://www.w3.org/1999/xhtml" d=3D"M40.146874999999994,5.7282714843=
75 L32.53919220058814,13.10208748584486 L35.15472789981338,8.03661880011811=
 L29.60129561691509,6.7484457219709935 L40.146874999999994,5.728271484375" =
class=3D"" stroke=3D"#005583" fill=3D"#005583"></path></svg></td></tr></tbo=
dy></table></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absol=
ute; height: 6px; width: 6px; left: 979.729px; top: 14140.2px;"><svg style=
=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-ev=
ents=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"h=
ttp://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></cir=
cle></svg></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolu=
te; height: 6px; width: 6px; left: 979.729px; top: 14140.2px;"><svg style=
=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-ev=
ents=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"h=
ttp://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></cir=
cle></svg></div></td><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_o=
bject_5"><div class=3D"heapObject" id=3D"v4__heap_object_5_s5"><div class=
=3D"typeLabel">list</div><table class=3D"listTbl"><tbody><tr><td class=3D"l=
istHeader">0</td><td class=3D"listHeader">1</td></tr><tr><td class=3D"listE=
lt"><span class=3D"numberObj">2</span></td><td class=3D"listElt"><div id=3D=
"v4__heap_pointer_src_2">&nbsp;</div><div class=3D"_jsPlumb_endpoint " styl=
e=3D"position: absolute; height: 6px; width: 6px; left: 1101.04px; top: 141=
52.9px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" heig=
ht=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583"=
 stroke=3D"none"></circle></svg></div><svg style=3D"position:absolute;left:=
1091.582373046875px;top:14137.459228515625px" width=3D"52.606249999999996" =
height=3D"24.18603515625" pointer-events=3D"none" position=3D"absolute" ver=
sion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_conne=
ctor "><path d=3D"M 12.459375 18.457763671875 C 26.303124999999998 12.09301=
7578125 26.303124999999998 12.093017578125 40.146874999999994 5.72827148437=
5" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/x=
html" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path=
><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/19=
99/xhtml" d=3D"M40.146874999999994,5.728271484375 L32.53919220058814,13.102=
08748584486 L35.15472789981338,8.03661880011811 L29.60129561691509,6.748445=
7219709935 L40.146874999999994,5.728271484375" class=3D"" stroke=3D"#005583=
" fill=3D"#005583"></path></svg></td></tr></tbody></table></div><div class=
=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6p=
x; left: 1054.23px; top: 14140.2px;"><svg style=3D"position:absolute;left:0=
px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D=
"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></td><td cla=
ss=3D"toplevelHeapObject" id=3D"toplevel_heap_object_6"><div class=3D"heapO=
bject" id=3D"v4__heap_object_6_s5"><div class=3D"typeLabel">list</div><tabl=
e class=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</td><td class=3D"=
listHeader">1</td></tr><tr><td class=3D"listElt"><span class=3D"numberObj">=
3</span></td><td class=3D"listElt"><div id=3D"v4__heap_pointer_src_3">&nbsp=
;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; heigh=
t: 6px; width: 6px; left: 1175.54px; top: 14152.9px;"><svg style=3D"positio=
n:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all=
" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w=
3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></sv=
g></div><svg style=3D"position:absolute;left:1166.082373046875px;top:14137.=
459228515625px" width=3D"52.606249999999996" height=3D"24.18603515625" poin=
ter-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http://w=
ww.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 12.459375 =
18.457763671875 C 26.303124999999998 12.093017578125 26.303124999999998 12.=
093017578125 40.146874999999994 5.728271484375" pointer-events=3D"all" vers=
ion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none"=
 stroke=3D"#005583" stroke-width=3D"1"></path><path pointer-events=3D"all" =
version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M40.14687499999=
9994,5.728271484375 L32.53919220058814,13.10208748584486 L35.15472789981338=
,8.03661880011811 L29.60129561691509,6.7484457219709935 L40.146874999999994=
,5.728271484375" class=3D"" stroke=3D"#005583" fill=3D"#005583"></path></sv=
g></td></tr></tbody></table></div><div class=3D"_jsPlumb_endpoint " style=
=3D"position: absolute; height: 6px; width: 6px; left: 1128.73px; top: 1414=
0.2px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" heigh=
t=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" st=
roke=3D"none"></circle></svg></div></td><td class=3D"toplevelHeapObject" id=
=3D"toplevel_heap_object_7"><div class=3D"heapObject" id=3D"v4__heap_object=
_7_s5"><div class=3D"typeLabel">list</div><table class=3D"listTbl"><tbody><=
tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</td></tr><tr><=
td class=3D"listElt"><span class=3D"numberObj">4</span></td><td class=3D"li=
stElt"><span class=3D"stringObj">"empty"</span></td></tr></tbody></table></=
div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: =
6px; width: 6px; left: 1203.23px; top: 14140.2px;"><svg style=3D"position:a=
bsolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" p=
osition=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></di=
v></td></table></div>           </td>         </tr>       </tbody></table> =
    </div></td></tr></tbody></table></div></div>
<p>The expression in the <tt class=3D"docutils literal">while</tt> header e=
valuates to true, which causes the
assignment statement in the <tt class=3D"docutils literal">while</tt> suite=
 to be executed.  The function
<tt class=3D"docutils literal">rest</tt> returns the sublist starting with =
2.</p>
<div class=3D"example" data-output=3D"False" data-showallframelabels=3D"Tru=
e" data-step=3D"8" id=3D"example_4" style=3D""><div class=3D"ExecutionVisua=
lizer" style=3D"min-height: 444px;"><div id=3D"vizHeader" style=3D"display:=
 none;">       <textarea class=3D"vizTitleText" id=3D"vizTitleEditor" cols=
=3D"60" rows=3D"1" style=3D"display: none;"></textarea>       <div class=3D=
"vizTitleText" id=3D"vizTitleViewer"></div>       <textarea class=3D"vizDes=
criptionText" id=3D"vizDescriptionEditor" cols=3D"75" rows=3D"2" style=3D"d=
isplay: none;"></textarea>       <div class=3D"vizDescriptionText" id=3D"vi=
zDescriptionViewer"></div>    </div><table border=3D"0" class=3D"visualizer=
"><tbody><tr><td class=3D"vizLayoutTd" id=3D"vizLayoutTdFirst"><div id=3D"c=
odeDisplayDiv" class=3D"ui-resizable">       <div id=3D"pyCodeOutputDiv" st=
yle=3D"max-height: 400px;"><table id=3D"pyCodeOutput"><tr><td id=3D"gutterT=
D" valign=3D"top" rowspan=3D"12"><svg id=3D"leftCodeGutterSVG" style=3D"hei=
ght: 262px;"><polygon id=3D"prevLineArrow" points=3D"0,0 6,5 0,10" fill=3D"=
#c9e6ca" transform=3D"translate(0, 71.6884765625)"></polygon><polygon id=3D=
"curLineArrow" points=3D"0,0 6,5 0,10" fill=3D"#e93f34" transform=3D"transl=
ate(0, 82.6884765625)"></polygon></svg></td><td class=3D"lineNo" id=3D"line=
No1">1</td><td class=3D"cod" id=3D"v5__cod1">def&nbsp;first(s):</td></tr><t=
r><td class=3D"lineNo" id=3D"lineNo2">2</td><td class=3D"cod" id=3D"v5__cod=
2">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[0]</td></tr><tr><td class=3D"lineN=
o" id=3D"lineNo3">3</td><td class=3D"cod" id=3D"v5__cod3">def&nbsp;rest(s):=
</td></tr><tr><td class=3D"lineNo" id=3D"lineNo4">4</td><td class=3D"cod" i=
d=3D"v5__cod4">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[1]</td></tr><tr><td cl=
ass=3D"lineNo" id=3D"lineNo5">5</td><td class=3D"cod" id=3D"v5__cod5"></td>=
</tr><tr><td class=3D"lineNo" id=3D"lineNo6">6</td><td class=3D"cod" id=3D"=
v5__cod6">def&nbsp;getitem_link(s,&nbsp;i):</td></tr><tr><td class=3D"lineN=
o" id=3D"lineNo7">7</td><td class=3D"cod" id=3D"v5__cod7">&nbsp;&nbsp;&nbsp=
;&nbsp;while&nbsp;i&nbsp;&gt;&nbsp;0:</td></tr><tr><td class=3D"lineNo" id=
=3D"lineNo8">8</td><td class=3D"cod" id=3D"v5__cod8">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;s,&nbsp;i&nbsp;=3D&nbsp;rest(s),&nbsp;i&nbsp;-&nb=
sp;1</td></tr><tr><td class=3D"lineNo" id=3D"lineNo9">9</td><td class=3D"co=
d" id=3D"v5__cod9">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;first(s)</td></tr><t=
r><td class=3D"lineNo" id=3D"lineNo10">10</td><td class=3D"cod" id=3D"v5__c=
od10"></td></tr><tr><td class=3D"lineNo" id=3D"lineNo11">11</td><td class=
=3D"cod" id=3D"v5__cod11">four&nbsp;=3D&nbsp;[1,&nbsp;[2,&nbsp;[3,&nbsp;[4,=
&nbsp;'empty']]]]</td></tr><tr><td class=3D"lineNo" id=3D"lineNo12">12</td>=
<td class=3D"cod" id=3D"v5__cod12">getitem_link(four,&nbsp;1)</td></tr></ta=
ble></div>       <div id=3D"editCodeLinkDiv"><a id=3D"editBtn" href=3D"http=
://composingprograms.com/tutor.html#code=3Ddef+first(s)%3A%0A++++return+s%5=
B0%5D%0Adef+rest(s)%3A%0A++++return+s%5B1%5D%0A%0Adef+getitem_link(s,+i)%3A=
%0A++++while+i+%3E+0%3A%0A++++++++s,+i+%3D+rest(s),+i+-+1%0A++++return+firs=
t(s)%0A%0Afour+%3D+%5B1,+%5B2,+%5B3,+%5B4,+'empty'%5D%5D%5D%5D%0Agetitem_li=
nk(four,+1)">Edit code in Online Python Tutor</a></div>       <div id=3D"ex=
ecutionSlider" class=3D"ui-slider ui-slider-horizontal ui-widget ui-widget-=
content ui-corner-all" style=3D"font-size: 0.9em;"><a class=3D"ui-slider-ha=
ndle ui-state-default ui-corner-all" href=3D"https://www.composingprograms.=
com/pages/23-sequences.html#" style=3D"left: 57.1429%; width: 0.8em; height=
: 1.4em;"></a></div>       <div id=3D"vcrControls">         <button id=3D"j=
mpStepBack" ,=3D"" type=3D"button">&lt; Back</button>         <span id=3D"c=
urInstr">Step 9 of 14</span>         <button id=3D"jmpStepFwd" ,=3D"" type=
=3D"button">Forward &gt;</button>       </div>       <div id=3D"errorOutput=
" style=3D"display: none;"></div>       <div id=3D"legendDiv"><svg id=3D"pr=
evLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#c9e6ca"></polyg=
on></svg> line that has just executed<p style=3D"margin-top: 4px"><svg id=
=3D"curLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#e93f34"></=
polygon></svg> next line to execute</p></div>       <div id=3D"stepAnnotati=
onDiv">         <textarea class=3D"annotationText" id=3D"stepAnnotationEdit=
or" cols=3D"60" rows=3D"3" style=3D"display: none;"></textarea>         <di=
v class=3D"annotationText" id=3D"stepAnnotationViewer"></div>       </div> =
      <div id=3D"annotateLinkDiv"><button id=3D"annotateBtn" type=3D"button=
" style=3D"display: none;">Annotate this step</button></div>     <div class=
=3D"ui-resizable-handle ui-resizable-e" style=3D"z-index: 1000;"></div></di=
v><div id=3D"htmlOutputDiv"></div>     <div id=3D"progOutputs" style=3D"dis=
play: none;">       Program output:<br>       <textarea id=3D"pyStdout" col=
s=3D"50" rows=3D"10" wrap=3D"off" readonly=3D""></textarea>     </div></td>=
<td class=3D"vizLayoutTd" id=3D"vizLayoutTdSecond"><div id=3D"dataViz">    =
   <table id=3D"stackHeapTable">         <tbody><tr>           <td id=3D"st=
ack_td">             <div id=3D"globals_area">             <div class=3D"st=
ackFrame" id=3D"v5__globals"><div id=3D"v5__globals_header" class=3D"stackF=
rameHeader">Global</div><table class=3D"stackFrameVarTable" id=3D"v5__globa=
l_table"><tr class=3D"variableTr" id=3D"v5__global__first_tr"><td class=3D"=
stackFrameVar">first</td><td class=3D"stackFrameValue"><div class=3D"stack_=
pointer" id=3D"v5__global__first">&nbsp;</div><div class=3D"_jsPlumb_endpoi=
nt " style=3D"position: absolute; height: 6px; width: 6px; left: 897.042px;=
 top: 14534.4px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"position:ab=
solute;left:862.8323120117187px;top:14486.938232421875px" width=3D"157.1062=
5" height=3D"72.49951171875" pointer-events=3D"none" position=3D"absolute" =
version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_co=
nnector "><path d=3D"M 37.209375 50.416259765625 C 68.553125 26.24975585937=
5 68.553125 26.249755859375 119.896875 22.083251953125" pointer-events=3D"a=
ll" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><path pointer-events=
=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M119.8=
96875,22.083251953125 L110.21369070404896,26.3827800540504 L114.41499480204=
791,22.52933433935074 L109.64594948521619,19.405841620293202 L119.896875,22=
.083251953125" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg>=
</td></tr><tr class=3D"variableTr" id=3D"v5__global__rest_tr"><td class=3D"=
stackFrameVar">rest</td><td class=3D"stackFrameValue"><div class=3D"stack_p=
ointer" id=3D"v5__global__rest">&nbsp;</div><div class=3D"_jsPlumb_endpoint=
 " style=3D"position: absolute; height: 6px; width: 6px; left: 897.042px; t=
op: 14560.4px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"=
6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1=
" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" =
version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#=
cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"position:absolut=
e;left:862.8323120117187px;top:14529.6044921875px" width=3D"157.10625" heig=
ht=3D"52.5" pointer-events=3D"none" position=3D"absolute" version=3D"1.1" x=
mlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=
=3D"M 37.209375 33.75 C 68.553125 16.25 68.553125 16.25 119.896875 18.75" p=
ointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml=
" style=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><pa=
th pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/x=
html" d=3D"M119.896875,18.75 L110.07814095551596,14.76974099288875 L114.403=
33060504665,18.483598084322484 L109.7390839719264,21.76152476828392 L119.89=
6875,18.75" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg></t=
d></tr><tr class=3D"variableTr" id=3D"v5__global__getitem_link_tr"><td clas=
s=3D"stackFrameVar">getitem_link</td><td class=3D"stackFrameValue"><div cla=
ss=3D"stack_pointer" id=3D"v5__global__getitem_link">&nbsp;</div><div class=
=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6p=
x; left: 897.042px; top: 14586.4px;"><svg style=3D"position:absolute;left:0=
px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D=
"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 style=3D"" fill=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg styl=
e=3D"position:absolute;left:862.8323120117187px;top:14572.270751953125px" w=
idth=3D"157.10625" height=3D"32.50048828125" pointer-events=3D"none" positi=
on=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" clas=
s=3D"_jsPlumb_connector "><path d=3D"M 37.209375 17.083740234375 C 68.55312=
5 6.250244140625 68.553125 6.250244140625 119.896875 15.416748046875" point=
er-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" st=
yle=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><path p=
ointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml=
" d=3D"M119.896875,15.416748046875 L110.66680672475742,10.215225228088116 L=
114.4823264975502,14.45100247239964 L109.43767599360696,17.106468776660577 =
L119.896875,15.416748046875" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"=
></path></svg></td></tr><tr class=3D"variableTr" id=3D"v5__global__four_tr"=
><td class=3D"stackFrameVar">four</td><td class=3D"stackFrameValue"><div cl=
ass=3D"stack_pointer" id=3D"v5__global__four">&nbsp;</div><div class=3D"_js=
Plumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; left=
: 897.042px; top: 14612.4px;"><svg style=3D"position:absolute;left:0px;top:=
0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" =
version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=
=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=
=3D"" fill=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"p=
osition:absolute;left:862.8323120117187px;top:14591.937744140625px" width=
=3D"157.10625" height=3D"80.50048828125" pointer-events=3D"none" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=
=3D"_jsPlumb_connector "><path d=3D"M 37.209375 23.416748046875 C 88.553125=
 30.250244140625 88.553125 30.250244140625 119.896875 57.083740234375" poin=
ter-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" s=
tyle=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><path =
pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtm=
l" d=3D"M119.896875,57.083740234375 L114.57613210021847,47.921879342917165 =
L115.71864175591494,53.50709837950296 L110.02404246674496,53.23963074447997=
 L119.896875,57.083740234375" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc=
"></path></svg></td></tr></table></div></div>             <div id=3D"stack"=
><div class=3D"stackFrame" id=3D"v5__stack0" data-frame_id=3D"1"><div class=
=3D"stackFrameHeader">f1: getitem_link [parent=3DGlobal]</div><table class=
=3D"stackFrameVarTable"><tr class=3D"variableTr" id=3D"v5__getitem_link_f1_=
_s_tr"><td class=3D"stackFrameVar">s</td><td class=3D"stackFrameValue"><div=
 class=3D"stack_pointer" id=3D"v5__getitem_link_f1__s">&nbsp;</div><div cla=
ss=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: =
6px; left: 896.25px; top: 14688.7px;"><svg style=3D"position:absolute;left:=
0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"ab=
solute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=
=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xht=
ml" style=3D"" fill=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg s=
tyle=3D"position:absolute;left:861.6843658447266px;top:14623.35498046875px"=
 width=3D"158.6104553222656" height=3D"93.9990234375" pointer-events=3D"non=
e" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xh=
tml" class=3D"_jsPlumb_connector "><path d=3D"M 37.565634155273436 68.33251=
953125 C 69.3052276611328 36.99951171875 69.3052276611328 36.99951171875 12=
1.04482116699216 25.66650390625" pointer-events=3D"all" version=3D"1.1" xml=
ns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#ccc=
ccc" stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1"=
 xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M121.04482116699216,25.6665039=
0625 L112.02662889588002,31.227277967588336 L115.6724784000262,26.844609671=
547992 L110.52722155822802,24.389750809631643 L121.04482116699216,25.666503=
90625" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg></td></t=
r><tr class=3D"variableTr" id=3D"v5__getitem_link_f1__i_tr"><td class=3D"st=
ackFrameVar">i</td><td class=3D"stackFrameValue"><span class=3D"numberObj">=
1</span></td></tr></table></div><div class=3D"stackFrame highlightedStackFr=
ame" id=3D"v5__stack1" data-frame_id=3D"2"><div class=3D"stackFrameHeader">=
f2: rest [parent=3DGlobal]</div><table class=3D"stackFrameVarTable"><tr cla=
ss=3D"variableTr" id=3D"v5__rest_f2__s_tr"><td class=3D"stackFrameVar">s</t=
d><td class=3D"stackFrameValue"><div class=3D"stack_pointer" id=3D"v5__rest=
_f2__s">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: ab=
solute; height: 6px; width: 6px; left: 897.042px; top: 14791px;"><svg style=
=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-ev=
ents=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.o=
rg/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"h=
ttp://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"none"></=
circle></svg></div><svg style=3D"position:absolute;left:862.8323120117187px=
;top:14583.771484375px" width=3D"157.10625" height=3D"275.5" pointer-events=
=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/=
1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 37.209375 210.25 C 6=
8.553125 127.75 68.553125 127.75 119.896875 65.25" pointer-events=3D"all" v=
ersion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"no=
ne" stroke=3D"#005583" stroke-width=3D"1"></path><path pointer-events=3D"al=
l" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M119.896875,=
65.25 L116.25449292018386,75.19902270500145 L116.40600906270677,69.50015940=
969817 L110.84519912602256,70.7561024211737 L119.896875,65.25" class=3D"" s=
troke=3D"#005583" fill=3D"#005583"></path></svg></td></tr><tr class=3D"vari=
ableTr" id=3D"v5__rest_f2____return___tr"><td class=3D"stackFrameVar"><span=
 class=3D"retval">Return<br>value</span></td><td class=3D"stackFrameValue">=
<div class=3D"stack_pointer" id=3D"v5__rest_f2____return__">&nbsp;</div><di=
v class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; wi=
dth: 6px; left: 897.042px; top: 14825.6px;"><svg style=3D"position:absolute=
;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circl=
e cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999=
/xhtml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><s=
vg style=3D"position:absolute;left:829.3072845458985px;top:14568.204296875p=
x" width=3D"298.65636596679684" height=3D"341.228125" pointer-events=3D"non=
e" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xh=
tml" class=3D"_jsPlumb_connector "><path d=3D"M 70.73440246582031 260.41093=
75 C 139.32818298339842 160.6140625 139.32818298339842 160.6140625 227.9219=
6350097652 80.8171875" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http=
://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" strok=
e-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"=
http://www.w3.org/1999/xhtml" d=3D"M227.92196350097652,80.8171875 L222.8345=
8628065324,90.11065795070547 L223.83550422887086,84.49833550265103 L218.149=
48882273376,84.90970978620737 L227.92196350097652,80.8171875" class=3D"" st=
roke=3D"#005583" fill=3D"#005583"></path></svg></td></tr></table></div></di=
v>           </td>           <td id=3D"heap_td">             <div id=3D"hea=
p"><table id=3D"heapRow0" class=3D"heapRow"><td class=3D"toplevelHeapObject=
" id=3D"toplevel_heap_object_1"><div class=3D"heapObject" id=3D"v5__heap_ob=
ject_1_s8"><div class=3D"funcObj">func first(s) [parent=3DGlobal]</div></di=
v><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6p=
x; width: 6px; left: 979.729px; top: 14506px;"><svg style=3D"position:absol=
ute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" posit=
ion=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><ci=
rcle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1=
999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></=
td></table><table id=3D"heapRow1" class=3D"heapRow"><td class=3D"toplevelHe=
apObject" id=3D"toplevel_heap_object_2"><div class=3D"heapObject" id=3D"v5_=
_heap_object_2_s8"><div class=3D"funcObj">func rest(s) [parent=3DGlobal]</d=
iv></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; hei=
ght: 6px; width: 6px; left: 979.729px; top: 14545.4px;"><svg style=3D"posit=
ion:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"a=
ll" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/x=
html"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www=
.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg=
></div></td></table><table id=3D"heapRow2" class=3D"heapRow"><td class=3D"t=
oplevelHeapObject" id=3D"toplevel_heap_object_3"><div class=3D"heapObject" =
id=3D"v5__heap_object_3_s8"><div class=3D"funcObj">func getitem_link(s,&nbs=
p;i) [parent=3DGlobal]</div></div><div class=3D"_jsPlumb_endpoint " style=
=3D"position: absolute; height: 6px; width: 6px; left: 979.729px; top: 1458=
4.7px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" heigh=
t=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" st=
roke=3D"none"></circle></svg></div></td></table><table id=3D"heapRow3" clas=
s=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_4=
"><div class=3D"heapObject" id=3D"v5__heap_object_4_s8"><div class=3D"typeL=
abel">list</div><table class=3D"listTbl"><tbody><tr><td class=3D"listHeader=
">0</td><td class=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><span=
 class=3D"numberObj">1</span></td><td class=3D"listElt"><div id=3D"v5__heap=
_pointer_src_1">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"posi=
tion: absolute; height: 6px; width: 6px; left: 1026.54px; top: 14658.8px;">=
<svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" =
pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http:=
//www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" =
xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=
=3D"none"></circle></svg></div><svg style=3D"position:absolute;left:1017.08=
2373046875px;top:14643.29365234375px" width=3D"52.606249999999996" height=
=3D"24.1841796875" pointer-events=3D"none" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector ">=
<path d=3D"M 12.459375 18.45634765625 C 26.303124999999998 12.09208984375 2=
6.303124999999998 12.09208984375 40.146874999999994 5.72783203125" pointer-=
events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=
=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path poin=
ter-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=
=3D"M40.146874999999994,5.72783203125 L32.53897754512735,13.101426562829724=
 L35.15466070377813,8.036034019941194 L29.601265923156745,6.747699276729163=
 L40.146874999999994,5.72783203125" class=3D"" stroke=3D"#005583" fill=3D"#=
005583"></path></svg></td></tr></tbody></table></div><div class=3D"_jsPlumb=
_endpoint " style=3D"position: absolute; height: 6px; width: 6px; left: 979=
.729px; top: 14646px;"><svg style=3D"position:absolute;left:0px;top:0px" wi=
dth=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=
=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fi=
ll=3D"none" stroke=3D"none"></circle></svg></div><div class=3D"_jsPlumb_end=
point " style=3D"position: absolute; height: 6px; width: 6px; left: 979.729=
px; top: 14646px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"none" stroke=3D"none"></circle></svg></div><div class=3D"_jsPlumb_endpo=
int " style=3D"position: absolute; height: 6px; width: 6px; left: 979.729px=
; top: 14646px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D=
"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.=
1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3"=
 version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"=
none" stroke=3D"none"></circle></svg></div></td><td class=3D"toplevelHeapOb=
ject" id=3D"toplevel_heap_object_5"><div class=3D"heapObject" id=3D"v5__hea=
p_object_5_s8"><div class=3D"typeLabel">list</div><table class=3D"listTbl">=
<tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</td></=
tr><tr><td class=3D"listElt"><span class=3D"numberObj">2</span></td><td cla=
ss=3D"listElt"><div id=3D"v5__heap_pointer_src_2">&nbsp;</div><div class=3D=
"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; =
left: 1101.04px; top: 14658.8px;"><svg style=3D"position:absolute;left:0px;=
top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolu=
te" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3"=
 cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" st=
yle=3D"" fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg style=
=3D"position:absolute;left:1091.582373046875px;top:14643.29365234375px" wid=
th=3D"52.606249999999996" height=3D"24.1841796875" pointer-events=3D"none" =
position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml=
" class=3D"_jsPlumb_connector "><path d=3D"M 12.459375 18.45634765625 C 26.=
303124999999998 12.09208984375 26.303124999999998 12.09208984375 40.1468749=
99999994 5.72783203125" pointer-events=3D"all" version=3D"1.1" xmlns=3D"htt=
p://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stro=
ke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" d=3D"M40.146874999999994,5.72783203125 L32.5=
3897754512735,13.101426562829724 L35.15466070377813,8.036034019941194 L29.6=
01265923156745,6.747699276729163 L40.146874999999994,5.72783203125" class=
=3D"" stroke=3D"#005583" fill=3D"#005583"></path></svg></td></tr></tbody></=
table></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; =
height: 6px; width: 6px; left: 1054.23px; top: 14646px;"><svg style=3D"posi=
tion:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"=
all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/=
xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://ww=
w.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></sv=
g></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; heig=
ht: 6px; width: 6px; left: 1054.23px; top: 14646px;"><svg style=3D"position=
:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all"=
 position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtm=
l"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3=
.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></=
div></td><td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_6"><di=
v class=3D"heapObject" id=3D"v5__heap_object_6_s8"><div class=3D"typeLabel"=
>list</div><table class=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</=
td><td class=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><span clas=
s=3D"numberObj">3</span></td><td class=3D"listElt"><div id=3D"v5__heap_poin=
ter_src_3">&nbsp;</div><div class=3D"_jsPlumb_endpoint " style=3D"position:=
 absolute; height: 6px; width: 6px; left: 1175.54px; top: 14658.8px;"><svg =
style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" point=
er-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www=
.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"non=
e"></circle></svg></div><svg style=3D"position:absolute;left:1166.082373046=
875px;top:14643.29365234375px" width=3D"52.606249999999996" height=3D"24.18=
41796875" pointer-events=3D"none" position=3D"absolute" version=3D"1.1" xml=
ns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=
=3D"M 12.459375 18.45634765625 C 26.303124999999998 12.09208984375 26.30312=
4999999998 12.09208984375 40.146874999999994 5.72783203125" pointer-events=
=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" =
fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path><path pointer-ev=
ents=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M4=
0.146874999999994,5.72783203125 L32.53897754512735,13.101426562829724 L35.1=
5466070377813,8.036034019941194 L29.601265923156745,6.747699276729163 L40.1=
46874999999994,5.72783203125" class=3D"" stroke=3D"#005583" fill=3D"#005583=
"></path></svg></td></tr></tbody></table></div><div class=3D"_jsPlumb_endpo=
int " style=3D"position: absolute; height: 6px; width: 6px; left: 1128.73px=
; top: 14646px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D=
"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.=
1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3"=
 version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"=
none" stroke=3D"none"></circle></svg></div></td><td class=3D"toplevelHeapOb=
ject" id=3D"toplevel_heap_object_7"><div class=3D"heapObject" id=3D"v5__hea=
p_object_7_s8"><div class=3D"typeLabel">list</div><table class=3D"listTbl">=
<tbody><tr><td class=3D"listHeader">0</td><td class=3D"listHeader">1</td></=
tr><tr><td class=3D"listElt"><span class=3D"numberObj">4</span></td><td cla=
ss=3D"listElt"><span class=3D"stringObj">"empty"</span></td></tr></tbody></=
table></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; =
height: 6px; width: 6px; left: 1203.23px; top: 14646px;"><svg style=3D"posi=
tion:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"=
all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/=
xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://ww=
w.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></sv=
g></div></td></table></div>           </td>         </tr>       </tbody></t=
able>     </div></td></tr></tbody></table></div></div>
<p>Next, the local name <tt class=3D"docutils literal">s</tt> will be updat=
ed to refer to the sub-list that begins
with the second element of the original list.  Evaluating the <tt class=3D"=
docutils literal">while</tt> header
expression now yields a false value, and so Python evaluates the expression=
 in
the return statement on the final line of <tt class=3D"docutils literal">ge=
titem_link</tt>.</p>
<div class=3D"example" data-output=3D"False" data-showallframelabels=3D"Tru=
e" data-step=3D"12" id=3D"example_5" style=3D""><div class=3D"ExecutionVisu=
alizer" style=3D"min-height: 508px;"><div id=3D"vizHeader" style=3D"display=
: none;">       <textarea class=3D"vizTitleText" id=3D"vizTitleEditor" cols=
=3D"60" rows=3D"1" style=3D"display: none;"></textarea>       <div class=3D=
"vizTitleText" id=3D"vizTitleViewer"></div>       <textarea class=3D"vizDes=
criptionText" id=3D"vizDescriptionEditor" cols=3D"75" rows=3D"2" style=3D"d=
isplay: none;"></textarea>       <div class=3D"vizDescriptionText" id=3D"vi=
zDescriptionViewer"></div>    </div><table border=3D"0" class=3D"visualizer=
"><tbody><tr><td class=3D"vizLayoutTd" id=3D"vizLayoutTdFirst"><div id=3D"c=
odeDisplayDiv" class=3D"ui-resizable">       <div id=3D"pyCodeOutputDiv" st=
yle=3D"max-height: 400px;"><table id=3D"pyCodeOutput"><tr><td id=3D"gutterT=
D" valign=3D"top" rowspan=3D"12"><svg id=3D"leftCodeGutterSVG" style=3D"hei=
ght: 262px;"><polygon id=3D"prevLineArrow" points=3D"0,0 6,5 0,10" fill=3D"=
#c9e6ca" transform=3D"translate(0, 27.2294921875)"></polygon><polygon id=3D=
"curLineArrow" points=3D"0,0 6,5 0,10" fill=3D"#e93f34" transform=3D"transl=
ate(0, 38.2294921875)"></polygon></svg></td><td class=3D"lineNo" id=3D"line=
No1">1</td><td class=3D"cod" id=3D"v6__cod1">def&nbsp;first(s):</td></tr><t=
r><td class=3D"lineNo" id=3D"lineNo2">2</td><td class=3D"cod" id=3D"v6__cod=
2">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[0]</td></tr><tr><td class=3D"lineN=
o" id=3D"lineNo3">3</td><td class=3D"cod" id=3D"v6__cod3">def&nbsp;rest(s):=
</td></tr><tr><td class=3D"lineNo" id=3D"lineNo4">4</td><td class=3D"cod" i=
d=3D"v6__cod4">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;s[1]</td></tr><tr><td cl=
ass=3D"lineNo" id=3D"lineNo5">5</td><td class=3D"cod" id=3D"v6__cod5"></td>=
</tr><tr><td class=3D"lineNo" id=3D"lineNo6">6</td><td class=3D"cod" id=3D"=
v6__cod6">def&nbsp;getitem_link(s,&nbsp;i):</td></tr><tr><td class=3D"lineN=
o" id=3D"lineNo7">7</td><td class=3D"cod" id=3D"v6__cod7">&nbsp;&nbsp;&nbsp=
;&nbsp;while&nbsp;i&nbsp;&gt;&nbsp;0:</td></tr><tr><td class=3D"lineNo" id=
=3D"lineNo8">8</td><td class=3D"cod" id=3D"v6__cod8">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;s,&nbsp;i&nbsp;=3D&nbsp;rest(s),&nbsp;i&nbsp;-&nb=
sp;1</td></tr><tr><td class=3D"lineNo" id=3D"lineNo9">9</td><td class=3D"co=
d" id=3D"v6__cod9">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;first(s)</td></tr><t=
r><td class=3D"lineNo" id=3D"lineNo10">10</td><td class=3D"cod" id=3D"v6__c=
od10"></td></tr><tr><td class=3D"lineNo" id=3D"lineNo11">11</td><td class=
=3D"cod" id=3D"v6__cod11">four&nbsp;=3D&nbsp;[1,&nbsp;[2,&nbsp;[3,&nbsp;[4,=
&nbsp;'empty']]]]</td></tr><tr><td class=3D"lineNo" id=3D"lineNo12">12</td>=
<td class=3D"cod" id=3D"v6__cod12">getitem_link(four,&nbsp;1)</td></tr></ta=
ble></div>       <div id=3D"editCodeLinkDiv"><a id=3D"editBtn" href=3D"http=
://composingprograms.com/tutor.html#code=3Ddef+first(s)%3A%0A++++return+s%5=
B0%5D%0Adef+rest(s)%3A%0A++++return+s%5B1%5D%0A%0Adef+getitem_link(s,+i)%3A=
%0A++++while+i+%3E+0%3A%0A++++++++s,+i+%3D+rest(s),+i+-+1%0A++++return+firs=
t(s)%0A%0Afour+%3D+%5B1,+%5B2,+%5B3,+%5B4,+'empty'%5D%5D%5D%5D%0Agetitem_li=
nk(four,+1)">Edit code in Online Python Tutor</a></div>       <div id=3D"ex=
ecutionSlider" class=3D"ui-slider ui-slider-horizontal ui-widget ui-widget-=
content ui-corner-all" style=3D"font-size: 0.9em;"><a class=3D"ui-slider-ha=
ndle ui-state-default ui-corner-all" href=3D"https://www.composingprograms.=
com/pages/23-sequences.html#" style=3D"left: 85.7143%; width: 0.8em; height=
: 1.4em;"></a></div>       <div id=3D"vcrControls">         <button id=3D"j=
mpStepBack" ,=3D"" type=3D"button">&lt; Back</button>         <span id=3D"c=
urInstr">Step 13 of 14</span>         <button id=3D"jmpStepFwd" ,=3D"" type=
=3D"button">Forward &gt;</button>       </div>       <div id=3D"errorOutput=
" style=3D"display: none;"></div>       <div id=3D"legendDiv"><svg id=3D"pr=
evLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#c9e6ca"></polyg=
on></svg> line that has just executed<p style=3D"margin-top: 4px"><svg id=
=3D"curLegendArrowSVG"><polygon points=3D"0,0 6,5 0,10" fill=3D"#e93f34"></=
polygon></svg> next line to execute</p></div>       <div id=3D"stepAnnotati=
onDiv">         <textarea class=3D"annotationText" id=3D"stepAnnotationEdit=
or" cols=3D"60" rows=3D"3" style=3D"display: none;"></textarea>         <di=
v class=3D"annotationText" id=3D"stepAnnotationViewer"></div>       </div> =
      <div id=3D"annotateLinkDiv"><button id=3D"annotateBtn" type=3D"button=
" style=3D"display: none;">Annotate this step</button></div>     <div class=
=3D"ui-resizable-handle ui-resizable-e" style=3D"z-index: 1000;"></div></di=
v><div id=3D"htmlOutputDiv"></div>     <div id=3D"progOutputs" style=3D"dis=
play: none;">       Program output:<br>       <textarea id=3D"pyStdout" col=
s=3D"50" rows=3D"10" wrap=3D"off" readonly=3D""></textarea>     </div></td>=
<td class=3D"vizLayoutTd" id=3D"vizLayoutTdSecond"><div id=3D"dataViz">    =
   <table id=3D"stackHeapTable">         <tbody><tr>           <td id=3D"st=
ack_td">             <div id=3D"globals_area">             <div class=3D"st=
ackFrame" id=3D"v6__globals"><div id=3D"v6__globals_header" class=3D"stackF=
rameHeader">Global</div><table class=3D"stackFrameVarTable" id=3D"v6__globa=
l_table"><tr class=3D"variableTr" id=3D"v6__global__first_tr"><td class=3D"=
stackFrameVar">first</td><td class=3D"stackFrameValue"><div class=3D"stack_=
pointer" id=3D"v6__global__first">&nbsp;</div><div class=3D"_jsPlumb_endpoi=
nt " style=3D"position: absolute; height: 6px; width: 6px; left: 897.042px;=
 top: 15061px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"=
6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1=
" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" =
version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#=
cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"position:absolut=
e;left:862.8323120117187px;top:15013.563232421875px" width=3D"157.10625" he=
ight=3D"72.49951171875" pointer-events=3D"none" position=3D"absolute" versi=
on=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connect=
or "><path d=3D"M 37.209375 50.416259765625 C 68.553125 26.249755859375 68.=
553125 26.249755859375 119.896875 22.083251953125" pointer-events=3D"all" v=
ersion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"no=
ne" stroke=3D"#cccccc" stroke-width=3D"1"></path><path pointer-events=3D"al=
l" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M119.896875,=
22.083251953125 L110.21369070404896,26.3827800540504 L114.41499480204791,22=
.52933433935074 L109.64594948521619,19.405841620293202 L119.896875,22.08325=
1953125" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg></td><=
/tr><tr class=3D"variableTr" id=3D"v6__global__rest_tr"><td class=3D"stackF=
rameVar">rest</td><td class=3D"stackFrameValue"><div class=3D"stack_pointer=
" id=3D"v6__global__rest">&nbsp;</div><div class=3D"_jsPlumb_endpoint " sty=
le=3D"position: absolute; height: 6px; width: 6px; left: 897.042px; top: 15=
087px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" heigh=
t=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#cccccc"=
 stroke=3D"none"></circle></svg></div><svg style=3D"position:absolute;left:=
862.8323120117187px;top:15056.2294921875px" width=3D"157.10625" height=3D"5=
2.5" pointer-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D=
"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 3=
7.209375 33.75 C 68.553125 16.25 68.553125 16.25 119.896875 18.75" pointer-=
events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=
=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><path poin=
ter-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=
=3D"M119.896875,18.75 L110.07814095551596,14.76974099288875 L114.4033306050=
4665,18.483598084322484 L109.7390839719264,21.76152476828392 L119.896875,18=
.75" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg></td></tr>=
<tr class=3D"variableTr" id=3D"v6__global__getitem_link_tr"><td class=3D"st=
ackFrameVar">getitem_link</td><td class=3D"stackFrameValue"><div class=3D"s=
tack_pointer" id=3D"v6__global__getitem_link">&nbsp;</div><div class=3D"_js=
Plumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; left=
: 897.042px; top: 15113px;"><svg style=3D"position:absolute;left:0px;top:0p=
x" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" ve=
rsion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D=
"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D=
"" fill=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"posi=
tion:absolute;left:862.8323120117187px;top:15098.895751953125px" width=3D"1=
57.10625" height=3D"32.50048828125" pointer-events=3D"none" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsP=
lumb_connector "><path d=3D"M 37.209375 17.083740234375 C 68.553125 6.25024=
4140625 68.553125 6.250244140625 119.896875 15.416748046875" pointer-events=
=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" =
fill=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><path pointer-ev=
ents=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M1=
19.896875,15.416748046875 L110.66680672475742,10.215225228088116 L114.48232=
64975502,14.45100247239964 L109.43767599360696,17.106468776660577 L119.8968=
75,15.416748046875" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"></path><=
/svg></td></tr><tr class=3D"variableTr" id=3D"v6__global__four_tr"><td clas=
s=3D"stackFrameVar">four</td><td class=3D"stackFrameValue"><div class=3D"st=
ack_pointer" id=3D"v6__global__four">&nbsp;</div><div class=3D"_jsPlumb_end=
point " style=3D"position: absolute; height: 6px; width: 6px; left: 897.042=
px; top: 15139px;"><svg style=3D"position:absolute;left:0px;top:0px" width=
=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D=
"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D=
"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"position:ab=
solute;left:862.8323120117187px;top:15118.562744140625px" width=3D"157.1062=
5" height=3D"80.50048828125" pointer-events=3D"none" position=3D"absolute" =
version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_co=
nnector "><path d=3D"M 37.209375 23.416748046875 C 88.553125 30.25024414062=
5 88.553125 30.250244140625 119.896875 57.083740234375" pointer-events=3D"a=
ll" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=
=3D"none" stroke=3D"#cccccc" stroke-width=3D"1"></path><path pointer-events=
=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M119.8=
96875,57.083740234375 L114.57613210021847,47.921879342917165 L115.718641755=
91494,53.50709837950296 L110.02404246674496,53.23963074447997 L119.896875,5=
7.083740234375" class=3D"" stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg=
></td></tr></table></div></div>             <div id=3D"stack"><div class=3D=
"stackFrame" id=3D"v6__stack0" data-frame_id=3D"1"><div class=3D"stackFrame=
Header">f1: getitem_link [parent=3DGlobal]</div><table class=3D"stackFrameV=
arTable"><tr class=3D"variableTr" id=3D"v6__getitem_link_f1__s_tr"><td clas=
s=3D"stackFrameVar">s</td><td class=3D"stackFrameValue"><div class=3D"stack=
_pointer" id=3D"v6__getitem_link_f1__s">&nbsp;</div><div class=3D"_jsPlumb_=
endpoint " style=3D"position: absolute; height: 6px; width: 6px; left: 896.=
25px; top: 15215.3px;"><svg style=3D"position:absolute;left:0px;top:0px" wi=
dth=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=
=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fi=
ll=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"position:=
absolute;left:828.1593383789062px;top:15149.97998046875px" width=3D"300.160=
5712890625" height=3D"93.9990234375" pointer-events=3D"none" position=3D"ab=
solute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_js=
Plumb_connector "><path d=3D"M 71.09066162109376 68.33251953125 C 140.08028=
564453124 36.99951171875 140.08028564453124 36.99951171875 229.069909667968=
72 25.66650390625" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://w=
ww.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-wi=
dth=3D"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http=
://www.w3.org/1999/xhtml" d=3D"M229.06990966796872,25.66650390625 L219.5924=
9502660518,30.402389432280824 L223.6140201209657,26.3616796041159 L218.7077=
2595659403,23.458530008822454 L229.06990966796872,25.66650390625" class=3D"=
" stroke=3D"#cccccc" fill=3D"#cccccc"></path></svg></td></tr><tr class=3D"v=
ariableTr" id=3D"v6__getitem_link_f1__i_tr"><td class=3D"stackFrameVar">i</=
td><td class=3D"stackFrameValue"><span class=3D"numberObj">0</span></td></t=
r></table></div><div class=3D"zombieStackFrame" id=3D"v6__zombie_stack1" da=
ta-frame_id=3D"2"><div class=3D"stackFrameHeader">f2: rest [parent=3DGlobal=
]</div><table class=3D"stackFrameVarTable"><tr class=3D"variableTr" id=3D"v=
6__rest_f2_z__s_tr"><td class=3D"stackFrameVar">s</td><td class=3D"stackFra=
meValue"><div class=3D"stack_pointer" id=3D"v6__rest_f2_z__s">&nbsp;</div><=
div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; =
width: 6px; left: 897.042px; top: 15317.6px;"><svg style=3D"position:absolu=
te;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" positi=
on=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><cir=
cle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/19=
99/xhtml" style=3D"" fill=3D"#cccccc" stroke=3D"none"></circle></svg></div>=
<svg style=3D"position:absolute;left:862.8323120117187px;top:15110.39648437=
5px" width=3D"157.10625" height=3D"275.5" pointer-events=3D"none" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=
=3D"_jsPlumb_connector "><path d=3D"M 37.209375 210.25 C 68.553125 127.75 6=
8.553125 127.75 119.896875 65.25" pointer-events=3D"all" version=3D"1.1" xm=
lns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#cc=
cccc" stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1=
" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M119.896875,65.25 L116.254492=
92018386,75.19902270500145 L116.40600906270677,69.50015940969817 L110.84519=
912602256,70.7561024211737 L119.896875,65.25" class=3D"" stroke=3D"#cccccc"=
 fill=3D"#cccccc"></path></svg></td></tr><tr class=3D"variableTr" id=3D"v6_=
_rest_f2_z____return___tr"><td class=3D"stackFrameVar"><span class=3D"retva=
l">Return<br>value</span></td><td class=3D"stackFrameValue"><div class=3D"s=
tack_pointer" id=3D"v6__rest_f2_z____return__">&nbsp;</div><div class=3D"_j=
sPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6px; lef=
t: 897.042px; top: 15352.2px;"><svg style=3D"position:absolute;left:0px;top=
:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute"=
 version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=
=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=
=3D"" fill=3D"#cccccc" stroke=3D"none"></circle></svg></div><svg style=3D"p=
osition:absolute;left:829.3072845458985px;top:15094.829296875px" width=3D"2=
98.65636596679684" height=3D"341.228125" pointer-events=3D"none" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=
=3D"_jsPlumb_connector "><path d=3D"M 70.73440246582031 260.4109375 C 139.3=
2818298339842 160.6140625 139.32818298339842 160.6140625 227.92196350097652=
 80.8171875" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.=
org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#cccccc" stroke-width=3D=
"1"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www=
.w3.org/1999/xhtml" d=3D"M227.92196350097652,80.8171875 L222.83458628065324=
,90.11065795070547 L223.83550422887086,84.49833550265103 L218.1494888227337=
6,84.90970978620737 L227.92196350097652,80.8171875" class=3D"" stroke=3D"#c=
ccccc" fill=3D"#cccccc"></path></svg></td></tr></table></div><div class=3D"=
stackFrame highlightedStackFrame" id=3D"v6__stack2" data-frame_id=3D"3"><di=
v class=3D"stackFrameHeader">f3: first [parent=3DGlobal]</div><table class=
=3D"stackFrameVarTable"><tr class=3D"variableTr" id=3D"v6__first_f3__s_tr">=
<td class=3D"stackFrameVar">s</td><td class=3D"stackFrameValue"><div class=
=3D"stack_pointer" id=3D"v6__first_f3__s">&nbsp;</div><div class=3D"_jsPlum=
b_endpoint " style=3D"position: absolute; height: 6px; width: 6px; left: 89=
6.25px; top: 15437.2px;"><svg style=3D"position:absolute;left:0px;top:0px" =
width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" versi=
on=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3"=
 r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" =
fill=3D"#005583" stroke=3D"none"></circle></svg></div><svg style=3D"positio=
n:absolute;left:828.1593383789062px;top:15056.612255859374px" width=3D"300.=
1605712890625" height=3D"502.58896484375" pointer-events=3D"none" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=
=3D"_jsPlumb_connector "><path d=3D"M 71.09066162109376 383.554736328125 C =
140.08028564453124 241.294482421875 140.08028564453124 241.294482421875 229=
.06990966796872 119.034228515625" pointer-events=3D"all" version=3D"1.1" xm=
lns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#00=
5583" stroke-width=3D"1"></path><path pointer-events=3D"all" version=3D"1.1=
" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M229.06990966796872,119.03422=
8515625 L226.01528825620863,129.1791429081084 L225.8334394701771,123.481166=
8622638 L220.3555485423047,125.05999902000995 L229.06990966796872,119.03422=
8515625" class=3D"" stroke=3D"#005583" fill=3D"#005583"></path></svg></td><=
/tr><tr class=3D"variableTr" id=3D"v6__first_f3____return___tr"><td class=
=3D"stackFrameVar"><span class=3D"retval">Return<br>value</span></td><td cl=
ass=3D"stackFrameValue"><span class=3D"numberObj">2</span></td></tr></table=
></div></div>           </td>           <td id=3D"heap_td">             <di=
v id=3D"heap"><table id=3D"heapRow0" class=3D"heapRow"><td class=3D"topleve=
lHeapObject" id=3D"toplevel_heap_object_1"><div class=3D"heapObject" id=3D"=
v6__heap_object_1_s12"><div class=3D"funcObj">func first(s) [parent=3DGloba=
l]</div></div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute=
; height: 6px; width: 6px; left: 979.729px; top: 15032.6px;"><svg style=3D"=
position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=
=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1=
999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http:=
//www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle>=
</svg></div></td></table><table id=3D"heapRow1" class=3D"heapRow"><td class=
=3D"toplevelHeapObject" id=3D"toplevel_heap_object_2"><div class=3D"heapObj=
ect" id=3D"v6__heap_object_2_s12"><div class=3D"funcObj">func rest(s) [pare=
nt=3DGlobal]</div></div><div class=3D"_jsPlumb_endpoint " style=3D"position=
: absolute; height: 6px; width: 6px; left: 979.729px; top: 15072px;"><svg s=
tyle=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointe=
r-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.=
w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=
=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"none">=
</circle></svg></div></td></table><table id=3D"heapRow2" class=3D"heapRow">=
<td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_3"><div class=
=3D"heapObject" id=3D"v6__heap_object_3_s12"><div class=3D"funcObj">func ge=
titem_link(s,&nbsp;i) [parent=3DGlobal]</div></div><div class=3D"_jsPlumb_e=
ndpoint " style=3D"position: absolute; height: 6px; width: 6px; left: 979.7=
29px; top: 15111.3px;"><svg style=3D"position:absolute;left:0px;top:0px" wi=
dth=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=
=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fi=
ll=3D"none" stroke=3D"none"></circle></svg></div></td></table><table id=3D"=
heapRow3" class=3D"heapRow"><td class=3D"toplevelHeapObject" id=3D"toplevel=
_heap_object_4"><div class=3D"heapObject" id=3D"v6__heap_object_4_s12"><div=
 class=3D"typeLabel">list</div><table class=3D"listTbl"><tbody><tr><td clas=
s=3D"listHeader">0</td><td class=3D"listHeader">1</td></tr><tr><td class=3D=
"listElt"><span class=3D"numberObj">1</span></td><td class=3D"listElt"><div=
 id=3D"v6__heap_pointer_src_1">&nbsp;</div><div class=3D"_jsPlumb_endpoint =
" style=3D"position: absolute; height: 6px; width: 6px; left: 1026.54px; to=
p: 15185.4px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6=
" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1"=
 xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" v=
ersion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"#0=
05583" stroke=3D"none"></circle></svg></div><svg style=3D"position:absolute=
;left:1017.082373046875px;top:15169.91865234375px" width=3D"52.606249999999=
996" height=3D"24.1841796875" pointer-events=3D"none" position=3D"absolute"=
 version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_jsPlumb_c=
onnector "><path d=3D"M 12.459375 18.45634765625 C 26.303124999999998 12.09=
208984375 26.303124999999998 12.09208984375 40.146874999999994 5.7278320312=
5" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/x=
html" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1"></path=
><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.org/19=
99/xhtml" d=3D"M40.146874999999994,5.72783203125 L32.53897754512735,13.1014=
26562829724 L35.15466070377813,8.036034019941194 L29.601265923156745,6.7476=
99276729163 L40.146874999999994,5.72783203125" class=3D"" stroke=3D"#005583=
" fill=3D"#005583"></path></svg></td></tr></tbody></table></div><div class=
=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6p=
x; left: 979.729px; top: 15172.6px;"><svg style=3D"position:absolute;left:0=
px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D=
"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div><div class=
=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; width: 6p=
x; left: 979.729px; top: 15172.6px;"><svg style=3D"position:absolute;left:0=
px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=3D"abs=
olute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D=
"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"=
 style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></td><td cla=
ss=3D"toplevelHeapObject" id=3D"toplevel_heap_object_5"><div class=3D"heapO=
bject" id=3D"v6__heap_object_5_s12"><div class=3D"typeLabel">list</div><tab=
le class=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</td><td class=3D=
"listHeader">1</td></tr><tr><td class=3D"listElt"><span class=3D"numberObj"=
>2</span></td><td class=3D"listElt"><div id=3D"v6__heap_pointer_src_2">&nbs=
p;</div><div class=3D"_jsPlumb_endpoint " style=3D"position: absolute; heig=
ht: 6px; width: 6px; left: 1101.04px; top: 15185.4px;"><svg style=3D"positi=
on:absolute;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"al=
l" position=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xh=
tml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.=
w3.org/1999/xhtml" style=3D"" fill=3D"#005583" stroke=3D"none"></circle></s=
vg></div><svg style=3D"position:absolute;left:1091.582373046875px;top:15169=
.91865234375px" width=3D"52.606249999999996" height=3D"24.1841796875" point=
er-events=3D"none" position=3D"absolute" version=3D"1.1" xmlns=3D"http://ww=
w.w3.org/1999/xhtml" class=3D"_jsPlumb_connector "><path d=3D"M 12.459375 1=
8.45634765625 C 26.303124999999998 12.09208984375 26.303124999999998 12.092=
08984375 40.146874999999994 5.72783203125" pointer-events=3D"all" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" st=
roke=3D"#005583" stroke-width=3D"1"></path><path pointer-events=3D"all" ver=
sion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" d=3D"M40.14687499999999=
4,5.72783203125 L32.53897754512735,13.101426562829724 L35.15466070377813,8.=
036034019941194 L29.601265923156745,6.747699276729163 L40.146874999999994,5=
.72783203125" class=3D"" stroke=3D"#005583" fill=3D"#005583"></path></svg><=
/td></tr></tbody></table></div><div class=3D"_jsPlumb_endpoint " style=3D"p=
osition: absolute; height: 6px; width: 6px; left: 1054.23px; top: 15172.6px=
;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"=
6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"ht=
tp://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.=
1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=
=3D"none"></circle></svg></div><div class=3D"_jsPlumb_endpoint " style=3D"p=
osition: absolute; height: 6px; width: 6px; left: 1054.23px; top: 15172.6px=
;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"=
6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"ht=
tp://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.=
1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=
=3D"none"></circle></svg></div><div class=3D"_jsPlumb_endpoint " style=3D"p=
osition: absolute; height: 6px; width: 6px; left: 1054.23px; top: 15172.6px=
;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"=
6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"ht=
tp://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.=
1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=
=3D"none"></circle></svg></div><div class=3D"_jsPlumb_endpoint " style=3D"p=
osition: absolute; height: 6px; width: 6px; left: 1054.23px; top: 15172.6px=
;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6" height=3D"=
6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" xmlns=3D"ht=
tp://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.=
1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"none" stroke=
=3D"none"></circle></svg></div></td><td class=3D"toplevelHeapObject" id=3D"=
toplevel_heap_object_6"><div class=3D"heapObject" id=3D"v6__heap_object_6_s=
12"><div class=3D"typeLabel">list</div><table class=3D"listTbl"><tbody><tr>=
<td class=3D"listHeader">0</td><td class=3D"listHeader">1</td></tr><tr><td =
class=3D"listElt"><span class=3D"numberObj">3</span></td><td class=3D"listE=
lt"><div id=3D"v6__heap_pointer_src_3">&nbsp;</div><div class=3D"_jsPlumb_e=
ndpoint " style=3D"position: absolute; height: 6px; width: 6px; left: 1175.=
54px; top: 15185.4px;"><svg style=3D"position:absolute;left:0px;top:0px" wi=
dth=3D"6" height=3D"6" pointer-events=3D"all" position=3D"absolute" version=
=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=
=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fi=
ll=3D"#005583" stroke=3D"none"></circle></svg></div><svg style=3D"position:=
absolute;left:1166.082373046875px;top:15169.91865234375px" width=3D"52.6062=
49999999996" height=3D"24.1841796875" pointer-events=3D"none" position=3D"a=
bsolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" class=3D"_j=
sPlumb_connector "><path d=3D"M 12.459375 18.45634765625 C 26.3031249999999=
98 12.09208984375 26.303124999999998 12.09208984375 40.146874999999994 5.72=
783203125" pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w3.or=
g/1999/xhtml" style=3D"" fill=3D"none" stroke=3D"#005583" stroke-width=3D"1=
"></path><path pointer-events=3D"all" version=3D"1.1" xmlns=3D"http://www.w=
3.org/1999/xhtml" d=3D"M40.146874999999994,5.72783203125 L32.53897754512735=
,13.101426562829724 L35.15466070377813,8.036034019941194 L29.60126592315674=
5,6.747699276729163 L40.146874999999994,5.72783203125" class=3D"" stroke=3D=
"#005583" fill=3D"#005583"></path></svg></td></tr></tbody></table></div><di=
v class=3D"_jsPlumb_endpoint " style=3D"position: absolute; height: 6px; wi=
dth: 6px; left: 1128.73px; top: 15172.6px;"><svg style=3D"position:absolute=
;left:0px;top:0px" width=3D"6" height=3D"6" pointer-events=3D"all" position=
=3D"absolute" version=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml"><circl=
e cx=3D"3" cy=3D"3" r=3D"3" version=3D"1.1" xmlns=3D"http://www.w3.org/1999=
/xhtml" style=3D"" fill=3D"none" stroke=3D"none"></circle></svg></div></td>=
<td class=3D"toplevelHeapObject" id=3D"toplevel_heap_object_7"><div class=
=3D"heapObject" id=3D"v6__heap_object_7_s12"><div class=3D"typeLabel">list<=
/div><table class=3D"listTbl"><tbody><tr><td class=3D"listHeader">0</td><td=
 class=3D"listHeader">1</td></tr><tr><td class=3D"listElt"><span class=3D"n=
umberObj">4</span></td><td class=3D"listElt"><span class=3D"stringObj">"emp=
ty"</span></td></tr></tbody></table></div><div class=3D"_jsPlumb_endpoint "=
 style=3D"position: absolute; height: 6px; width: 6px; left: 1203.23px; top=
: 15172.6px;"><svg style=3D"position:absolute;left:0px;top:0px" width=3D"6"=
 height=3D"6" pointer-events=3D"all" position=3D"absolute" version=3D"1.1" =
xmlns=3D"http://www.w3.org/1999/xhtml"><circle cx=3D"3" cy=3D"3" r=3D"3" ve=
rsion=3D"1.1" xmlns=3D"http://www.w3.org/1999/xhtml" style=3D"" fill=3D"non=
e" stroke=3D"none"></circle></svg></div></td></table></div>           </td>=
         </tr>       </tbody></table>     </div></td></tr></tbody></table><=
/div></div>
<p>This final environment diagram shows the local frame for the call to <tt=
 class=3D"docutils literal">first</tt>,
which contains the name <tt class=3D"docutils literal">s</tt> bound to that=
 same sub-list.  The <tt class=3D"docutils literal">first</tt>
function selects the value 2 and returns it, which will also be returned
from <tt class=3D"docutils literal">getitem_link</tt>.</p>
<p>This example demonstrates a common pattern of computation with linked li=
sts,
where each step in an iteration operates on an increasingly shorter suffix =
of
the original list. This incremental processing to find the length and eleme=
nts
of a linked list does take some time to compute. Python's built-in sequence
types are implemented in a different way that does not have a large cost fo=
r
computing the length of a sequence or retrieving its elements. The details =
of
that representation are beyond the scope of this text.</p>
<p><strong>Recursive manipulation.</strong> Both <tt class=3D"docutils lite=
ral">len_link</tt> and <tt class=3D"docutils literal">getitem_link</tt> are
iterative. They peel away each layer of nested pair until the end of the li=
st
(in <tt class=3D"docutils literal">len_link</tt>) or the desired element (i=
n <tt class=3D"docutils literal">getitem_link</tt>) is reached. We
can also implement length and element selection using recursion.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">len_link_recursive</=
span><span class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">=
):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn the length of a linked list s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">s</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"n">empty</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"mi">0</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"mi">1</span> <span class=3D"o">+</span> <span class=3D=
"n">len_link_recursive</span><span class=3D"p">(</span><span class=3D"n">re=
st</span><span class=3D"p">(</span><span class=3D"n">s</span><span class=3D=
"p">))</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">getitem_link_recursi=
ve</span><span class=3D"p">(</span><span class=3D"n">s</span><span class=3D=
"p">,</span> <span class=3D"n">i</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn the element at index i of linked list s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">i</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"mi">0</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">first</span><span class=3D"p">(</span><span cla=
ss=3D"n">s</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">return</=
span> <span class=3D"n">getitem_link_recursive</span><span class=3D"p">(</s=
pan><span class=3D"n">rest</span><span class=3D"p">(</span><span class=3D"n=
">s</span><span class=3D"p">),</span> <span class=3D"n">i</span> <span clas=
s=3D"o">-</span> <span class=3D"mi">1</span><span class=3D"p">)</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">len_link_recursive</span><span class=3D"p">(</span=
><span class=3D"n">four</span><span class=3D"p">)</span>
<span class=3D"go">4</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">getitem_link_recur=
sive</span><span class=3D"p">(</span><span class=3D"n">four</span><span cla=
ss=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"p">)</span>
<span class=3D"go">2</span>
</pre></div>

<p>These recursive implementations follow the chain of pairs until the end =
of the
list (in <tt class=3D"docutils literal">len_link_recursive</tt>) or the des=
ired element (in
<tt class=3D"docutils literal">getitem_link_recursive</tt>) is reached.</p>
<p>Recursion is also useful for transforming and combining linked lists.</p=
>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">extend_link</span><s=
pan class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">,</span=
> <span class=3D"n">t</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn a list with the elements of s followed by those of t."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">is_link</span><span class=3D"p">(</span><span class=
=3D"n">s</span><span class=3D"p">)</span> <span class=3D"ow">and</span> <sp=
an class=3D"n">is_link</span><span class=3D"p">(</span><span class=3D"n">t<=
/span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">s</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"n">empty</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">t</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">link</span><span class=3D"p">(</span><span clas=
s=3D"n">first</span><span class=3D"p">(</span><span class=3D"n">s</span><sp=
an class=3D"p">),</span> <span class=3D"n">extend_link</span><span class=3D=
"p">(</span><span class=3D"n">rest</span><span class=3D"p">(</span><span cl=
ass=3D"n">s</span><span class=3D"p">),</span> <span class=3D"n">t</span><sp=
an class=3D"p">))</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">extend_link</span><span class=3D"p">(</span><span =
class=3D"n">four</span><span class=3D"p">,</span> <span class=3D"n">four</s=
pan><span class=3D"p">)</span>
<span class=3D"go">[1, [2, [3, [4, [1, [2, [3, [4, 'empty']]]]]]]]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">apply_to_all_link</s=
pan><span class=3D"p">(</span><span class=3D"n">f</span><span class=3D"p">,=
</span> <span class=3D"n">s</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Appl=
y f to each element of s."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">is_link</span><span class=3D"p">(</span><span class=
=3D"n">s</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">s</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"n">empty</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">s</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">link</span><span class=3D"p">(</span><span clas=
s=3D"n">f</span><span class=3D"p">(</span><span class=3D"n">first</span><sp=
an class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">)),</spa=
n> <span class=3D"n">apply_to_all_link</span><span class=3D"p">(</span><spa=
n class=3D"n">f</span><span class=3D"p">,</span> <span class=3D"n">rest</sp=
an><span class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">))=
)</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">apply_to_all_link</span><span class=3D"p">(</span>=
<span class=3D"k">lambda</span> <span class=3D"n">x</span><span class=3D"p"=
>:</span> <span class=3D"n">x</span><span class=3D"o">*</span><span class=
=3D"n">x</span><span class=3D"p">,</span> <span class=3D"n">four</span><spa=
n class=3D"p">)</span>
<span class=3D"go">[1, [4, [9, [16, 'empty']]]]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">keep_if_link</span><=
span class=3D"p">(</span><span class=3D"n">f</span><span class=3D"p">,</spa=
n> <span class=3D"n">s</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn a list with elements of s for which f(e) is true."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">assert</=
span> <span class=3D"n">is_link</span><span class=3D"p">(</span><span class=
=3D"n">s</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">s</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"n">empty</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">s</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">kept=
</span> <span class=3D"o">=3D</span> <span class=3D"n">keep_if_link</span><=
span class=3D"p">(</span><span class=3D"n">f</span><span class=3D"p">,</spa=
n> <span class=3D"n">rest</span><span class=3D"p">(</span><span class=3D"n"=
>s</span><span class=3D"p">))</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">if</=
span> <span class=3D"n">f</span><span class=3D"p">(</span><span class=3D"n"=
>first</span><span class=3D"p">(</span><span class=3D"n">s</span><span clas=
s=3D"p">)):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>            <span class=3D"k">=
return</span> <span class=3D"n">link</span><span class=3D"p">(</span><span =
class=3D"n">first</span><span class=3D"p">(</span><span class=3D"n">s</span=
><span class=3D"p">),</span> <span class=3D"n">kept</span><span class=3D"p"=
>)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">else=
</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>            <span class=3D"k">=
return</span> <span class=3D"n">kept</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">keep_if_link</span><span class=3D"p">(</span><span=
 class=3D"k">lambda</span> <span class=3D"n">x</span><span class=3D"p">:</s=
pan> <span class=3D"n">x</span><span class=3D"o">%</span><span class=3D"mi"=
>2</span> <span class=3D"o">=3D=3D</span> <span class=3D"mi">0</span><span =
class=3D"p">,</span> <span class=3D"n">four</span><span class=3D"p">)</span=
>
<span class=3D"go">[2, [4, 'empty']]</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">join_link</span><spa=
n class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">,</span> =
<span class=3D"n">separator</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn a string of all elements in s separated by separator."""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">s</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"n">empty</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"s2">""</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">elif</sp=
an> <span class=3D"n">rest</span><span class=3D"p">(</span><span class=3D"n=
">s</span><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span =
class=3D"n">empty</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"nb">str</span><span class=3D"p">(</span><span clas=
s=3D"n">first</span><span class=3D"p">(</span><span class=3D"n">s</span><sp=
an class=3D"p">))</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"nb">str</span><span class=3D"p">(</span><span clas=
s=3D"n">first</span><span class=3D"p">(</span><span class=3D"n">s</span><sp=
an class=3D"p">))</span> <span class=3D"o">+</span> <span class=3D"n">separ=
ator</span> <span class=3D"o">+</span> <span class=3D"n">join_link</span><s=
pan class=3D"p">(</span><span class=3D"n">rest</span><span class=3D"p">(</s=
pan><span class=3D"n">s</span><span class=3D"p">),</span> <span class=3D"n"=
>separator</span><span class=3D"p">)</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">join_link</span><span class=3D"p">(</span><span cl=
ass=3D"n">four</span><span class=3D"p">,</span> <span class=3D"s2">", "</sp=
an><span class=3D"p">)</span>
<span class=3D"go">'1, 2, 3, 4'</span>
</pre></div>

<p><strong>Recursive Construction.</strong> Linked lists are particularly u=
seful when
constructing sequences incrementally, a situation that arises often in
recursive computations.</p>
<p>The <tt class=3D"docutils literal">count_partitions</tt> function from C=
hapter 1 counted the number of ways
to partition an integer <tt class=3D"docutils literal">n</tt> using parts u=
p to size <tt class=3D"docutils literal">m</tt> via a tree-recursive
process. With sequences, we can also enumerate these partitions explicitly
using a similar process.</p>
<p>We follow the same recursive analysis of the problem as we did while cou=
nting:
partitioning <tt class=3D"docutils literal">n</tt> using integers up to <tt=
 class=3D"docutils literal">m</tt> involves either</p>
<ol class=3D"arabic simple">
<li>partitioning <tt class=3D"docutils literal"><span class=3D"pre">n-m</sp=
an></tt> using integers up to <tt class=3D"docutils literal">m</tt>, or</li=
>
<li>partitioning <tt class=3D"docutils literal">n</tt> using integers up to=
 <tt class=3D"docutils literal"><span class=3D"pre">m-1</span></tt>.</li>
</ol>
<p>For base cases, we find that 0 has an empty partition, while partitionin=
g a
negative integer or using parts smaller than 1 is impossible.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">partitions</span><sp=
an class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">,</span>=
 <span class=3D"n">m</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"sd">"""Retu=
rn a linked list of partitions of n using parts of up to m.</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span><span class=3D"sd">    Each pa=
rtition is represented as a linked list.</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span><span class=3D"sd">    """</sp=
an>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">if</span=
> <span class=3D"n">n</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"mi">0</span><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">link</span><span class=3D"p">(</span><span clas=
s=3D"n">empty</span><span class=3D"p">,</span> <span class=3D"n">empty</spa=
n><span class=3D"p">)</span> <span class=3D"c1"># A list containing the emp=
ty partition</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">elif</sp=
an> <span class=3D"n">n</span> <span class=3D"o">&lt;</span> <span class=3D=
"mi">0</span> <span class=3D"ow">or</span> <span class=3D"n">m</span> <span=
 class=3D"o">=3D=3D</span> <span class=3D"mi">0</span><span class=3D"p">:</=
span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">empty</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"k">else</sp=
an><span class=3D"p">:</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">usin=
g_m</span> <span class=3D"o">=3D</span> <span class=3D"n">partitions</span>=
<span class=3D"p">(</span><span class=3D"n">n</span><span class=3D"o">-</sp=
an><span class=3D"n">m</span><span class=3D"p">,</span> <span class=3D"n">m=
</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">with=
_m</span> <span class=3D"o">=3D</span> <span class=3D"n">apply_to_all_link<=
/span><span class=3D"p">(</span><span class=3D"k">lambda</span> <span class=
=3D"n">s</span><span class=3D"p">:</span> <span class=3D"n">link</span><spa=
n class=3D"p">(</span><span class=3D"n">m</span><span class=3D"p">,</span> =
<span class=3D"n">s</span><span class=3D"p">),</span> <span class=3D"n">usi=
ng_m</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"n">with=
out_m</span> <span class=3D"o">=3D</span> <span class=3D"n">partitions</spa=
n><span class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">,</=
span> <span class=3D"n">m</span><span class=3D"o">-</span><span class=3D"mi=
">1</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>        <span class=3D"k">retu=
rn</span> <span class=3D"n">extend_link</span><span class=3D"p">(</span><sp=
an class=3D"n">with_m</span><span class=3D"p">,</span> <span class=3D"n">wi=
thout_m</span><span class=3D"p">)</span>
</pre></div>

<p>In the recursive case, we construct two sublists of partitions. The firs=
t uses
<tt class=3D"docutils literal">m</tt>, and so we prepend <tt class=3D"docut=
ils literal">m</tt> to each element of the result <tt class=3D"docutils lit=
eral">using_m</tt> to
form <tt class=3D"docutils literal">with_m</tt>.</p>
<p>The result of <tt class=3D"docutils literal">partitions</tt> is highly n=
ested: a linked list of linked lists,
and each linked list is represented as nested pairs that are <tt class=3D"d=
ocutils literal">list</tt> values.
Using <tt class=3D"docutils literal">join_link</tt> with appropriate separa=
tors, we can display the partitions
in a human-readable manner.</p>
<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"k">def</span> <span class=3D"nf">print_partitions</sp=
an><span class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">,<=
/span> <span class=3D"n">m</span><span class=3D"p">):</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">lists</s=
pan> <span class=3D"o">=3D</span> <span class=3D"n">partitions</span><span =
class=3D"p">(</span><span class=3D"n">n</span><span class=3D"p">,</span> <s=
pan class=3D"n">m</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"n">strings<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">apply_to_all_link</sp=
an><span class=3D"p">(</span><span class=3D"k">lambda</span> <span class=3D=
"n">s</span><span class=3D"p">:</span> <span class=3D"n">join_link</span><s=
pan class=3D"p">(</span><span class=3D"n">s</span><span class=3D"p">,</span=
> <span class=3D"s2">" + "</span><span class=3D"p">),</span> <span class=3D=
"n">lists</span><span class=3D"p">)</span>
<span class=3D"gp">&nbsp;&nbsp;&nbsp; </span>    <span class=3D"nb">print</=
span><span class=3D"p">(</span><span class=3D"n">join_link</span><span clas=
s=3D"p">(</span><span class=3D"n">strings</span><span class=3D"p">,</span> =
<span class=3D"s2">"</span><span class=3D"se">\n</span><span class=3D"s2">"=
</span><span class=3D"p">))</span>
</pre></div>

<div class=3D"highlight"><pre><span></span><span class=3D"gp">&gt;&gt;&gt; =
</span><span class=3D"n">print_partitions</span><span class=3D"p">(</span><=
span class=3D"mi">6</span><span class=3D"p">,</span> <span class=3D"mi">4</=
span><span class=3D"p">)</span>
<span class=3D"go">4 + 2</span>
<span class=3D"go">4 + 1 + 1</span>
<span class=3D"go">3 + 3</span>
<span class=3D"go">3 + 2 + 1</span>
<span class=3D"go">3 + 1 + 1 + 1</span>
<span class=3D"go">2 + 2 + 2</span>
<span class=3D"go">2 + 2 + 1 + 1</span>
<span class=3D"go">2 + 1 + 1 + 1 + 1</span>
<span class=3D"go">1 + 1 + 1 + 1 + 1 + 1</span>
</pre></div>

</div>
</div>
  <p><i>Continue</i>:
  	<a href=3D"https://www.composingprograms.com/pages/24-mutable-data.html"=
>
  		2.4 Mutable Data
  	</a>
      </p></div>
    </section>

    <div class=3D"wrap">
      <footer id=3D"contentinfo" class=3D"body">
          Composing Programs by <a href=3D"http://www.denero.org/">John
          DeNero</a>, based on the textbook <a href=3D"http://mitpress.mit.=
edu/sicp/">Structure and
          Interpretation of Computer Programs</a> by Harold Abelson and
          Gerald Jay Sussman, is licensed under a <a rel=3D"license" href=
=3D"http://creativecommons.org/licenses/by-sa/3.0/">Creative
          Commons Attribution-ShareAlike 3.0 Unported License</a>.
      </footer><!-- /#contentinfo -->
    </div>
  </div>

</body></html>
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.composingprograms.com/theme/coding-js/coding.css

@charset "utf-8";

.output_displayed_text { color: blue; }

.output_error { color: red; }

.p-link { text-decoration: underline; text-align: right; }

.p-link:hover { cursor: pointer; }

.output { font-family: monospace; font-style: italic; padding: 0pt 4pt; col=
or: rgb(68, 68, 68); }

.CodeMirror-scroll { height: auto; width: auto; overflow: auto hidden; }

.CodeMirror-scroll:hover:not(.static):not(.CodeMirror-focused) { background=
: rgba(0, 0, 0, 0.05); }

.CodeMirror-scroll:hover.static:not(.CodeMirror-focused) { background-color=
: rgba(0, 0, 0, 0.01); }

.CodeMirror-focused:not(:hover) { background: rgba(0, 0, 0, 0.07); }

.CodeMirror-focused:hover { background: rgba(0, 0, 0, 0.075); }

.CodeMirror-matchingbracket { background: rgba(0, 0, 0, 0.1); }

div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(95, 95, 95); }

.CodeMirror { line-height: 1.3em; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.composingprograms.com/theme/tutor/css/codemirror.css

@charset "utf-8";

.CodeMirror { line-height: 1.2em; font-family: monospace; position: relativ=
e; overflow: hidden; }

.CodeMirror-scroll { overflow: auto; height: 300px; position: relative; out=
line: none; }

.CodeMirror-scrollbar { position: absolute; right: 0px; top: 0px; overflow:=
 hidden scroll; z-index: 5; }

.CodeMirror-scrollbar-inner { width: 1px; }

.CodeMirror-scrollbar.cm-sb-overlap { position: absolute; z-index: 1; float=
: none; right: 0px; min-width: 12px; }

.CodeMirror-scrollbar.cm-sb-nonoverlap { min-width: 12px; }

.CodeMirror-scrollbar.cm-sb-ie7 { min-width: 18px; }

.CodeMirror-gutter { position: absolute; left: 0px; top: 0px; z-index: 10; =
background-color: rgb(247, 247, 247); border-right: 1px solid rgb(238, 238,=
 238); min-width: 2em; height: 100%; }

.CodeMirror-gutter-text { color: rgb(170, 170, 170); text-align: right; pad=
ding: 0.4em 0.2em 0.4em 0.4em; cursor: default; white-space: pre !important=
; }

.CodeMirror-lines { padding: 0.4em; white-space: pre; cursor: text; }

.CodeMirror pre { border-radius: 0px; border-width: 0px; background: transp=
arent; font-family: inherit; font-size: inherit; padding: 0px; margin: 0px;=
 white-space: pre; overflow-wrap: normal; line-height: inherit; color: inhe=
rit; }

.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; wo=
rd-break: normal; }

.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }

.CodeMirror textarea { outline: none !important; }

.CodeMirror pre.CodeMirror-cursor { z-index: 10; position: absolute; visibi=
lity: hidden; border-left: 1px solid black; border-right: none; width: 0px;=
 }

.cm-keymap-fat-cursor pre.CodeMirror-cursor { width: auto; border: 0px; bac=
kground: rgba(0, 200, 0, 0.4); }

.cm-keymap-fat-cursor pre.CodeMirror-cursor:not(#nonsense_id) { }

.CodeMirror pre.CodeMirror-cursor.CodeMirror-overwrite { }

.CodeMirror-focused pre.CodeMirror-cursor { visibility: visible; }

div.CodeMirror-selected { background: rgb(217, 217, 217); }

.CodeMirror-focused div.CodeMirror-selected { background: rgb(215, 212, 240=
); }

.CodeMirror-searching { background: rgba(255, 255, 0, 0.4); }

.cm-s-default span.cm-keyword { color: rgb(119, 0, 136); }

.cm-s-default span.cm-atom { color: rgb(34, 17, 153); }

.cm-s-default span.cm-number { color: rgb(17, 102, 68); }

.cm-s-default span.cm-def { color: rgb(0, 0, 255); }

.cm-s-default span.cm-variable { color: black; }

.cm-s-default span.cm-variable-2 { color: rgb(0, 85, 170); }

.cm-s-default span.cm-variable-3 { color: rgb(0, 136, 85); }

.cm-s-default span.cm-property { color: black; }

.cm-s-default span.cm-operator { color: black; }

.cm-s-default span.cm-comment { color: rgb(170, 85, 0); }

.cm-s-default span.cm-string { color: rgb(170, 17, 17); }

.cm-s-default span.cm-string-2 { color: rgb(255, 85, 0); }

.cm-s-default span.cm-meta { color: rgb(85, 85, 85); }

.cm-s-default span.cm-error { color: rgb(255, 0, 0); }

.cm-s-default span.cm-qualifier { color: rgb(85, 85, 85); }

.cm-s-default span.cm-builtin { color: rgb(51, 0, 170); }

.cm-s-default span.cm-bracket { color: rgb(204, 204, 119); }

.cm-s-default span.cm-tag { color: rgb(17, 119, 0); }

.cm-s-default span.cm-attribute { color: rgb(0, 0, 204); }

.cm-s-default span.cm-header { color: blue; }

.cm-s-default span.cm-quote { color: rgb(0, 153, 0); }

.cm-s-default span.cm-hr { color: rgb(153, 153, 153); }

.cm-s-default span.cm-link { color: rgb(0, 0, 204); }

span.cm-header, span.cm-strong { font-weight: bold; }

span.cm-em { font-style: italic; }

span.cm-emstrong { font-style: italic; font-weight: bold; }

span.cm-link { text-decoration: underline; }

span.cm-invalidchar { color: rgb(255, 0, 0); }

div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }

div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34)=
; }

@media print {
  .CodeMirror pre.CodeMirror-cursor { visibility: hidden; }
}
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.composingprograms.com/theme/tutor/css/ui-lightness/images/ui-bg_glass_100_f6f6f6_1x400.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAAGQCAYAAABvWArbAAAAL0lEQVQ4je3HsQ0AIBDDwIT9F/4i
gpYiAyDk5mRrZvaSJAD4liT32u7bqi0APMcBiYQKDwcroFAAAAAASUVORK5CYII=

------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.composingprograms.com/theme/tutor/css/ui-lightness/images/ui-bg_highlight-soft_100_eeeeee_1x100.png

iVBORw0KGgoAAAANSUhEUgAAAAEAAABkCAYAAABHLFpgAAAAIUlEQVQYlWP48ePHfyYGBgaGIUT8
//8fO5cSFn6J4UQAAJSgIpAFCJPdAAAAAElFTkSuQmCC

------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.composingprograms.com/theme/tutor/css/ui-lightness/jquery-ui-1.8.21.custom.css

@charset "utf-8";

.ui-helper-hidden { display: none; }

.ui-helper-hidden-accessible { clip: rect(1px, 1px, 1px, 1px); position: ab=
solute !important; }

.ui-helper-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; li=
ne-height: 1.3; text-decoration: none; font-size: 100%; list-style: none; }

.ui-helper-clearfix::before, .ui-helper-clearfix::after { content: ""; disp=
lay: table; }

.ui-helper-clearfix::after { clear: both; }

.ui-helper-clearfix { zoom: 1; }

.ui-helper-zfix { width: 100%; height: 100%; top: 0px; left: 0px; position:=
 absolute; opacity: 0; }

.ui-state-disabled { cursor: default !important; }

.ui-icon { display: block; text-indent: -99999px; overflow: hidden; backgro=
und-repeat: no-repeat; }

.ui-widget-overlay { position: absolute; top: 0px; left: 0px; width: 100%; =
height: 100%; }

.ui-widget { font-family: "Trebuchet MS", Tahoma, Verdana, Arial, sans-seri=
f; font-size: 1.1em; }

.ui-widget .ui-widget { font-size: 1em; }

.ui-widget input, .ui-widget select, .ui-widget textarea, .ui-widget button=
 { font-family: "Trebuchet MS", Tahoma, Verdana, Arial, sans-serif; font-si=
ze: 1em; }

.ui-widget-content { border: 1px solid rgb(204, 204, 204); background: url(=
"images/ui-bg_highlight-soft_100_eeeeee_1x100.png") 50% top repeat-x rgb(23=
8, 238, 238); color: rgb(51, 51, 51); }

.ui-widget-content a { color: rgb(51, 51, 51); }

.ui-widget-header { border: 1px solid rgb(231, 143, 8); background: url("im=
ages/ui-bg_gloss-wave_35_f6a828_500x100.png") 50% 50% repeat-x rgb(246, 168=
, 40); color: rgb(255, 255, 255); font-weight: bold; }

.ui-widget-header a { color: rgb(255, 255, 255); }

.ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header =
.ui-state-default { border: 1px solid rgb(204, 204, 204); background: url("=
images/ui-bg_glass_100_f6f6f6_1x400.png") 50% 50% repeat-x rgb(246, 246, 24=
6); font-weight: bold; color: rgb(28, 148, 196); }

.ui-state-default a, .ui-state-default a:link, .ui-state-default a:visited =
{ color: rgb(28, 148, 196); text-decoration: none; }

.ui-state-active, .ui-widget-content .ui-state-active, .ui-widget-header .u=
i-state-active { border: 1px solid rgb(251, 216, 80); background: url("imag=
es/ui-bg_glass_65_ffffff_1x400.png") 50% 50% repeat-x rgb(255, 255, 255); f=
ont-weight: bold; color: rgb(235, 143, 0); }

.ui-state-active a, .ui-state-active a:link, .ui-state-active a:visited { c=
olor: rgb(235, 143, 0); text-decoration: none; }

.ui-widget :active { outline: none; }

.ui-state-highlight, .ui-widget-content .ui-state-highlight, .ui-widget-hea=
der .ui-state-highlight { border: 1px solid rgb(254, 210, 47); background: =
url("images/ui-bg_highlight-soft_75_ffe45c_1x100.png") 50% top repeat-x rgb=
(255, 228, 92); color: rgb(54, 54, 54); }

.ui-state-highlight a, .ui-widget-content .ui-state-highlight a, .ui-widget=
-header .ui-state-highlight a { color: rgb(54, 54, 54); }

.ui-state-error, .ui-widget-content .ui-state-error, .ui-widget-header .ui-=
state-error { border: 1px solid rgb(205, 10, 10); background: url("images/u=
i-bg_diagonals-thick_18_b81900_40x40.png") 50% 50% repeat rgb(184, 25, 0); =
color: rgb(255, 255, 255); }

.ui-state-error a, .ui-widget-content .ui-state-error a, .ui-widget-header =
.ui-state-error a { color: rgb(255, 255, 255); }

.ui-state-error-text, .ui-widget-content .ui-state-error-text, .ui-widget-h=
eader .ui-state-error-text { color: rgb(255, 255, 255); }

.ui-priority-primary, .ui-widget-content .ui-priority-primary, .ui-widget-h=
eader .ui-priority-primary { font-weight: bold; }

.ui-priority-secondary, .ui-widget-content .ui-priority-secondary, .ui-widg=
et-header .ui-priority-secondary { opacity: 0.7; font-weight: normal; }

.ui-state-disabled, .ui-widget-content .ui-state-disabled, .ui-widget-heade=
r .ui-state-disabled { opacity: 0.35; background-image: none; }

.ui-icon { width: 16px; height: 16px; background-image: url("images/ui-icon=
s_222222_256x240.png"); }

.ui-widget-content .ui-icon { background-image: url("images/ui-icons_222222=
_256x240.png"); }

.ui-widget-header .ui-icon { background-image: url("images/ui-icons_ffffff_=
256x240.png"); }

.ui-state-default .ui-icon { background-image: url("images/ui-icons_ef8c08_=
256x240.png"); }

.ui-state-hover .ui-icon, .ui-state-focus .ui-icon { background-image: url(=
"images/ui-icons_ef8c08_256x240.png"); }

.ui-state-active .ui-icon { background-image: url("images/ui-icons_ef8c08_2=
56x240.png"); }

.ui-state-highlight .ui-icon { background-image: url("images/ui-icons_228ef=
1_256x240.png"); }

.ui-state-error .ui-icon, .ui-state-error-text .ui-icon { background-image:=
 url("images/ui-icons_ffd27a_256x240.png"); }

.ui-icon-carat-1-n { background-position: 0px 0px; }

.ui-icon-carat-1-ne { background-position: -16px 0px; }

.ui-icon-carat-1-e { background-position: -32px 0px; }

.ui-icon-carat-1-se { background-position: -48px 0px; }

.ui-icon-carat-1-s { background-position: -64px 0px; }

.ui-icon-carat-1-sw { background-position: -80px 0px; }

.ui-icon-carat-1-w { background-position: -96px 0px; }

.ui-icon-carat-1-nw { background-position: -112px 0px; }

.ui-icon-carat-2-n-s { background-position: -128px 0px; }

.ui-icon-carat-2-e-w { background-position: -144px 0px; }

.ui-icon-triangle-1-n { background-position: 0px -16px; }

.ui-icon-triangle-1-ne { background-position: -16px -16px; }

.ui-icon-triangle-1-e { background-position: -32px -16px; }

.ui-icon-triangle-1-se { background-position: -48px -16px; }

.ui-icon-triangle-1-s { background-position: -64px -16px; }

.ui-icon-triangle-1-sw { background-position: -80px -16px; }

.ui-icon-triangle-1-w { background-position: -96px -16px; }

.ui-icon-triangle-1-nw { background-position: -112px -16px; }

.ui-icon-triangle-2-n-s { background-position: -128px -16px; }

.ui-icon-triangle-2-e-w { background-position: -144px -16px; }

.ui-icon-arrow-1-n { background-position: 0px -32px; }

.ui-icon-arrow-1-ne { background-position: -16px -32px; }

.ui-icon-arrow-1-e { background-position: -32px -32px; }

.ui-icon-arrow-1-se { background-position: -48px -32px; }

.ui-icon-arrow-1-s { background-position: -64px -32px; }

.ui-icon-arrow-1-sw { background-position: -80px -32px; }

.ui-icon-arrow-1-w { background-position: -96px -32px; }

.ui-icon-arrow-1-nw { background-position: -112px -32px; }

.ui-icon-arrow-2-n-s { background-position: -128px -32px; }

.ui-icon-arrow-2-ne-sw { background-position: -144px -32px; }

.ui-icon-arrow-2-e-w { background-position: -160px -32px; }

.ui-icon-arrow-2-se-nw { background-position: -176px -32px; }

.ui-icon-arrowstop-1-n { background-position: -192px -32px; }

.ui-icon-arrowstop-1-e { background-position: -208px -32px; }

.ui-icon-arrowstop-1-s { background-position: -224px -32px; }

.ui-icon-arrowstop-1-w { background-position: -240px -32px; }

.ui-icon-arrowthick-1-n { background-position: 0px -48px; }

.ui-icon-arrowthick-1-ne { background-position: -16px -48px; }

.ui-icon-arrowthick-1-e { background-position: -32px -48px; }

.ui-icon-arrowthick-1-se { background-position: -48px -48px; }

.ui-icon-arrowthick-1-s { background-position: -64px -48px; }

.ui-icon-arrowthick-1-sw { background-position: -80px -48px; }

.ui-icon-arrowthick-1-w { background-position: -96px -48px; }

.ui-icon-arrowthick-1-nw { background-position: -112px -48px; }

.ui-icon-arrowthick-2-n-s { background-position: -128px -48px; }

.ui-icon-arrowthick-2-ne-sw { background-position: -144px -48px; }

.ui-icon-arrowthick-2-e-w { background-position: -160px -48px; }

.ui-icon-arrowthick-2-se-nw { background-position: -176px -48px; }

.ui-icon-arrowthickstop-1-n { background-position: -192px -48px; }

.ui-icon-arrowthickstop-1-e { background-position: -208px -48px; }

.ui-icon-arrowthickstop-1-s { background-position: -224px -48px; }

.ui-icon-arrowthickstop-1-w { background-position: -240px -48px; }

.ui-icon-arrowreturnthick-1-w { background-position: 0px -64px; }

.ui-icon-arrowreturnthick-1-n { background-position: -16px -64px; }

.ui-icon-arrowreturnthick-1-e { background-position: -32px -64px; }

.ui-icon-arrowreturnthick-1-s { background-position: -48px -64px; }

.ui-icon-arrowreturn-1-w { background-position: -64px -64px; }

.ui-icon-arrowreturn-1-n { background-position: -80px -64px; }

.ui-icon-arrowreturn-1-e { background-position: -96px -64px; }

.ui-icon-arrowreturn-1-s { background-position: -112px -64px; }

.ui-icon-arrowrefresh-1-w { background-position: -128px -64px; }

.ui-icon-arrowrefresh-1-n { background-position: -144px -64px; }

.ui-icon-arrowrefresh-1-e { background-position: -160px -64px; }

.ui-icon-arrowrefresh-1-s { background-position: -176px -64px; }

.ui-icon-arrow-4 { background-position: 0px -80px; }

.ui-icon-arrow-4-diag { background-position: -16px -80px; }

.ui-icon-extlink { background-position: -32px -80px; }

.ui-icon-newwin { background-position: -48px -80px; }

.ui-icon-refresh { background-position: -64px -80px; }

.ui-icon-shuffle { background-position: -80px -80px; }

.ui-icon-transfer-e-w { background-position: -96px -80px; }

.ui-icon-transferthick-e-w { background-position: -112px -80px; }

.ui-icon-folder-collapsed { background-position: 0px -96px; }

.ui-icon-folder-open { background-position: -16px -96px; }

.ui-icon-document { background-position: -32px -96px; }

.ui-icon-document-b { background-position: -48px -96px; }

.ui-icon-note { background-position: -64px -96px; }

.ui-icon-mail-closed { background-position: -80px -96px; }

.ui-icon-mail-open { background-position: -96px -96px; }

.ui-icon-suitcase { background-position: -112px -96px; }

.ui-icon-comment { background-position: -128px -96px; }

.ui-icon-person { background-position: -144px -96px; }

.ui-icon-print { background-position: -160px -96px; }

.ui-icon-trash { background-position: -176px -96px; }

.ui-icon-locked { background-position: -192px -96px; }

.ui-icon-unlocked { background-position: -208px -96px; }

.ui-icon-bookmark { background-position: -224px -96px; }

.ui-icon-tag { background-position: -240px -96px; }

.ui-icon-home { background-position: 0px -112px; }

.ui-icon-flag { background-position: -16px -112px; }

.ui-icon-calendar { background-position: -32px -112px; }

.ui-icon-cart { background-position: -48px -112px; }

.ui-icon-pencil { background-position: -64px -112px; }

.ui-icon-clock { background-position: -80px -112px; }

.ui-icon-disk { background-position: -96px -112px; }

.ui-icon-calculator { background-position: -112px -112px; }

.ui-icon-zoomin { background-position: -128px -112px; }

.ui-icon-zoomout { background-position: -144px -112px; }

.ui-icon-search { background-position: -160px -112px; }

.ui-icon-wrench { background-position: -176px -112px; }

.ui-icon-gear { background-position: -192px -112px; }

.ui-icon-heart { background-position: -208px -112px; }

.ui-icon-star { background-position: -224px -112px; }

.ui-icon-link { background-position: -240px -112px; }

.ui-icon-cancel { background-position: 0px -128px; }

.ui-icon-plus { background-position: -16px -128px; }

.ui-icon-plusthick { background-position: -32px -128px; }

.ui-icon-minus { background-position: -48px -128px; }

.ui-icon-minusthick { background-position: -64px -128px; }

.ui-icon-close { background-position: -80px -128px; }

.ui-icon-closethick { background-position: -96px -128px; }

.ui-icon-key { background-position: -112px -128px; }

.ui-icon-lightbulb { background-position: -128px -128px; }

.ui-icon-scissors { background-position: -144px -128px; }

.ui-icon-clipboard { background-position: -160px -128px; }

.ui-icon-copy { background-position: -176px -128px; }

.ui-icon-contact { background-position: -192px -128px; }

.ui-icon-image { background-position: -208px -128px; }

.ui-icon-video { background-position: -224px -128px; }

.ui-icon-script { background-position: -240px -128px; }

.ui-icon-alert { background-position: 0px -144px; }

.ui-icon-info { background-position: -16px -144px; }

.ui-icon-notice { background-position: -32px -144px; }

.ui-icon-help { background-position: -48px -144px; }

.ui-icon-check { background-position: -64px -144px; }

.ui-icon-bullet { background-position: -80px -144px; }

.ui-icon-radio-off { background-position: -96px -144px; }

.ui-icon-radio-on { background-position: -112px -144px; }

.ui-icon-pin-w { background-position: -128px -144px; }

.ui-icon-pin-s { background-position: -144px -144px; }

.ui-icon-play { background-position: 0px -160px; }

.ui-icon-pause { background-position: -16px -160px; }

.ui-icon-seek-next { background-position: -32px -160px; }

.ui-icon-seek-prev { background-position: -48px -160px; }

.ui-icon-seek-end { background-position: -64px -160px; }

.ui-icon-seek-start { background-position: -80px -160px; }

.ui-icon-seek-first { background-position: -80px -160px; }

.ui-icon-stop { background-position: -96px -160px; }

.ui-icon-eject { background-position: -112px -160px; }

.ui-icon-volume-off { background-position: -128px -160px; }

.ui-icon-volume-on { background-position: -144px -160px; }

.ui-icon-power { background-position: 0px -176px; }

.ui-icon-signal-diag { background-position: -16px -176px; }

.ui-icon-signal { background-position: -32px -176px; }

.ui-icon-battery-0 { background-position: -48px -176px; }

.ui-icon-battery-1 { background-position: -64px -176px; }

.ui-icon-battery-2 { background-position: -80px -176px; }

.ui-icon-battery-3 { background-position: -96px -176px; }

.ui-icon-circle-plus { background-position: 0px -192px; }

.ui-icon-circle-minus { background-position: -16px -192px; }

.ui-icon-circle-close { background-position: -32px -192px; }

.ui-icon-circle-triangle-e { background-position: -48px -192px; }

.ui-icon-circle-triangle-s { background-position: -64px -192px; }

.ui-icon-circle-triangle-w { background-position: -80px -192px; }

.ui-icon-circle-triangle-n { background-position: -96px -192px; }

.ui-icon-circle-arrow-e { background-position: -112px -192px; }

.ui-icon-circle-arrow-s { background-position: -128px -192px; }

.ui-icon-circle-arrow-w { background-position: -144px -192px; }

.ui-icon-circle-arrow-n { background-position: -160px -192px; }

.ui-icon-circle-zoomin { background-position: -176px -192px; }

.ui-icon-circle-zoomout { background-position: -192px -192px; }

.ui-icon-circle-check { background-position: -208px -192px; }

.ui-icon-circlesmall-plus { background-position: 0px -208px; }

.ui-icon-circlesmall-minus { background-position: -16px -208px; }

.ui-icon-circlesmall-close { background-position: -32px -208px; }

.ui-icon-squaresmall-plus { background-position: -48px -208px; }

.ui-icon-squaresmall-minus { background-position: -64px -208px; }

.ui-icon-squaresmall-close { background-position: -80px -208px; }

.ui-icon-grip-dotted-vertical { background-position: 0px -224px; }

.ui-icon-grip-dotted-horizontal { background-position: -16px -224px; }

.ui-icon-grip-solid-vertical { background-position: -32px -224px; }

.ui-icon-grip-solid-horizontal { background-position: -48px -224px; }

.ui-icon-gripsmall-diagonal-se { background-position: -64px -224px; }

.ui-icon-grip-diagonal-se { background-position: -80px -224px; }

.ui-corner-all, .ui-corner-top, .ui-corner-left, .ui-corner-tl { border-top=
-left-radius: 4px; }

.ui-corner-all, .ui-corner-top, .ui-corner-right, .ui-corner-tr { border-to=
p-right-radius: 4px; }

.ui-corner-all, .ui-corner-bottom, .ui-corner-left, .ui-corner-bl { border-=
bottom-left-radius: 4px; }

.ui-corner-all, .ui-corner-bottom, .ui-corner-right, .ui-corner-br { border=
-bottom-right-radius: 4px; }

.ui-widget-overlay { background: url("images/ui-bg_diagonals-thick_20_66666=
6_40x40.png") 50% 50% repeat rgb(102, 102, 102); opacity: 0.5; }

.ui-widget-shadow { margin: -5px 0px 0px -5px; padding: 5px; background: ur=
l("images/ui-bg_flat_10_000000_40x100.png") 50% 50% repeat-x rgb(0, 0, 0); =
opacity: 0.2; border-radius: 5px; }

.ui-slider { position: relative; text-align: left; }

.ui-slider .ui-slider-handle { position: absolute; z-index: 2; width: 1.2em=
; height: 1.2em; cursor: default; }

.ui-slider .ui-slider-range { position: absolute; z-index: 1; font-size: 0.=
7em; display: block; border: 0px; background-position: 0px 0px; }

.ui-slider-horizontal { height: 0.8em; }

.ui-slider-horizontal .ui-slider-handle { top: -0.3em; margin-left: -0.6em;=
 }

.ui-slider-horizontal .ui-slider-range { top: 0px; height: 100%; }

.ui-slider-horizontal .ui-slider-range-min { left: 0px; }

.ui-slider-horizontal .ui-slider-range-max { right: 0px; }

.ui-slider-vertical { width: 0.8em; height: 100px; }

.ui-slider-vertical .ui-slider-handle { left: -0.3em; margin-left: 0px; mar=
gin-bottom: -0.6em; }

.ui-slider-vertical .ui-slider-range { left: 0px; width: 100%; }

.ui-slider-vertical .ui-slider-range-min { bottom: 0px; }

.ui-slider-vertical .ui-slider-range-max { top: 0px; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.composingprograms.com/theme/tutor/css/pytutor.css

@charset "utf-8";

div.ExecutionVisualizer { }

div.ExecutionVisualizer table.visualizer { font-family: verdana, arial, hel=
vetica, sans-serif; font-size: 10pt; margin-bottom: 10px; }

div.ExecutionVisualizer table.visualizer td.vizLayoutTd { vertical-align: t=
op; }

div.ExecutionVisualizer td#stack_td, div.ExecutionVisualizer td#heap_td { v=
ertical-align: top; font-size: 10pt; }

div.ExecutionVisualizer #dataViz { margin-left: 25px; }

div.ExecutionVisualizer div#codeDisplayDiv { margin-left: 0px; }

div.ExecutionVisualizer div#pyCodeOutputDiv { max-height: 450px; overflow: =
auto; margin-left: auto; margin-right: auto; }

div.ExecutionVisualizer table#pyCodeOutput { font-family: "Andale mono", mo=
nospace; font-size: 11pt; line-height: 1.1em; border-collapse: separate; bo=
rder-spacing: 0px; border-top: 1px solid rgb(187, 187, 187); padding-top: 3=
px; border-bottom: 1px solid rgb(187, 187, 187); margin: 6px auto; white-sp=
ace: nowrap; }

div.ExecutionVisualizer table#pyCodeOutput td { white-space: nowrap; vertic=
al-align: middle; }

div.ExecutionVisualizer #leftCodeGutterSVG { width: 18px; height: 0px; }

div.ExecutionVisualizer #prevLegendArrowSVG, div.ExecutionVisualizer #curLe=
gendArrowSVG { width: 18px; height: 10px; }

div.ExecutionVisualizer .arrow { font-size: 16pt; }

div.ExecutionVisualizer table#pyCodeOutput .lineNo { color: rgb(170, 170, 1=
70); padding: 0.2em 0.5em 0.2em 0.3em; text-align: right; }

div.ExecutionVisualizer table#pyCodeOutput .cod { margin-left: 3px; padding=
-left: 7px; text-align: left; }

div.ExecutionVisualizer div#progOutputs { margin-top: 8px; }

div.ExecutionVisualizer div#legendDiv { margin-top: 10px; padding: 0px; tex=
t-align: left; color: rgb(102, 102, 102); font-size: 9pt; }

div.ExecutionVisualizer div#editCodeLinkDiv { text-align: center; margin: 8=
px auto; }

div.ExecutionVisualizer div#annotateLinkDiv { margin-top: 0px; margin-botto=
m: 12px; }

div.ExecutionVisualizer div#stepAnnotationDiv { margin-bottom: 12px; }

div.ExecutionVisualizer textarea#stepAnnotationEditor, div.ExecutionVisuali=
zer textarea#vizTitleEditor, div.ExecutionVisualizer textarea#vizDescriptio=
nEditor { border: 1px solid rgb(153, 153, 153); padding: 4px; overflow: aut=
o; resize: none; }

div.ExecutionVisualizer #errorOutput { color: rgb(233, 63, 52); font-size: =
12pt; padding: 2px; line-height: 1.5em; margin-bottom: 4px; }

div.ExecutionVisualizer #vcrControls { margin: 15px auto; text-align: cente=
r; }

div.ExecutionVisualizer #vcrControls button { margin-left: 2px; margin-righ=
t: 2px; }

div.ExecutionVisualizer #vcrControls #curInstr { margin-left: 4px; margin-r=
ight: 4px; }

div.ExecutionVisualizer #pyStdout { border: 1px solid rgb(153, 153, 153); f=
ont-size: 12pt; padding: 4px; font-family: "Andale mono", monospace; overfl=
ow: auto; resize: none; }

div.ExecutionVisualizer .vizFrame { margin-bottom: 20px; padding-left: 8px;=
 border-left: 2px solid rgb(204, 204, 204); }

div.ExecutionVisualizer .nullObj { }

div.ExecutionVisualizer .stringObj, div.ExecutionVisualizer .customObj, div=
.ExecutionVisualizer .funcObj { font-family: "Andale mono", monospace; whit=
e-space: nowrap; }

div.ExecutionVisualizer .retval { font-size: 9pt; }

div.ExecutionVisualizer .stackFrame .retval { color: rgb(233, 63, 52); }

div.ExecutionVisualizer table.listTbl, div.ExecutionVisualizer table.tupleT=
bl, div.ExecutionVisualizer table.setTbl { background-color: rgb(255, 255, =
198); }

div.ExecutionVisualizer table.listTbl { border: 0px solid black; border-spa=
cing: 0px; }

div.ExecutionVisualizer table.listTbl td.listHeader, div.ExecutionVisualize=
r table.tupleTbl td.tupleHeader { padding-left: 4px; padding-top: 2px; padd=
ing-bottom: 3px; font-size: 8pt; color: rgb(119, 119, 119); text-align: lef=
t; border-left: 1px solid rgb(85, 85, 85); }

div.ExecutionVisualizer table.tupleTbl { border-spacing: 0px; color: black;=
 border-bottom: 1px solid rgb(85, 85, 85); border-top: 1px solid rgb(85, 85=
, 85); border-right: 1px solid rgb(85, 85, 85); }

div.ExecutionVisualizer table.listTbl td.listElt { border-bottom: 1px solid=
 rgb(85, 85, 85); border-left: 1px solid rgb(85, 85, 85); }

div.ExecutionVisualizer table.tupleTbl td.tupleElt { border-left: 1px solid=
 rgb(85, 85, 85); }

div.ExecutionVisualizer table.customObjTbl { background-color: white; color=
: black; border: 1px solid black; }

div.ExecutionVisualizer table.customObjTbl td.customObjElt { padding: 5px; =
}

div.ExecutionVisualizer table.listTbl td.listElt, div.ExecutionVisualizer t=
able.tupleTbl td.tupleElt { padding: 0px 10px 8px; vertical-align: bottom; =
}

div.ExecutionVisualizer table.setTbl { border: 1px solid rgb(85, 85, 85); b=
order-spacing: 0px; text-align: center; }

div.ExecutionVisualizer table.setTbl td.setElt { padding: 8px; }

div.ExecutionVisualizer table.dictTbl, div.ExecutionVisualizer table.instTb=
l, div.ExecutionVisualizer table.classTbl { border-spacing: 1px; }

div.ExecutionVisualizer table.dictTbl td.dictKey, div.ExecutionVisualizer t=
able.instTbl td.instKey, div.ExecutionVisualizer table.classTbl td.classKey=
 { background-color: rgb(250, 235, 191); }

div.ExecutionVisualizer table.dictTbl td.dictVal, div.ExecutionVisualizer t=
able.instTbl td.instVal, div.ExecutionVisualizer table.classTbl td.classVal=
 { background-color: rgb(255, 255, 198); }

div.ExecutionVisualizer table.dictTbl td.dictKey, div.ExecutionVisualizer t=
able.instTbl td.instKey, div.ExecutionVisualizer table.classTbl td.classKey=
 { padding: 12px 4px 5px 10px; text-align: right; }

div.ExecutionVisualizer table.dictTbl td.dictVal, div.ExecutionVisualizer t=
able.instTbl td.instVal, div.ExecutionVisualizer table.classTbl td.classVal=
 { padding: 12px 10px 5px 4px; }

div.ExecutionVisualizer table.classTbl td, div.ExecutionVisualizer table.in=
stTbl td { border-bottom: 1px solid rgb(136, 136, 136); }

div.ExecutionVisualizer table.classTbl td.classVal, div.ExecutionVisualizer=
 table.instTbl td.instVal { border-left: 1px solid rgb(136, 136, 136); }

div.ExecutionVisualizer table.classTbl { border-collapse: collapse; border:=
 1px solid rgb(136, 136, 136); }

div.ExecutionVisualizer td.listElt table.dictTbl, div.ExecutionVisualizer t=
d.tupleElt table.dictTbl, div.ExecutionVisualizer td.dictVal table.dictTbl,=
 div.ExecutionVisualizer td.instVal table.dictTbl, div.ExecutionVisualizer =
td.classVal table.dictTbl { border: 1px solid rgb(136, 136, 136); }

div.ExecutionVisualizer .objectIdLabel { font-size: 8pt; color: rgb(68, 68,=
 68); margin-bottom: 2px; }

div.ExecutionVisualizer .typeLabel { font-size: 8pt; color: rgb(85, 85, 85)=
; margin-bottom: 2px; }

div.ExecutionVisualizer div#stack, div.ExecutionVisualizer div#globals_area=
 { padding-left: 10px; padding-right: 30px; }

div.ExecutionVisualizer div.stackFrame, div.ExecutionVisualizer div.zombieS=
tackFrame { background-color: rgb(255, 255, 255); margin-bottom: 15px; padd=
ing: 2px 6px 4px; font-size: 10pt; white-space: nowrap; }

div.ExecutionVisualizer div.zombieStackFrame { border-left: 1px dotted rgb(=
170, 170, 170); color: rgb(128, 128, 128); }

div.ExecutionVisualizer div.highlightedStackFrame { background-color: rgb(2=
15, 231, 251); }

div.ExecutionVisualizer div.stackFrame, div.ExecutionVisualizer div.highlig=
htedStackFrame { border-left: 1px solid rgb(166, 179, 182); }

div.ExecutionVisualizer div.stackFrameHeader { font-family: "Andale mono", =
monospace; font-size: 10pt; margin-top: 4px; margin-bottom: 3px; white-spac=
e: nowrap; }

div.ExecutionVisualizer td.stackFrameVar { text-align: right; padding-right=
: 8px; padding-top: 3px; padding-bottom: 3px; }

div.ExecutionVisualizer td.stackFrameValue { text-align: left; border-botto=
m: 1px solid rgb(170, 170, 170); border-left: 1px solid rgb(170, 170, 170);=
 vertical-align: middle; padding-top: 3px; padding-left: 3px; padding-botto=
m: 3px; }

div.ExecutionVisualizer .stackFrameVarTable tr { }

div.ExecutionVisualizer .stackFrameVarTable { text-align: right; padding-to=
p: 3px; margin-left: auto; margin-right: 0px; border-collapse: separate; bo=
rder-spacing: 2px; }

div.ExecutionVisualizer div#heap { float: left; padding-left: 30px; }

div.ExecutionVisualizer td.toplevelHeapObject { padding: 4px 8px; }

div.ExecutionVisualizer table.heapRow { margin-bottom: 10px; }

div.ExecutionVisualizer div.heapObject { padding-left: 2px; }

div.ExecutionVisualizer div.heapPrimitive { padding-left: 4px; }

div.ExecutionVisualizer div#stackHeader { margin-bottom: 15px; text-align: =
right; }

div.ExecutionVisualizer div#heapHeader { margin-bottom: 15px; }

div.ExecutionVisualizer div#stackHeader, div.ExecutionVisualizer div#heapHe=
ader { color: rgb(51, 51, 51); font-size: 10pt; }

div.ExecutionVisualizer #executionSlider { margin: 15px auto 5px; width: 95=
%; }

div.ExecutionVisualizer #executionSliderCaption { font-size: 8pt; color: rg=
b(102, 102, 102); margin-top: 15px; }

div.ExecutionVisualizer #executionSliderFooter { margin-top: -7px; }

div.ExecutionVisualizer .ui-slider .ui-slider-handle { border: 1px solid rg=
b(153, 153, 153); }

textarea.bubbleInputText { border: 1px solid rgb(204, 204, 204); outline: n=
one; overflow: auto; resize: none; width: 225px; max-width: 225px; height: =
35px; max-height: 35px; }

.ui-tooltip-pgbootstrap, textarea.bubbleInputText { font-family: verdana, a=
rial, helvetica, sans-serif; font-size: 9pt; line-height: 1.3em; }

.ui-tooltip-pgbootstrap { color: rgb(51, 51, 51); background-color: rgb(255=
, 255, 255); max-width: 250px; min-width: 10px; border: 2px solid rgb(66, 1=
32, 211); cursor: pointer; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.=
2) 2px 2px 3px 0px; background-clip: padding-box; }

.ui-tooltip-pgbootstrap .ui-tooltip-titlebar { font-size: 18px; line-height=
: 22px; border-bottom: 1px solid rgb(204, 204, 204); background-color: tran=
sparent; }

.ui-tooltip-pgbootstrap .ui-tooltip-content { padding: 5px 8px; }

.ui-tooltip-pgbootstrap .ui-tooltip-titlebar .ui-state-default { right: 9px=
; top: 49%; border-style: none; }

.ui-tooltip-pgbootstrap .ui-tooltip-icon { background: white; }

.ui-tooltip-pgbootstrap .ui-tooltip-icon .ui-icon { width: auto; height: au=
to; float: right; font-size: 20px; font-weight: bold; line-height: 18px; co=
lor: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: 0.=
2; }

.ui-tooltip-pgbootstrap .ui-tooltip-icon .ui-icon:hover { color: rgb(0, 0, =
0); text-decoration: none; cursor: pointer; opacity: 0.4; }

.ui-tooltip-pgbootstrap { border-radius: 5px; }

.ui-tooltip-pgbootstrap-stub { border: 1px solid rgb(153, 153, 153); }

.ui-tooltip-pgbootstrap-stub .ui-tooltip-content { padding: 6px 9px; }

div.ExecutionVisualizer .annotationText, div.ExecutionVisualizer .vizDescri=
ptionText { font-family: verdana, arial, helvetica, sans-serif; font-size: =
11pt; line-height: 1.5em; }

div.ExecutionVisualizer .vizTitleText { font-family: verdana, arial, helvet=
ica, sans-serif; font-size: 16pt; margin-bottom: 12pt; }

div.ExecutionVisualizer div#vizHeader { margin-bottom: 10px; width: 700px; =
max-width: 700px; }

div.ExecutionVisualizer .highlight-prev { background-color: rgb(240, 240, 2=
34); }

div.ExecutionVisualizer .highlight-curr { background-color: rgb(255, 255, 1=
02); }

div.ExecutionVisualizer .highlight-legend { padding: 2px; }

.ui-resizable-e { background-color: rgb(221, 221, 221); width: 1px; border:=
 3px solid white; }

.ui-resizable-e:hover { border-color: rgb(221, 221, 221); }

div.ExecutionVisualizer .pycrazy-highlight-prev { background-color: rgb(238=
, 238, 238); }

div.ExecutionVisualizer .pycrazy-highlight-cur { background-color: rgb(255,=
 255, 102); }

div.ExecutionVisualizer .pycrazy-highlight-prev-and-cur { background-color:=
 rgb(255, 255, 102); text-decoration: none; border-bottom: 1px solid rgb(15=
3, 153, 153); }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.composingprograms.com/theme/css/pygment.css

@charset "utf-8";

.hll { background-color: rgb(238, 238, 238); }

.c { color: rgb(64, 128, 144); font-style: italic; }

.err { border: 1px solid rgb(255, 0, 0); }

.k { color: rgb(0, 112, 32); font-weight: bold; }

.o { color: rgb(102, 102, 102); }

.cm { color: rgb(64, 128, 144); font-style: italic; }

.cp { color: rgb(0, 112, 32); }

.c1 { color: rgb(64, 128, 144); font-style: italic; }

.cs { background-color: rgb(255, 240, 240); color: rgb(64, 128, 144); }

.gd { color: rgb(160, 0, 0); }

.ge { font-style: italic; }

.gr { color: rgb(255, 0, 0); }

.gh { color: rgb(0, 0, 128); font-weight: bold; }

.gi { color: rgb(0, 160, 0); }

.go { color: rgb(48, 48, 48); }

.gp { color: rgb(198, 93, 9); font-weight: bold; }

.gs { font-weight: bold; }

.gu { color: rgb(128, 0, 128); font-weight: bold; }

.gt { color: rgb(0, 64, 208); }

.kc { color: rgb(0, 112, 32); font-weight: bold; }

.kd { color: rgb(0, 112, 32); font-weight: bold; }

.kn { color: rgb(0, 112, 32); font-weight: bold; }

.kp { color: rgb(0, 112, 32); }

.kr { color: rgb(0, 112, 32); font-weight: bold; }

.kt { color: rgb(144, 32, 0); }

.m { color: rgb(32, 128, 80); }

.s { color: rgb(64, 112, 160); }

.na { color: rgb(64, 112, 160); }

.nb { color: rgb(0, 112, 32); }

.nc { color: rgb(14, 132, 181); font-weight: bold; }

.no { color: rgb(96, 173, 213); }

.nd { color: rgb(85, 85, 85); font-weight: bold; }

.ni { color: rgb(213, 85, 55); font-weight: bold; }

.ne { color: rgb(0, 112, 32); }

.nf { color: rgb(6, 40, 126); }

.nl { color: rgb(0, 32, 112); font-weight: bold; }

.nn { color: rgb(14, 132, 181); font-weight: bold; }

.nt { color: rgb(6, 40, 115); font-weight: bold; }

.nv { color: rgb(187, 96, 213); }

.ow { color: rgb(0, 112, 32); font-weight: bold; }

.w { color: rgb(187, 187, 187); }

.mf { color: rgb(32, 128, 80); }

.mh { color: rgb(32, 128, 80); }

.mi { color: rgb(32, 128, 80); }

.mo { color: rgb(32, 128, 80); }

.sb { color: rgb(64, 112, 160); }

.sc { color: rgb(64, 112, 160); }

.sd { color: rgb(64, 112, 160); font-style: italic; }

.s2 { color: rgb(64, 112, 160); }

.se { color: rgb(64, 112, 160); font-weight: bold; }

.sh { color: rgb(64, 112, 160); }

.si { color: rgb(112, 160, 208); font-style: italic; }

.sx { color: rgb(198, 93, 9); }

.sr { color: rgb(35, 83, 136); }

.s1 { color: rgb(64, 112, 160); }

.ss { color: rgb(81, 121, 24); }

.bp { color: rgb(0, 112, 32); }

.vc { color: rgb(187, 96, 213); }

.vg { color: rgb(187, 96, 213); }

.vi { color: rgb(187, 96, 213); }

.il { color: rgb(32, 128, 80); }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.composingprograms.com/theme/css/cp.css

@charset "utf-8";

@import url("pygment.css");

html { font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-we=
ight: 400; color: rgb(72, 72, 72); line-height: 1.3; }

p { margin: 0px 0px 10px; }

.subHeader { font-size: 21px; font-weight: 200; line-height: 30px; margin-b=
ottom: 10px; }

em { font-style: italic; }

h1, h2, h3, h4, h5, h6 { font-family: inherit; font-weight: 700; line-heigh=
t: 20px; color: inherit; text-rendering: optimizelegibility; }

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small { font-weight: 4=
00; color: rgb(123, 123, 123); }

h1, h2, h3 { line-height: 40px; vertical-align: top; }

h1 { font-size: 24px; }

h2 { font-size: 20px; }

h3 { font-size: 18px; }

h4 { font-size: 16px; }

h5 { font-size: 14px; }

h6 { font-size: 14px; }

h1 small { font-size: 20px; }

h2 small { font-size: 16px; }

h3 small { font-size: 14px; }

h4 small { font-size: 14px; }

ul, ol { margin: 0px 0px 10px 25px; padding: 0px; }

ul ul, ul ol, ol ol, ol ul { margin-bottom: 0px; }

li { line-height: 20px; }

a { color: rgb(192, 91, 77); text-decoration: none; }

a:hover, a:focus { color: rgb(165, 71, 58); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

.center { text-align: center; }

html { background: rgb(255, 255, 255); }

.left { float: left; }

.right { float: right; }

.container { }

.wrap { width: 960px; padding-left: 20px; padding-right: 20px; }

.skinnyWrap { width: 690px; margin-left: auto; margin-right: auto; padding-=
left: 20px; padding-right: 20px; }

hr { height: 0px; border-top: 1px solid rgb(204, 204, 204); border-bottom: =
1px solid rgb(238, 238, 238); }

ul, li { margin-left: 20px; }

.nav-main { background: rgb(34, 34, 34); color: rgb(250, 250, 250); top: 0p=
x; height: 40px; box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px; width: 100%; z=
-index: 100; }

.nav-main::before, .nav-main::after { content: " "; display: table; }

.nav-main::after { clear: both; }

.nav-main a { color: rgb(233, 233, 233); text-decoration: none; }

.nav-main .nav-site { margin: 0px; padding-left: 50px; }

.nav-main .nav-site li { margin: 0px; }

.nav-main .nav-site a { padding: 0px 8px; text-transform: uppercase; letter=
-spacing: 1px; line-height: 40px; display: inline-block; height: 40px; colo=
r: rgb(170, 170, 170); }

.nav-main .nav-site a:hover { color: rgb(250, 250, 250); background: rgb(85=
, 85, 85); }

.nav-main .nav-home { color: rgb(250, 250, 250); font-size: 20px; line-heig=
ht: 38px; }

.nav-main .nav-logo { color: rgb(221, 221, 221); vertical-align: middle; te=
xt-transform: uppercase; }

.nav-main .nav-logo-compose { color: rgb(0, 216, 255); vertical-align: top;=
 }

.nav-main ul { display: inline; }

.nav-main li { display: inline; }

.hero { height: 300px; background: rgb(45, 45, 45); padding-top: 50px; colo=
r: rgb(233, 233, 233); font-weight: 300; }

.hero .text { font-size: 64px; text-align: center; }

.hero .minitext { font-size: 16px; text-align: center; text-transform: uppe=
rcase; }

.hero strong { color: rgb(97, 218, 251); font-weight: 400; }

.nav-docs { color: rgb(45, 45, 45); font-size: 12px; float: left; top: 100p=
x; width: 180px; }

.nav-docs ul { list-style: none; margin: 0px; }

.nav-docs ul ul { margin-left: 10px; }

.nav-docs li { margin: 0px; list-style-type: none; }

.nav-docs h3 { font-size: 12px; line-height: 20px; }

.nav-docs a { color: rgb(102, 102, 102); display: block; }

.nav-docs a:hover { text-decoration: none; color: rgb(204, 122, 111); }

.nav-docs a.active { color: rgb(204, 122, 111); }

.nav-docs .nav-docs-section { border-bottom: 1px solid rgb(204, 204, 204); =
border-top: 1px solid rgb(238, 238, 238); padding: 12px 0px; }

.nav-docs .nav-docs-section:first-child { padding-top: 0px; border-top: 0px=
; }

.nav-docs .nav-docs-section:last-child { padding-bottom: 0px; border-bottom=
: 0px; }

.home-section { margin: 50px 0px; }

.home-divider { border-top-color: rgb(187, 187, 187); margin: 0px auto; wid=
th: 400px; }

footer { font-size: 11px; margin-top: 36px; margin-bottom: 18px; border-top=
: 1px solid rgb(170, 170, 170); padding-top: 4px; overflow: auto; }

section.black content { padding-bottom: 18px; }

.documentationContent { padding-top: 10px; }

.documentationContent::before, .documentationContent::after { content: " ";=
 display: table; }

.documentationContent::after { clear: both; }

.documentationContent .subHeader { font-size: 24px; }

.documentationContent h2 { margin-top: 0px; }

.documentationContent blockquote { padding: 15px 30px 15px 15px; margin: 20=
px 0px; background-color: rgba(204, 122, 111, 0.1); border-left: 5px solid =
rgba(191, 87, 73, 0.2); }

.documentationContent blockquote h4 { margin-top: 0px; }

.documentationContent blockquote p:last-child { margin-bottom: 0px; }

.documentationContent blockquote p:first-child { margin-top: 0px; text-rend=
ering: optimizelegibility; }

.docs-prevnext { padding-top: 40px; padding-bottom: 40px; }

.row { padding-bottom: 4px; }

.row .span4 { width: 33.33%; display: table-cell; }

.row .span8 { width: 66.66%; display: table-cell; }

.row .span6 { width: 50%; display: table-cell; }

p { margin: 10px 0px; }

pre { margin: 0px; }

.highlight { padding: 10px 0px; margin: 0px; }

figure { text-align: center; }

.inner-content { float: right; width: 720px; }

.nosidebar .inner-content { float: none; margin: 0px auto; }

.post-list-item + .post-list-item { margin-top: 60px; }

div.CodeMirror pre, div.CodeMirror-linenumber, code { font-family: source-c=
ode-pro, Menlo, "Courier New", Consolas, monospace; font-size: 13px; line-h=
eight: 20px; }

div.CodeMirror-linenumber::after { content: "."; }

.CodeMirror, div.CodeMirror-gutters, div.highlight { border: none; }

small code, li code, p code { color: rgb(85, 85, 85); background-color: rgb=
a(0, 0, 0, 0.04); padding: 1px 3px; }

.cm-s-default span.cm-string-2 { color: inherit; }

.playground { }

.playground::before, .playground::after { content: " "; display: table; }

.playground::after { clear: both; }

.playground::before { border-radius: 3px 3px 0px 0px; padding: 3px 7px; fon=
t-size: 12px; font-weight: 700; color: rgb(194, 192, 188); background-color=
: rgb(241, 237, 228); content: "Live editor"; border-bottom: none !importan=
t; }

.playground::before, .playgroundCode, .playgroundPreview { border: 1px soli=
d rgba(16, 16, 16, 0.1); }

.playgroundCode { border-radius: 0px 3px 3px; float: left; overflow: hidden=
; width: 600px; }

.playgroundPreview { background-color: rgb(255, 255, 255); border-radius: 3=
px; float: right; padding: 15px 20px; width: 280px; }

.MarkdownEditor textarea { width: 100%; height: 100px; }

.hll { background-color: rgb(247, 235, 198); border-left: 5px solid rgb(247=
, 216, 124); display: block; margin-left: -14px; margin-right: -14px; paddi=
ng-left: 9px; }

.downloadCenter { text-align: center; margin-top: 20px; margin-bottom: 25px=
; }

.downloadSection:hover { text-decoration: none !important; }

@media screen and (max-width: 960px) {
  .nav-main { position: static; }
  .container { padding-top: 0px; }
}

.post { margin-bottom: 30px; }

p.attribution { text-align: right; }

.vizLayoutDiv { margin-top: 10px; }

.literal { font-weight: 500; color: rgb(0, 0, 0); }

table.docutils { margin: 30px 0px; border: 0px; border-collapse: collapse; =
table-layout: auto; }

table.docutils th, table.docutils td { border: inherit; padding: 8px; }

table.docutils th { white-space: nowrap; text-align: left; background-color=
: rgb(221, 221, 221); }

table.docutils tr:nth-child(2n) { background-color: rgb(221, 221, 221); bor=
der: inherit; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2384756d-bb9e-4ccd-ac16-1463494f7638@mhtml.blink

@charset "utf-8";

.MJXp-script { font-size: 0.8em; }

.MJXp-right { transform-origin: right center; }

.MJXp-bold { font-weight: bold; }

.MJXp-italic { font-style: italic; }

.MJXp-scr { font-family: MathJax_Script, "Times New Roman", Times, STIXGene=
ral, serif; }

.MJXp-frak { font-family: MathJax_Fraktur, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-sf { font-family: MathJax_SansSerif, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-cal { font-family: MathJax_Caligraphic, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-mono { font-family: MathJax_Typewriter, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-largeop { font-size: 150%; }

.MJXp-largeop.MJXp-int { vertical-align: -0.2em; }

.MJXp-math { display: inline-block; line-height: 1.2; text-indent: 0px; fon=
t-family: "Times New Roman", Times, STIXGeneral, serif; white-space: nowrap=
; border-collapse: collapse; }

.MJXp-display { display: block; text-align: center; margin: 1em 0px; }

.MJXp-math span { display: inline-block; }

.MJXp-box { display: block !important; text-align: center; }

.MJXp-box::after { content: " "; }

.MJXp-rule { display: block !important; margin-top: 0.1em; }

.MJXp-char { display: block !important; }

.MJXp-mo { margin: 0px 0.15em; }

.MJXp-mfrac { margin: 0px 0.125em; vertical-align: 0.25em; }

.MJXp-denom { display: inline-table !important; width: 100%; }

.MJXp-denom > * { display: table-row !important; }

.MJXp-surd { vertical-align: top; }

.MJXp-surd > * { display: block !important; }

.MJXp-script-box > * { display: table !important; height: 50%; }

.MJXp-script-box > * > * { display: table-cell !important; vertical-align: =
top; }

.MJXp-script-box > :last-child > * { vertical-align: bottom; }

.MJXp-script-box > * > * > * { display: block !important; }

.MJXp-mphantom { visibility: hidden; }

.MJXp-munderover { display: inline-table !important; }

.MJXp-over { display: inline-block !important; text-align: center; }

.MJXp-over > * { display: block !important; }

.MJXp-munderover > * { display: table-row !important; }

.MJXp-mtable { vertical-align: 0.25em; margin: 0px 0.125em; }

.MJXp-mtable > * { display: inline-table !important; vertical-align: middle=
; }

.MJXp-mtr { display: table-row !important; }

.MJXp-mtd { text-align: center; padding: 0.5em 0px 0px 0.5em; display: tabl=
e-cell !important; }

.MJXp-mtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-mlabeledtr { display: table-row !important; }

.MJXp-mlabeledtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mlabeledtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-merror { background-color: rgb(255, 255, 136); color: rgb(204, 0, 0);=
 border: 1px solid rgb(204, 0, 0); padding: 1px 3px; font-style: normal; fo=
nt-size: 90%; }

.MJXp-scale0 { transform: scaleX(0); }

.MJXp-scale1 { transform: scaleX(0.1); }

.MJXp-scale2 { transform: scaleX(0.2); }

.MJXp-scale3 { transform: scaleX(0.3); }

.MJXp-scale4 { transform: scaleX(0.4); }

.MJXp-scale5 { transform: scaleX(0.5); }

.MJXp-scale6 { transform: scaleX(0.6); }

.MJXp-scale7 { transform: scaleX(0.7); }

.MJXp-scale8 { transform: scaleX(0.8); }

.MJXp-scale9 { transform: scaleX(0.9); }

.MathJax_PHTML .noError { font-size: 90%; text-align: left; color: black; p=
adding: 1px 3px; border: 1px solid; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-51cc09e5-d7ba-4ed1-aca1-22988d8ebcc8@mhtml.blink

@charset "utf-8";

.MathJax_Preview { color: rgb(136, 136, 136); }

#MathJax_Message { position: fixed; left: 1em; bottom: 1.5em; background-co=
lor: rgb(230, 230, 230); border: 1px solid rgb(149, 149, 149); margin: 0px;=
 padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto;=
 white-space: nowrap; }

#MathJax_MSIE_Frame { position: absolute; top: 0px; left: 0px; width: 0px; =
z-index: 101; border: 0px; margin: 0px; padding: 0px; }

.MathJax_Error { color: rgb(204, 0, 0); font-style: italic; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-3346840f-25ad-4036-8896-83442c8ffd73@mhtml.blink

@charset "utf-8";

#MathJax_Zoom { position: absolute; background-color: rgb(240, 240, 240); o=
verflow: auto; display: block; z-index: 301; padding: 0.5em; border: 1px so=
lid black; margin: 0px; font-weight: normal; font-style: normal; text-align=
: left; text-indent: 0px; text-transform: none; line-height: normal; letter=
-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space:=
 nowrap; float: none; box-sizing: content-box; box-shadow: rgb(170, 170, 17=
0) 5px 5px 15px; }

#MathJax_ZoomOverlay { position: absolute; left: 0px; top: 0px; z-index: 30=
0; display: inline-block; width: 100%; height: 100%; border: 0px; padding: =
0px; margin: 0px; background-color: white; opacity: 0; }

#MathJax_ZoomFrame { position: relative; display: inline-block; height: 0px=
; width: 0px; }

#MathJax_ZoomEventTrap { position: absolute; left: 0px; top: 0px; z-index: =
302; display: inline-block; border: 0px; padding: 0px; margin: 0px; backgro=
und-color: white; opacity: 0; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-578fa75a-a5f8-4764-936c-535d31688dbc@mhtml.blink

@charset "utf-8";

.MJX_Assistive_MathML { top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px)=
; user-select: none; position: absolute !important; padding: 1px 0px 0px !i=
mportant; border: 0px !important; height: 1px !important; width: 1px !impor=
tant; overflow: hidden !important; display: block !important; }

.MJX_Assistive_MathML.MJX_Assistive_MathML_Block { width: 100% !important; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-843f2c7b-66ab-4af6-bedf-dacc1e92e340@mhtml.blink

@charset "utf-8";

.MathJax_Preview .MJXf-math { color: inherit !important; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0a2f0038-63ce-4013-91bc-5eaeec4eb620@mhtml.blink

@charset "utf-8";

#MathJax_About { position: fixed; left: 50%; width: auto; text-align: cente=
r; border: 3px outset; padding: 1em 2em; background-color: rgb(221, 221, 22=
1); color: black; cursor: default; font-family: message-box; font-size: 120=
%; font-style: normal; text-indent: 0px; text-transform: none; line-height:=
 normal; letter-spacing: normal; word-spacing: normal; overflow-wrap: norma=
l; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }

#MathJax_About.MathJax_MousePost { outline: none; }

.MathJax_Menu { position: absolute; background-color: white; color: black; =
width: auto; padding: 2px; border: 1px solid rgb(204, 204, 204); margin: 0p=
x; cursor: default; font-style: ; font-variant: normal; font-weight: ; font=
-stretch: ; font-size: ; font-family: ; font-optical-sizing: ; font-size-ad=
just: ; font-kerning: ; font-feature-settings: ; font-variation-settings: ;=
 text-align: left; text-indent: 0px; text-transform: none; line-height: nor=
mal; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; w=
hite-space: nowrap; float: none; z-index: 201; box-shadow: rgb(128, 128, 12=
8) 0px 10px 20px; }

.MathJax_MenuItem { padding: 2px 2em; background: transparent; }

.MathJax_MenuArrow { position: absolute; right: 0.5em; padding-top: 0.25em;=
 color: rgb(102, 102, 102); font-size: 0.75em; }

.MathJax_MenuActive .MathJax_MenuArrow { color: white; }

.MathJax_MenuArrow.RTL { left: 0.5em; right: auto; }

.MathJax_MenuCheck { position: absolute; left: 0.7em; }

.MathJax_MenuCheck.RTL { right: 0.7em; left: auto; }

.MathJax_MenuRadioCheck { position: absolute; left: 1em; }

.MathJax_MenuRadioCheck.RTL { right: 1em; left: auto; }

.MathJax_MenuLabel { padding: 2px 2em 4px 1.33em; font-style: italic; }

.MathJax_MenuRule { border-top: 1px solid rgb(204, 204, 204); margin: 4px 1=
px 0px; }

.MathJax_MenuDisabled { color: graytext; }

.MathJax_MenuActive { background-color: highlight; color: highlighttext; }

.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus { background-color: r=
gb(232, 232, 232); }

.MathJax_ContextMenu:focus { outline: none; }

.MathJax_ContextMenu .MathJax_MenuItem:focus { outline: none; }

#MathJax_AboutClose { top: 0.2em; right: 0.2em; }

.MathJax_Menu .MathJax_MenuClose { top: -10px; left: -10px; }

.MathJax_MenuClose { position: absolute; cursor: pointer; display: inline-b=
lock; border: 2px solid rgb(170, 170, 170); border-radius: 18px; font-famil=
y: "Courier New", Courier; font-size: 24px; color: rgb(240, 240, 240); }

.MathJax_MenuClose span { display: block; background-color: rgb(170, 170, 1=
70); border: 1.5px solid; border-radius: 18px; line-height: 0; padding: 8px=
 0px 6px; }

.MathJax_MenuClose:hover { color: white !important; border: 2px solid rgb(2=
04, 204, 204) !important; }

.MathJax_MenuClose:hover span { background-color: rgb(204, 204, 204) !impor=
tant; }

.MathJax_MenuClose:hover:focus { outline: none; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-fb967712-8a2e-414e-99f4-02cd24dc4f8f@mhtml.blink

@charset "utf-8";

.MathJax_Hover_Frame { border-radius: 0.25em; box-shadow: rgb(136, 51, 170)=
 0px 0px 15px; display: inline-block; position: absolute; border: 1px solid=
 rgb(170, 102, 221) !important; }

.MathJax_Menu_Button .MathJax_Hover_Arrow { position: absolute; cursor: poi=
nter; display: inline-block; border: 2px solid rgb(170, 170, 170); border-r=
adius: 4px; font-family: "Courier New", Courier; font-size: 9px; color: rgb=
(240, 240, 240); }

.MathJax_Menu_Button .MathJax_Hover_Arrow span { display: block; background=
-color: rgb(170, 170, 170); border: 1px solid; border-radius: 3px; line-hei=
ght: 0; padding: 4px; }

.MathJax_Hover_Arrow:hover { color: white !important; border: 2px solid rgb=
(204, 204, 204) !important; }

.MathJax_Hover_Arrow:hover span { background-color: rgb(204, 204, 204) !imp=
ortant; }
------MultipartBoundary--KP1oiwUtJled5sAlLfwANjSXnVUzkiwKFVKDnoR71D------
